 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 90112
    3                      ; Data size: 33552
    4                      ; Text size: 37300
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0xb000
    8                      ;;; 
    9                      ;;; Initialization code for programs running in the DLX simulator.
   10                      ;;; Copyright (c) 1999 by Ethan Miller
   11                      ;;; 
   12                      ;;;
   14  0000b000          	.text
   15  00001000          	.align 2
   17                      ;;;----------------------------------------------------------------------
   18                      ;;; osinit
   19                      ;;;
   20                      ;;; This is the first function called by the simulator, even before main.
   21                      ;;; Since it's called BEFORE any "real" routines, we can use any registers
   22                      ;;; we want as long as we don't mess up the stack or frame pointers.
   23                      ;;;
   24                      ;;; This routine loads the interrupt vector to point to the interrupt
   25                      ;;; handler later in this file.  It should never return, because _main
   26                      ;;; should call exitsim() or exit() rather than returning here.
   27                      ;;; 
   28                      ;;; After initialization is done, this routine jumps to _main to start the
   29                      ;;; C code portion of the operating system.
   30                      ;;;----------------------------------------------------------------------
   31  00001000          	.proc _osinit
   32  00001000          	.global _osinit
   33  00001000          	_osinit:
   34                      ;; Set up the interrupt handler
   35  00001000  3c010000	lhi	r1,(_intrhandler>>16)&0xffff
   36  00001004  24211010	addui	r1,r1,_intrhandler&0xffff
   37  00001008  00204030	movi2s	intrvec,r1
   38                      ;; Never returns because exitsim is called first
   39  0000100c  08005b68	j	_main
   40  00001010          	.endproc _osinit
   42                      ;;;----------------------------------------------------------------------
   43                      ;;; intrhandler
   44                      ;;;
   45                      ;;; Called when an interrupt or trap is received by the CPU.  It stores the
   46                      ;;; current register set on the system stack.  It then pushes the parameters
   47                      ;;; to the C interrupt handler onto the stack: the ISR, IAR, and CAUSE
   48                      ;;; registers along with the original stack pointer.  The C interrupt
   49                      ;;; handler can then copy arguments from the original stack, performing
   50                      ;;; user -> system translations if necessary.
   51                      ;;; 
   52                      ;;;----------------------------------------------------------------------
   53  00001010          	.proc _intrhandler
   54  00001010          	.global _intrhandler
   55  00001010          	_intrhandler:
   56                      ;; We can use r31 as scratch space because its value was saved in
   57                      ;; ir31.  However, we must save the "real" value of r31 on the
   58                      ;; stack.
   60                      ;; Always store the registers on the system stack.  This way, we don't
   61                      ;; have to worry about translating things from user -> system.  We
   62                      ;; use r31 as the base register because its value was saved in ir31.
   64                      ;; If this was a user process, load r29 with the current system
   65                      ;; stack pointer.  If it was a system process, just use the
   66                      ;; current stack pointer.
   67  00001010  0060f831	movs2i	r31,isr
   68  00001014  33ff0040	andi	r31,r31,0x40
   69  00001018  17e0001c	bnez	r31,intrSystem_LF0
   70  0000101c  3c1f0000	lhi	r31,(_currentPCB>>16)&0xffff
   71  00001020  27fffe10	addui	r31,r31,_currentPCB&0xffff
   72  00001024  8fff0000	lw	r31,(r31)
   73  00001028  8fff0004	lw	r31,4(r31)
   74                      ;; Save the original (user) stack pointer
   75  0000102c  affdff48	sw	-184(r31),r29; we haven't yet bumped SP, and 156-340 = -184
   76                      ;; Copy the system stack pointer into r29 (current stack pointer)
   77  00001030  37fd0000	ori	r29,r31,0
   78  00001034  10000004	beqz	r0,intrSaveReg_LF0; skip over the system part....
   79  00001038          	intrSystem_LF0:
   80                      ;; Use the stack pointer we're already using
   81                      ;; Save r29 because we won't save it later
   82  00001038  afbdff48	sw	-184(r29),r29; we haven't yet bumped SP, and 156-340 = -184
   83  0000103c          	intrSaveReg_LF0:
   84                      ;; Adjust stack pointer for all the stuff we're going to push.  This
   85                      ;; is a bit more space than we need currently, but it leaves room
   86                      ;; for more stuff if needed.
   87  0000103c  2fbd0154	subui	r29,r29,#340
   88                      ;; Push all the stuff onto the stack
   89  00001040  afa1002c	sw	44(r29),r1
   90  00001044  afa20030	sw	48(r29),r2
   91  00001048  afa30034	sw	52(r29),r3
   92  0000104c  afa40038	sw	56(r29),r4
   93  00001050  afa5003c	sw	60(r29),r5
   94  00001054  afa60040	sw	64(r29),r6
   95  00001058  afa70044	sw	68(r29),r7
   96  0000105c  afa80048	sw	72(r29),r8
   97  00001060  afa9004c	sw	76(r29),r9
   98  00001064  afaa0050	sw	80(r29),r10
   99  00001068  afab0054	sw	84(r29),r11
  100  0000106c  afac0058	sw	88(r29),r12
  101  00001070  afad005c	sw	92(r29),r13
  102  00001074  afae0060	sw	96(r29),r14
  103  00001078  afaf0064	sw	100(r29),r15
  104  0000107c  afb00068	sw	104(r29),r16
  105  00001080  afb1006c	sw	108(r29),r17
  106  00001084  afb20070	sw	112(r29),r18
  107  00001088  afb30074	sw	116(r29),r19
  108  0000108c  afb40078	sw	120(r29),r20
  109  00001090  afb5007c	sw	124(r29),r21
  110  00001094  afb60080	sw	128(r29),r22
  111  00001098  afb70084	sw	132(r29),r23
  112  0000109c  afb80088	sw	136(r29),r24
  113  000010a0  afb9008c	sw	140(r29),r25
  114  000010a4  afba0090	sw	144(r29),r26
  115  000010a8  afbb0094	sw	148(r29),r27
  116  000010ac  afbc0098	sw	152(r29),r28
  117                      ;; Skip r29 - stored earlier!
  118  000010b0  afbe00a0	sw	160(r29),r30
  119                      ;; Load the value of r31 from the special register and then save it
  120  000010b4  00401831	movs2i	r3,ir31
  121  000010b8  afa300a4	sw	164(r29),r3
  122                      ;; Store the floating-point registers
  123  000010bc  bfa000a8	sd	168(r29),f0
  124  000010c0  bfa200b0	sd	176(r29),f2
  125  000010c4  bfa400b8	sd	184(r29),f4
  126  000010c8  bfa600c0	sd	192(r29),f6
  127  000010cc  bfa800c8	sd	200(r29),f8
  128  000010d0  bfaa00d0	sd	208(r29),f10
  129  000010d4  bfac00d8	sd	216(r29),f12
  130  000010d8  bfae00e0	sd	224(r29),f14
  131  000010dc  bfb000e8	sd	232(r29),f16
  132  000010e0  bfb200f0	sd	240(r29),f18
  133  000010e4  bfb400f8	sd	248(r29),f20
  134  000010e8  bfb60100	sd	256(r29),f22
  135  000010ec  bfb80108	sd	264(r29),f24
  136  000010f0  bfba0110	sd	272(r29),f26
  137  000010f4  bfbc0118	sd	280(r29),f28
  138  000010f8  bfbe0120	sd	288(r29),f30
  139                      ;; NOTE: we don't save the interrupt vector register because it
  140                      ;; doesn't change from process to process.
  141                      ;; NOTE: we don't save the status register because most of the flags
  142                      ;; are the same from process to process if they're in the interrupt
  143                      ;; handler.  Of course, we DO save the ISR.
  144  000010fc  00802031	movs2i	r4,iar
  145  00001100  afa40128	sw	296(r29),r4
  146  00001104  00602831	movs2i	r5,isr
  147  00001108  afa5012c	sw	300(r29),r5
  148  0000110c  00c03031	movs2i	r6,cause
  149  00001110  afa60130	sw	304(r29),r6
  150  00001114  01201831	movs2i	r3,fault
  151  00001118  afa30134	sw	308(r29),r3
  152  0000111c  01801831	movs2i	r3,ptbase
  153  00001120  afa30138	sw	312(r29),r3
  154  00001124  01a01831	movs2i	r3,ptsize
  155  00001128  afa3013c	sw	316(r29),r3
  156  0000112c  01c01831	movs2i	r3,ptbits
  157  00001130  afa30140	sw	320(r29),r3
  159                      ;; Push the interrupt information onto the stack
  160  00001134  afa60000	sw	0(r29),r6; push CAUSE
  161  00001138  afa40004	sw	4(r29),r4; push IAR
  162  0000113c  afa50008	sw	8(r29),r5; push ISR
  163                      ;; Get the original stack pointer
  164  00001140  8fa1009c	lw	r1,156(r29)
  165  00001144  afa1000c	sw	12(r29),r1
  166                      ;; Save the previous interrupt stack frame address in the current frame
  167  00001148  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
  168  0000114c  2421fe10	addui	r1,r1,_currentPCB&0xffff
  169  00001150  8c210000	lw	r1,(r1)
  170  00001154  8c220000	lw	r2,0(r1)
  171  00001158  afa20028	sw	40(r29),r2
  172                      ;; Save this frame address in the PCB.  This is used so the OS can
  173                      ;; easily access the current interrupt save frame
  174  0000115c  ac3d0000	sw	0(r1),r29
  175                      ;; Call the "real" interrupt handler.  This will possibly switch
  176                      ;; contexts.  This call never returns; instead, a separate routine
  177                      ;; (_intrreturn) is called to return from interrupts after restoring
  178                      ;; the current context.
  179  00001160  08007cf4	j	_dointerrupt
  180  00001164  54000000	nop
  181  00001168          	.endproc _intrhandler
  183                      ;;;----------------------------------------------------------------------
  184                      ;;; intrreturn
  185                      ;;;
  186                      ;;; Return from an interrupt or trap.  This restores all of the previously
  187                      ;;; saved registers and then returns to where the program left off.  The
  188                      ;;; current contents of the registers are destroyed.  This routine uses
  189                      ;;; the saved interrupt frame pointer, so the stack pointer need not
  190                      ;;; be correct.  Note, though, that the register contents from the previous
  191                      ;;; process must have previously been saved - in other words, call this
  192                      ;;; routine from a trap or interrupt handler.
  193                      ;;;----------------------------------------------------------------------
  194  00001168          	.proc _intrreturn
  195  00001168          	.global _intrreturn
  196  00001168          	_intrreturn:
  197                      ;; Disable interrupts - this routine must be atomic, and interrupts
  198                      ;; may not be currently disabled.  Don't worry about saving registers
  199                      ;; because we're about to reload them anyway.
  200  00001168  0c008848	jal	_DisableIntrs
  201                      ;; Get our interrupt stack frame location and load it into the stack
  202                      ;; pointer.
  203  0000116c  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
  204  00001170  2421fe10	addui	r1,r1,_currentPCB&0xffff
  205  00001174  8c210000	lw	r1,0(r1)
  206  00001178  8c3d0000	lw	r29,0(r1)
  207                      ;; Get the previous interrupt stack frame location and make it the
  208                      ;; current interrupt save frame.
  209  0000117c  8fa20028	lw	r2,40(r29)
  210  00001180  ac220000	sw	0(r1),r2
  212                      ;; Reload the registers for the new process.  We don't have to
  213                      ;; load in the exact opposite order as long as we're careful to
  214                      ;; get the right values back in.
  215  00001184  8fa30128	lw	r3,296(r29)
  216  00001188  00602030	movi2s	iar,r3
  217  0000118c  8fa3012c	lw	r3,300(r29)
  218  00001190  00601830	movi2s	isr,r3
  219  00001194  8fa30130	lw	r3,304(r29)
  220  00001198  00603030	movi2s	cause,r3
  221  0000119c  8fa30134	lw	r3,308(r29)
  222  000011a0  00604830	movi2s	fault,r3
  223  000011a4  8fa30138	lw	r3,312(r29)
  224  000011a8  00606030	movi2s	ptbase,r3
  225  000011ac  8fa3013c	lw	r3,316(r29)
  226  000011b0  00606830	movi2s	ptsize,r3
  227  000011b4  8fa30140	lw	r3,320(r29)
  228  000011b8  00607030	movi2s	ptbits,r3
  230                      ;; Reload the floating point registers
  231  000011bc  9fa000a8	ld	f0,168(r29)
  232  000011c0  9fa200b0	ld	f2,176(r29)
  233  000011c4  9fa400b8	ld	f4,184(r29)
  234  000011c8  9fa600c0	ld	f6,192(r29)
  235  000011cc  9fa800c8	ld	f8,200(r29)
  236  000011d0  9faa00d0	ld	f10,208(r29)
  237  000011d4  9fac00d8	ld	f12,216(r29)
  238  000011d8  9fae00e0	ld	f14,224(r29)
  239  000011dc  9fb000e8	ld	f16,232(r29)
  240  000011e0  9fb200f0	ld	f18,240(r29)
  241  000011e4  9fb400f8	ld	f20,248(r29)
  242  000011e8  9fb60100	ld	f22,256(r29)
  243  000011ec  9fb80108	ld	f24,264(r29)
  244  000011f0  9fba0110	ld	f26,272(r29)
  245  000011f4  9fbc0118	ld	f28,280(r29)
  246  000011f8  9fbe0120	ld	f30,288(r29)
  248                      ;; Reload the integer registers.  We don't reload r0 because it's
  249                      ;; always 0.  We won't reload r29 here because we're using it as
  250                      ;; the stack pointer.  The same goes for r1, which we'll use as
  251                      ;; scratch so we can store r29.
  252                      ;; Skip r1 - restored later
  253  000011fc  8fa20030	lw	r2,48(r29)
  254  00001200  8fa30034	lw	r3,52(r29)
  255  00001204  8fa40038	lw	r4,56(r29)
  256  00001208  8fa5003c	lw	r5,60(r29)
  257  0000120c  8fa60040	lw	r6,64(r29)
  258  00001210  8fa70044	lw	r7,68(r29)
  259  00001214  8fa80048	lw	r8,72(r29)
  260  00001218  8fa9004c	lw	r9,76(r29)
  261  0000121c  8faa0050	lw	r10,80(r29)
  262  00001220  8fab0054	lw	r11,84(r29)
  263  00001224  8fac0058	lw	r12,88(r29)
  264  00001228  8fad005c	lw	r13,92(r29)
  265  0000122c  8fae0060	lw	r14,96(r29)
  266  00001230  8faf0064	lw	r15,100(r29)
  267  00001234  8fb00068	lw	r16,104(r29)
  268  00001238  8fb1006c	lw	r17,108(r29)
  269  0000123c  8fb20070	lw	r18,112(r29)
  270  00001240  8fb30074	lw	r19,116(r29)
  271  00001244  8fb40078	lw	r20,120(r29)
  272  00001248  8fb5007c	lw	r21,124(r29)
  273  0000124c  8fb60080	lw	r22,128(r29)
  274  00001250  8fb70084	lw	r23,132(r29)
  275  00001254  8fb80088	lw	r24,136(r29)
  276  00001258  8fb9008c	lw	r25,140(r29)
  277  0000125c  8fba0090	lw	r26,144(r29)
  278  00001260  8fbb0094	lw	r27,148(r29)
  279  00001264  8fbc0098	lw	r28,152(r29)
  280                      ;; Skip r29 - restored later
  281  00001268  8fbe00a0	lw	r30,160(r29)
  282  0000126c  8fbf00a4	lw	r31,164(r29)
  284  00001270  27bd0154	addui	r29,r29,#340
  285                      ;; Save the current value of the stack pointer after adjusting it
  286                      ;; Note that this will "destroy" the stack values below this interrupt
  287                      ;; stack frame.  This is exactly what we want!
  288  00001274  ac3d0004	sw	4(r1),r29
  289  00001278  37a10000	ori	r1,r29,#0
  290  0000127c  8c3dff48	lw	r29,-184(r1); 156-340 = -184
  291  00001280  8c21fed8	lw	r1,-296(r1); 44-340 = -296
  292  00001284  40000000	rfe
  293  00001288          	.endproc _intrreturn
  295                      ;;;----------------------------------------------------------------------
  296                      ;;; SetIntrs
  297                      ;;;
  298                      ;;; This routine sets the interrupt level to the value passed (0 -> all
  299                      ;;; interrupts enabled; 0xf -> all interrupts disabled).  It returns the
  300                      ;;; former value for the interrupt flags.
  301                      ;;;----------------------------------------------------------------------
  302  00001288          	.proc _SetIntrs
  303  00001288          	.global _SetIntrs
  304  00001288          	_SetIntrs:
  305  00001288  2fbd0010	subui	r29,r29,#16
  306  0000128c  afa2000c	sw	12(r29),r2; save r2
  307  00001290  8fa20010	lw	r2,16(r29); Get the new interrupt level
  308  00001294  3042000f	andi	r2,r2,#0x0f; Mask off interrupt levels
  309  00001298  00a00831	movs2i	r1,status
  310  0000129c  afa10008	sw	8(r29),r1; Store the old interrupt values
  311  000012a0  3021fff0	andi	r1,r1,#0xfff0; Mask off old interrupt level
  312  000012a4  00410825	or	r1,r2,r1; OR in new interrupt level
  313  000012a8  00202830	movi2s	status,r1
  314  000012ac  8fa10008	lw	r1,8(r29); Get back the original interrupt level
  315  000012b0  3021000f	andi	r1,r1,#0x0f; Mask off all but interrupt levels
  316  000012b4  8fa2000c	lw	r2,12(r29); restore r2
  317  000012b8  27bd0010	addui	r29,r29,#16; restore stack pointer
  318  000012bc  4be00000	jr	r31
  319  000012c0  54000000	nop
  320  000012c4          	.endproc _SetIntrs
  322  000012c4          	.proc _CurrentIntrs
  323  000012c4          	.global _CurrentIntrs
  324  000012c4          	_CurrentIntrs:
  325  000012c4  00a00831	movs2i	r1,status
  326  000012c8  3021000f	andi	r1,r1,#0xf
  327  000012cc  4be00000	jr	r31
  328  000012d0  54000000	nop
  329  000012d4          	.endproc _CurrentIntrs
  330                      ;;;----------------------------------------------------------------------
  331                      ;;; _ProcessSleep
  332                      ;;;
  333                      ;;; If a context switch from elsewhere in the kernel is desired, take a
  334                      ;;; trap and call this routine from the trap handler.
  335                      ;;;----------------------------------------------------------------------
  336  000012d4          	.proc _ProcessSleep
  337  000012d4          	.global _ProcessSleep
  338  000012d4          	_ProcessSleep:
  339  000012d4  44000410	trap	#0x410; This is a process sleep trap
  340  000012d8  54000000	nop
  341  000012dc  4be00000	jr	r31
  342  000012e0  54000000	nop
  343  000012e4          	.endproc _ProcessSleep
  344                      ;
  345                      ; Stub functions for DLX traps.
  346                      ;
  347                      ; Aaron Sawdey 1996; released to the Public Domain.
  348                      ;
  350  000012e4          	.align 2
  351  000012e4          	.proc _random
  352  000012e4          	.global _random
  353  000012e4          	_random:
  354  000012e4  44002020	trap	#0x2020
  355  000012e8  4be00000	jr	r31
  356  000012ec  54000000	nop
  357  000012f0          	.endproc _random
  359  000012f0          	.proc _srandom
  360  000012f0          	.global _srandom
  361  000012f0          	_srandom:
  362  000012f0  44002021	trap	#0x2021
  363  000012f4  4be00000	jr	r31
  364  000012f8  54000000	nop
  365  000012fc          	.endproc _srandom
  366                      ; Compiled by GCC
  367  000012fc          	.data
  368  0000b000          	.align 2
  369  0000b000          	_rcsid_LF2:
  370  0000b000  3a206669	.ascii "$Id: filesys.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
  370  0000b004  6c657379	
  370  0000b008  732e632c	
  370  0000b00c  7620312e	
  370  0000b010  31203230	
  370  0000b014  30302f30	
  370  0000b018  392f3230	
  370  0000b01c  2030313a	
  370  0000b020  35303a31	
  370  0000b024  3920656c	
  370  0000b028  6d204578	
  370  0000b02c  7020656c	
  370  0000b030  6d203030	
  370  0000b034  30      	
  371  0000b035          	.text
  372  000012fc          	.align 2
  373  000012fc          	.proc _isspace
  374  000012fc          	.global _isspace
  375  000012fc          	_isspace:
  376                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  377  000012fc  afbefffc	sw	-4(r29),r30; push fp
  378  00001300  001df020	add	r30,r0,r29; fp = sp
  379  00001304  afbffff8	sw	-8(r29),r31; push ret addr
  380  00001308  2fbd0010	subui	r29,r29,#16; alloc local storage
  381  0000130c  afa20000	sw	0(r29),r2
  382  00001310  83c20003	lb	r2,3(r30)
  383  00001314  201f0000	addi	r31,r0,#0
  384  00001318  304100ff	andi	r1,r2,#0x00ff
  385  0000131c  60210020	seqi	r1,r1,#32
  386  00001320  14200018	bnez	r1,L6_LF2
  387  00001324  54000000	nop; not filled.
  388  00001328  2041fff7	addi	r1,r2,#-9
  389  0000132c  302100ff	andi	r1,r1,#0x00ff
  390  00001330  70210001	sleui	r1,r1,#1
  391  00001334  10200008	beqz	r1,L5_LF2
  392  00001338  54000000	nop; not filled.
  393  0000133c          	L6_LF2:
  394  0000133c  201f0001	addi	r31,r0,#1
  395  00001340          	L5_LF2:
  396  00001340  001f0820	add	r1,r0,r31
  397  00001344  8fa20000	lw	r2,0(r29)
  398  00001348  8fdffff8	lw	r31,-8(r30)
  399  0000134c  001ee820	add	r29,r0,r30
  400  00001350  8fdefffc	lw	r30,-4(r30)
  401  00001354  4be00000	jr	r31
  402  00001358  54000000	nop
  403  0000135c          	.endproc _isspace
  404  0000135c          	.align 2
  405  0000135c          	.proc _isxdigit
  406  0000135c          	.global _isxdigit
  407  0000135c          	_isxdigit:
  408                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  409  0000135c  afbefffc	sw	-4(r29),r30; push fp
  410  00001360  001df020	add	r30,r0,r29; fp = sp
  411  00001364  afbffff8	sw	-8(r29),r31; push ret addr
  412  00001368  2fbd0010	subui	r29,r29,#16; alloc local storage
  413  0000136c  afa20000	sw	0(r29),r2
  414  00001370  83df0003	lb	r31,3(r30)
  415  00001374  20020000	addi	r2,r0,#0
  416  00001378  23e1ffd0	addi	r1,r31,#-48
  417  0000137c  302100ff	andi	r1,r1,#0x00ff
  418  00001380  70210009	sleui	r1,r1,#9
  419  00001384  14200028	bnez	r1,L12_LF2
  420  00001388  54000000	nop; not filled.
  421  0000138c  23e1ff9f	addi	r1,r31,#-97
  422  00001390  302100ff	andi	r1,r1,#0x00ff
  423  00001394  70210005	sleui	r1,r1,#5
  424  00001398  14200014	bnez	r1,L12_LF2
  425  0000139c  54000000	nop; not filled.
  426  000013a0  33e100ff	andi	r1,r31,#0x00ff
  427  000013a4  64210041	snei	r1,r1,#65
  428  000013a8  14200008	bnez	r1,L11_LF2
  429  000013ac  54000000	nop; not filled.
  430  000013b0          	L12_LF2:
  431  000013b0  20020001	addi	r2,r0,#1
  432  000013b4          	L11_LF2:
  433  000013b4  00020820	add	r1,r0,r2
  434  000013b8  8fa20000	lw	r2,0(r29)
  435  000013bc  8fdffff8	lw	r31,-8(r30)
  436  000013c0  001ee820	add	r29,r0,r30
  437  000013c4  8fdefffc	lw	r30,-4(r30)
  438  000013c8  4be00000	jr	r31
  439  000013cc  54000000	nop
  440  000013d0          	.endproc _isxdigit
  441  000013d0          	.align 2
  442  000013d0          	.proc _DisableIntrs
  443  000013d0          	.global _DisableIntrs
  444  000013d0          	_DisableIntrs:
  445                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
  446  000013d0  afbefffc	sw	-4(r29),r30; push fp
  447  000013d4  001df020	add	r30,r0,r29; fp = sp
  448  000013d8  afbffff8	sw	-8(r29),r31; push ret addr
  449  000013dc  2fbd0010	subui	r29,r29,#16; alloc local storage
  450  000013e0  afa20000	sw	0(r29),r2
  451  000013e4  23bdfff8	addi	r29,r29,#-8
  452  000013e8  2002000f	addi	r2,r0,#15
  453  000013ec  afa20000	sw	(r29),r2
  454  000013f0  0ffffe94	jal	_SetIntrs
  455  000013f4  54000000	nop; not filled.
  456  000013f8  23bd0008	addi	r29,r29,#8
  457  000013fc  8fa20000	lw	r2,0(r29)
  458  00001400  8fdffff8	lw	r31,-8(r30)
  459  00001404  001ee820	add	r29,r0,r30
  460  00001408  8fdefffc	lw	r30,-4(r30)
  461  0000140c  4be00000	jr	r31
  462  00001410  54000000	nop
  463  00001414          	.endproc _DisableIntrs
  464  00001414          	.align 2
  465  00001414          	.proc _EnableIntrs
  466  00001414          	.global _EnableIntrs
  467  00001414          	_EnableIntrs:
  468                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
  469  00001414  afbefffc	sw	-4(r29),r30; push fp
  470  00001418  001df020	add	r30,r0,r29; fp = sp
  471  0000141c  afbffff8	sw	-8(r29),r31; push ret addr
  472  00001420  2fbd0010	subui	r29,r29,#16; alloc local storage
  473  00001424  afa20000	sw	0(r29),r2
  474  00001428  23bdfff8	addi	r29,r29,#-8
  475  0000142c  20020000	addi	r2,r0,#0
  476  00001430  afa20000	sw	(r29),r2
  477  00001434  0ffffe50	jal	_SetIntrs
  478  00001438  54000000	nop; not filled.
  479  0000143c  23bd0008	addi	r29,r29,#8
  480  00001440  8fa20000	lw	r2,0(r29)
  481  00001444  8fdffff8	lw	r31,-8(r30)
  482  00001448  001ee820	add	r29,r0,r30
  483  0000144c  8fdefffc	lw	r30,-4(r30)
  484  00001450  4be00000	jr	r31
  485  00001454  54000000	nop
  486  00001458          	.endproc _EnableIntrs
  487  00001458          	.align 2
  488  00001458          	.proc _RestoreIntrs
  489  00001458          	.global _RestoreIntrs
  490  00001458          	_RestoreIntrs:
  491                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
  492  00001458  afbefffc	sw	-4(r29),r30; push fp
  493  0000145c  001df020	add	r30,r0,r29; fp = sp
  494  00001460  afbffff8	sw	-8(r29),r31; push ret addr
  495  00001464  2fbd0010	subui	r29,r29,#16; alloc local storage
  496  00001468  afa20000	sw	0(r29),r2
  497  0000146c  23bdfff8	addi	r29,r29,#-8
  498  00001470  8fc20000	lw	r2,(r30)
  499  00001474  afa20000	sw	(r29),r2
  500  00001478  0ffffe0c	jal	_SetIntrs
  501  0000147c  54000000	nop; not filled.
  502  00001480  23bd0008	addi	r29,r29,#8
  503  00001484  8fa20000	lw	r2,0(r29)
  504  00001488  8fdffff8	lw	r31,-8(r30)
  505  0000148c  001ee820	add	r29,r0,r30
  506  00001490  8fdefffc	lw	r30,-4(r30)
  507  00001494  4be00000	jr	r31
  508  00001498  54000000	nop
  509  0000149c          	.endproc _RestoreIntrs
  510  0000149c          	.align 2
  511  0000149c          	.proc _QueueLinkInit
  512  0000149c          	.global _QueueLinkInit
  513  0000149c          	_QueueLinkInit:
  514                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
  515  0000149c  afbefffc	sw	-4(r29),r30; push fp
  516  000014a0  001df020	add	r30,r0,r29; fp = sp
  517  000014a4  afbffff8	sw	-8(r29),r31; push ret addr
  518  000014a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  519  000014ac  afa20000	sw	0(r29),r2
  520  000014b0  8fc10000	lw	r1,(r30)
  521  000014b4  8fc20004	lw	r2,4(r30)
  522  000014b8  201f0000	addi	r31,r0,#0
  523  000014bc  ac3f0000	sw	(r1),r31
  524  000014c0  ac22000c	sw	12(r1),r2
  525  000014c4  8fa20000	lw	r2,0(r29)
  526  000014c8  8fdffff8	lw	r31,-8(r30)
  527  000014cc  001ee820	add	r29,r0,r30
  528  000014d0  8fdefffc	lw	r30,-4(r30)
  529  000014d4  4be00000	jr	r31
  530  000014d8  54000000	nop
  531  000014dc          	.endproc _QueueLinkInit
  532  000014dc          	.align 2
  533  000014dc          	.proc _QueueNext
  534  000014dc          	.global _QueueNext
  535  000014dc          	_QueueNext:
  536                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
  537  000014dc  afbefffc	sw	-4(r29),r30; push fp
  538  000014e0  001df020	add	r30,r0,r29; fp = sp
  539  000014e4  afbffff8	sw	-8(r29),r31; push ret addr
  540  000014e8  2fbd0008	subui	r29,r29,#8; alloc local storage
  541  000014ec  8fc10000	lw	r1,(r30)
  542  000014f0  8c210000	lw	r1,(r1)
  543  000014f4  8fdffff8	lw	r31,-8(r30)
  544  000014f8  001ee820	add	r29,r0,r30
  545  000014fc  8fdefffc	lw	r30,-4(r30)
  546  00001500  4be00000	jr	r31
  547  00001504  54000000	nop
  548  00001508          	.endproc _QueueNext
  549  00001508          	.align 2
  550  00001508          	.proc _QueuePrev
  551  00001508          	.global _QueuePrev
  552  00001508          	_QueuePrev:
  553                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
  554  00001508  afbefffc	sw	-4(r29),r30; push fp
  555  0000150c  001df020	add	r30,r0,r29; fp = sp
  556  00001510  afbffff8	sw	-8(r29),r31; push ret addr
  557  00001514  2fbd0008	subui	r29,r29,#8; alloc local storage
  558  00001518  8fc10000	lw	r1,(r30)
  559  0000151c  8c210004	lw	r1,4(r1)
  560  00001520  8fdffff8	lw	r31,-8(r30)
  561  00001524  001ee820	add	r29,r0,r30
  562  00001528  8fdefffc	lw	r30,-4(r30)
  563  0000152c  4be00000	jr	r31
  564  00001530  54000000	nop
  565  00001534          	.endproc _QueuePrev
  566  00001534          	.align 2
  567  00001534          	.proc _QueueFirst
  568  00001534          	.global _QueueFirst
  569  00001534          	_QueueFirst:
  570                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
  571  00001534  afbefffc	sw	-4(r29),r30; push fp
  572  00001538  001df020	add	r30,r0,r29; fp = sp
  573  0000153c  afbffff8	sw	-8(r29),r31; push ret addr
  574  00001540  2fbd0008	subui	r29,r29,#8; alloc local storage
  575  00001544  8fc10000	lw	r1,(r30)
  576  00001548  8c210000	lw	r1,(r1)
  577  0000154c  8fdffff8	lw	r31,-8(r30)
  578  00001550  001ee820	add	r29,r0,r30
  579  00001554  8fdefffc	lw	r30,-4(r30)
  580  00001558  4be00000	jr	r31
  581  0000155c  54000000	nop
  582  00001560          	.endproc _QueueFirst
  583  00001560          	.align 2
  584  00001560          	.proc _QueueLast
  585  00001560          	.global _QueueLast
  586  00001560          	_QueueLast:
  587                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
  588  00001560  afbefffc	sw	-4(r29),r30; push fp
  589  00001564  001df020	add	r30,r0,r29; fp = sp
  590  00001568  afbffff8	sw	-8(r29),r31; push ret addr
  591  0000156c  2fbd0008	subui	r29,r29,#8; alloc local storage
  592  00001570  8fc10000	lw	r1,(r30)
  593  00001574  8c210004	lw	r1,4(r1)
  594  00001578  8fdffff8	lw	r31,-8(r30)
  595  0000157c  001ee820	add	r29,r0,r30
  596  00001580  8fdefffc	lw	r30,-4(r30)
  597  00001584  4be00000	jr	r31
  598  00001588  54000000	nop
  599  0000158c          	.endproc _QueueLast
  600  0000158c          	.align 2
  601  0000158c          	.proc _QueueInsertAfter
  602  0000158c          	.global _QueueInsertAfter
  603  0000158c          	_QueueInsertAfter:
  604                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
  605  0000158c  afbefffc	sw	-4(r29),r30; push fp
  606  00001590  001df020	add	r30,r0,r29; fp = sp
  607  00001594  afbffff8	sw	-8(r29),r31; push ret addr
  608  00001598  2fbd0010	subui	r29,r29,#16; alloc local storage
  609  0000159c  afa20000	sw	0(r29),r2
  610  000015a0  afa30004	sw	4(r29),r3
  611  000015a4  8fc30000	lw	r3,(r30)
  612  000015a8  8fc20004	lw	r2,4(r30)
  613  000015ac  8fc10008	lw	r1,8(r30)
  614  000015b0  ac230008	sw	8(r1),r3
  615  000015b4  ac220004	sw	4(r1),r2
  616  000015b8  8c5f0000	lw	r31,(r2)
  617  000015bc  ac3f0000	sw	(r1),r31
  618  000015c0  ac410000	sw	(r2),r1
  619  000015c4  8c220000	lw	r2,(r1)
  620  000015c8  ac410004	sw	4(r2),r1
  621  000015cc  8c610008	lw	r1,8(r3)
  622  000015d0  20210001	addi	r1,r1,#1
  623  000015d4  ac610008	sw	8(r3),r1
  624  000015d8  8fa20000	lw	r2,0(r29)
  625  000015dc  8fa30004	lw	r3,4(r29)
  626  000015e0  8fdffff8	lw	r31,-8(r30)
  627  000015e4  001ee820	add	r29,r0,r30
  628  000015e8  8fdefffc	lw	r30,-4(r30)
  629  000015ec  4be00000	jr	r31
  630  000015f0  54000000	nop
  631  000015f4          	.endproc _QueueInsertAfter
  632  000015f4          	.align 2
  633  000015f4          	.proc _QueueInsertFirst
  634  000015f4          	.global _QueueInsertFirst
  635  000015f4          	_QueueInsertFirst:
  636                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
  637  000015f4  afbefffc	sw	-4(r29),r30; push fp
  638  000015f8  001df020	add	r30,r0,r29; fp = sp
  639  000015fc  afbffff8	sw	-8(r29),r31; push ret addr
  640  00001600  2fbd0010	subui	r29,r29,#16; alloc local storage
  641  00001604  afa20000	sw	0(r29),r2
  642  00001608  afa30004	sw	4(r29),r3
  643  0000160c  8fc30000	lw	r3,(r30)
  644  00001610  8fc10004	lw	r1,4(r30)
  645  00001614  ac230008	sw	8(r1),r3
  646  00001618  ac230004	sw	4(r1),r3
  647  0000161c  8c7f0000	lw	r31,(r3)
  648  00001620  ac3f0000	sw	(r1),r31
  649  00001624  ac610000	sw	(r3),r1
  650  00001628  8c220000	lw	r2,(r1)
  651  0000162c  ac410004	sw	4(r2),r1
  652  00001630  8c610008	lw	r1,8(r3)
  653  00001634  20210001	addi	r1,r1,#1
  654  00001638  ac610008	sw	8(r3),r1
  655  0000163c  8fa20000	lw	r2,0(r29)
  656  00001640  8fa30004	lw	r3,4(r29)
  657  00001644  8fdffff8	lw	r31,-8(r30)
  658  00001648  001ee820	add	r29,r0,r30
  659  0000164c  8fdefffc	lw	r30,-4(r30)
  660  00001650  4be00000	jr	r31
  661  00001654  54000000	nop
  662  00001658          	.endproc _QueueInsertFirst
  663  00001658          	.align 2
  664  00001658          	.proc _QueueInsertLast
  665  00001658          	.global _QueueInsertLast
  666  00001658          	_QueueInsertLast:
  667                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
  668  00001658  afbefffc	sw	-4(r29),r30; push fp
  669  0000165c  001df020	add	r30,r0,r29; fp = sp
  670  00001660  afbffff8	sw	-8(r29),r31; push ret addr
  671  00001664  2fbd0010	subui	r29,r29,#16; alloc local storage
  672  00001668  afa20000	sw	0(r29),r2
  673  0000166c  afa30004	sw	4(r29),r3
  674  00001670  8fc30000	lw	r3,(r30)
  675  00001674  8fc10004	lw	r1,4(r30)
  676  00001678  8c620004	lw	r2,4(r3)
  677  0000167c  ac230008	sw	8(r1),r3
  678  00001680  ac220004	sw	4(r1),r2
  679  00001684  8c5f0000	lw	r31,(r2)
  680  00001688  ac3f0000	sw	(r1),r31
  681  0000168c  ac410000	sw	(r2),r1
  682  00001690  8c220000	lw	r2,(r1)
  683  00001694  ac410004	sw	4(r2),r1
  684  00001698  8c610008	lw	r1,8(r3)
  685  0000169c  20210001	addi	r1,r1,#1
  686  000016a0  ac610008	sw	8(r3),r1
  687  000016a4  8fa20000	lw	r2,0(r29)
  688  000016a8  8fa30004	lw	r3,4(r29)
  689  000016ac  8fdffff8	lw	r31,-8(r30)
  690  000016b0  001ee820	add	r29,r0,r30
  691  000016b4  8fdefffc	lw	r30,-4(r30)
  692  000016b8  4be00000	jr	r31
  693  000016bc  54000000	nop
  694  000016c0          	.endproc _QueueInsertLast
  695  000016c0          	.align 2
  696  000016c0          	.proc _QueueRemove
  697  000016c0          	.global _QueueRemove
  698  000016c0          	_QueueRemove:
  699                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
  700  000016c0  afbefffc	sw	-4(r29),r30; push fp
  701  000016c4  001df020	add	r30,r0,r29; fp = sp
  702  000016c8  afbffff8	sw	-8(r29),r31; push ret addr
  703  000016cc  2fbd0010	subui	r29,r29,#16; alloc local storage
  704  000016d0  afa20000	sw	0(r29),r2
  705  000016d4  afa30004	sw	4(r29),r3
  706  000016d8  8fdf0000	lw	r31,(r30)
  707  000016dc  8fe10008	lw	r1,8(r31)
  708  000016e0  8c210008	lw	r1,8(r1)
  709  000016e4  6c210000	sgti	r1,r1,#0
  710  000016e8  1020002c	beqz	r1,L44_LF2
  711  000016ec  54000000	nop; not filled.
  712  000016f0  8fe10004	lw	r1,4(r31)
  713  000016f4  8fe30000	lw	r3,(r31)
  714  000016f8  ac230000	sw	(r1),r3
  715  000016fc  8fe10000	lw	r1,(r31)
  716  00001700  8fe30004	lw	r3,4(r31)
  717  00001704  ac230004	sw	4(r1),r3
  718  00001708  8fe20008	lw	r2,8(r31)
  719  0000170c  8c410008	lw	r1,8(r2)
  720  00001710  2021ffff	addi	r1,r1,#-1
  721  00001714  ac410008	sw	8(r2),r1
  722  00001718          	L44_LF2:
  723  00001718  20030000	addi	r3,r0,#0
  724  0000171c  afe30000	sw	(r31),r3
  725  00001720  8fa20000	lw	r2,0(r29)
  726  00001724  8fa30004	lw	r3,4(r29)
  727  00001728  8fdffff8	lw	r31,-8(r30)
  728  0000172c  001ee820	add	r29,r0,r30
  729  00001730  8fdefffc	lw	r30,-4(r30)
  730  00001734  4be00000	jr	r31
  731  00001738  54000000	nop
  732  0000173c          	.endproc _QueueRemove
  733  0000173c          	.align 2
  734  0000173c          	.proc _QueueLength
  735  0000173c          	.global _QueueLength
  736  0000173c          	_QueueLength:
  737                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
  738  0000173c  afbefffc	sw	-4(r29),r30; push fp
  739  00001740  001df020	add	r30,r0,r29; fp = sp
  740  00001744  afbffff8	sw	-8(r29),r31; push ret addr
  741  00001748  2fbd0008	subui	r29,r29,#8; alloc local storage
  742  0000174c  8fc10000	lw	r1,(r30)
  743  00001750  8c210008	lw	r1,8(r1)
  744  00001754  8fdffff8	lw	r31,-8(r30)
  745  00001758  001ee820	add	r29,r0,r30
  746  0000175c  8fdefffc	lw	r30,-4(r30)
  747  00001760  4be00000	jr	r31
  748  00001764  54000000	nop
  749  00001768          	.endproc _QueueLength
  750  00001768          	.align 2
  751  00001768          	.proc _QueueEmpty
  752  00001768          	.global _QueueEmpty
  753  00001768          	_QueueEmpty:
  754                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
  755  00001768  afbefffc	sw	-4(r29),r30; push fp
  756  0000176c  001df020	add	r30,r0,r29; fp = sp
  757  00001770  afbffff8	sw	-8(r29),r31; push ret addr
  758  00001774  2fbd0008	subui	r29,r29,#8; alloc local storage
  759  00001778  8fc10000	lw	r1,(r30)
  760  0000177c  8c210008	lw	r1,8(r1)
  761  00001780  60210000	seqi	r1,r1,#0
  762  00001784  8fdffff8	lw	r31,-8(r30)
  763  00001788  001ee820	add	r29,r0,r30
  764  0000178c  8fdefffc	lw	r30,-4(r30)
  765  00001790  4be00000	jr	r31
  766  00001794  54000000	nop
  767  00001798          	.endproc _QueueEmpty
  768  00001798          	.data
  769  0000b035          	.align 2
  770  0000b038          	LC0_LF2:
  771  0000b038  41747465	.ascii "Attepmting to open %s mode=%d.\n\000"
  771  0000b03c  706d7469	
  771  0000b040  6e672074	
  771  0000b044  6f206f70	
  771  0000b048  656e2025	
  771  0000b04c  73206d6f	
  771  0000b050  64653d25	
  771  0000b054  642e0a00	
  772  0000b058          	.align 2
  773  0000b058          	LC1_LF2:
  774  0000b058  646c783a	.ascii "dlx:\000"
  774  0000b05c  00      	
  775  0000b05d          	.align 2
  776  0000b060          	LC2_LF2:
  777  0000b060  46696c65	.ascii "File %s opening in file system %d.\n\000"
  777  0000b064  20257320	
  777  0000b068  6f70656e	
  777  0000b06c  696e6720	
  777  0000b070  696e2066	
  777  0000b074  696c6520	
  777  0000b078  73797374	
  777  0000b07c  656d2025	
  777  0000b080  642e0a00	
  778  0000b084          	.align 2
  779  0000b084          	LC3_LF2:
  780  0000b084  4f70656e	.ascii "Opened %s in FS %d, mode=%d slot=%d.\n\000"
  780  0000b088  65642025	
  780  0000b08c  7320696e	
  780  0000b090  20465320	
  780  0000b094  25642c20	
  780  0000b098  6d6f6465	
  780  0000b09c  3d256420	
  780  0000b0a0  736c6f74	
  780  0000b0a4  3d25642e	
  780  0000b0a8  0a00    	
  781  0000b0aa          	.text
  782  00001798          	.align 2
  783  00001798          	.proc _FsOpen
  784  00001798          	.global _FsOpen
  785  00001798          	_FsOpen:
  786                      ;  Function 'FsOpen'; 0 bytes of locals, 7 regs to save.
  787  00001798  afbefffc	sw	-4(r29),r30; push fp
  788  0000179c  001df020	add	r30,r0,r29; fp = sp
  789  000017a0  afbffff8	sw	-8(r29),r31; push ret addr
  790  000017a4  2fbd0028	subui	r29,r29,#40; alloc local storage
  791  000017a8  afa20000	sw	0(r29),r2
  792  000017ac  afa30004	sw	4(r29),r3
  793  000017b0  afa40008	sw	8(r29),r4
  794  000017b4  afa5000c	sw	12(r29),r5
  795  000017b8  afa60010	sw	16(r29),r6
  796  000017bc  afa70014	sw	20(r29),r7
  797  000017c0  afa80018	sw	24(r29),r8
  798  000017c4  8fc40000	lw	r4,(r30)
  799  000017c8  8fc50004	lw	r5,4(r30)
  800  000017cc  23bdfff8	addi	r29,r29,#-8
  801  000017d0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  802  000017d4  2442fd46	addui	r2,r2,(_debugstr)&0xffff
  803  000017d8  afa20000	sw	(r29),r2
  804  000017dc  20080066	addi	r8,r0,#102
  805  000017e0  afa80004	sw	4(r29),r8
  806  000017e4  0c002630	jal	_dindex
  807  000017e8  54000000	nop; not filled.
  808  000017ec  23bd0008	addi	r29,r29,#8
  809  000017f0  64210000	snei	r1,r1,#0
  810  000017f4  1420002c	bnez	r1,L56_LF2
  811  000017f8  54000000	nop; not filled.
  812  000017fc  23bdfff8	addi	r29,r29,#-8
  813  00001800  afa20000	sw	(r29),r2
  814  00001804  2008002b	addi	r8,r0,#43
  815  00001808  afa80004	sw	4(r29),r8
  816  0000180c  0c002608	jal	_dindex
  817  00001810  54000000	nop; not filled.
  818  00001814  23bd0008	addi	r29,r29,#8
  819  00001818  64210000	snei	r1,r1,#0
  820  0000181c  10200028	beqz	r1,L55_LF2
  821  00001820  54000000	nop; not filled.
  822  00001824          	L56_LF2:
  823  00001824  23bdfff0	addi	r29,r29,#-16
  824  00001828  3c080000	lhi	r8,((LC0_LF2)>>16)&0xffff
  825  0000182c  2508b038	addui	r8,r8,(LC0_LF2)&0xffff
  826  00001830  afa80000	sw	(r29),r8
  827  00001834  afa40004	sw	4(r29),r4
  828  00001838  afa50008	sw	8(r29),r5
  829  0000183c  0c008968	jal	_printf
  830  00001840  54000000	nop; not filled.
  831  00001844  23bd0010	addi	r29,r29,#16
  832  00001848          	L55_LF2:
  833  00001848  30a50003	andi	r5,r5,#3
  834  0000184c  64a10000	snei	r1,r5,#0
  835  00001850  10200044	beqz	r1,L74_LF2
  836  00001854  54000000	nop; not filled.
  837  00001858  20030000	addi	r3,r0,#0
  838  0000185c  3c060000	lhi	r6,((_openfiles_LF2)>>16)&0xffff
  839  00001860  24c6b110	addui	r6,r6,(_openfiles_LF2)&0xffff
  840  00001864  00061020	add	r2,r0,r6
  841  00001868          	L61_LF2:
  842  00001868  8c410004	lw	r1,4(r2)
  843  0000186c  64210000	snei	r1,r1,#0
  844  00001870  10200018	beqz	r1,L59_LF2
  845  00001874  54000000	nop; not filled.
  846  00001878  2042010c	addi	r2,r2,#268
  847  0000187c  20630001	addi	r3,r3,#1
  848  00001880  7061001f	slei	r1,r3,#31
  849  00001884  1420ffe0	bnez	r1,L61_LF2
  850  00001888  54000000	nop; not filled.
  851  0000188c          	L59_LF2:
  852  0000188c  6c61001f	sgti	r1,r3,#31
  853  00001890  10200010	beqz	r1,L64_LF2
  854  00001894  54000000	nop; not filled.
  855  00001898          	L74_LF2:
  856  00001898  2001ffff	addi	r1,r0,#-1
  857  0000189c  08000224	j	L73_LF2
  858  000018a0  54000000	nop; not filled.
  859  000018a4          	L64_LF2:
  860  000018a4  50610004	slli	r1,r3,#0x4
  861  000018a8  00230820	add	r1,r1,r3
  862  000018ac  50210002	slli	r1,r1,#0x2
  863  000018b0  00230822	sub	r1,r1,r3
  864  000018b4  50210002	slli	r1,r1,#0x2
  865  000018b8  00261020	add	r2,r1,r6
  866  000018bc  ac450004	sw	4(r2),r5
  867  000018c0  23bdfff0	addi	r29,r29,#-16
  868  000018c4  afa40000	sw	(r29),r4
  869  000018c8  3c010000	lhi	r1,((LC1_LF2)>>16)&0xffff
  870  000018cc  2421b058	addui	r1,r1,(LC1_LF2)&0xffff
  871  000018d0  afa10004	sw	4(r29),r1
  872  000018d4  20080004	addi	r8,r0,#4
  873  000018d8  afa80008	sw	8(r29),r8
  874  000018dc  0c0021f4	jal	_dstrncmp
  875  000018e0  54000000	nop; not filled.
  876  000018e4  23bd0010	addi	r29,r29,#16
  877  000018e8  64210000	snei	r1,r1,#0
  878  000018ec  14200014	bnez	r1,L65_LF2
  879  000018f0  54000000	nop; not filled.
  880  000018f4  20840004	addi	r4,r4,#4
  881  000018f8  20080001	addi	r8,r0,#1
  882  000018fc  08000008	j	L75_LF2
  883  00001900  54000000	nop; not filled.
  884  00001904          	L65_LF2:
  885  00001904  20080000	addi	r8,r0,#0
  886  00001908          	L75_LF2:
  887  00001908  ac480000	sw	(r2),r8
  888  0000190c  23bdfff8	addi	r29,r29,#-8
  889  00001910  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  890  00001914  2442fd46	addui	r2,r2,(_debugstr)&0xffff
  891  00001918  afa20000	sw	(r29),r2
  892  0000191c  20080066	addi	r8,r0,#102
  893  00001920  afa80004	sw	4(r29),r8
  894  00001924  0c0024f0	jal	_dindex
  895  00001928  54000000	nop; not filled.
  896  0000192c  23bd0008	addi	r29,r29,#8
  897  00001930  64210000	snei	r1,r1,#0
  898  00001934  1420002c	bnez	r1,L68_LF2
  899  00001938  54000000	nop; not filled.
  900  0000193c  23bdfff8	addi	r29,r29,#-8
  901  00001940  afa20000	sw	(r29),r2
  902  00001944  2008002b	addi	r8,r0,#43
  903  00001948  afa80004	sw	4(r29),r8
  904  0000194c  0c0024c8	jal	_dindex
  905  00001950  54000000	nop; not filled.
  906  00001954  23bd0008	addi	r29,r29,#8
  907  00001958  64210000	snei	r1,r1,#0
  908  0000195c  1020004c	beqz	r1,L67_LF2
  909  00001960  54000000	nop; not filled.
  910  00001964          	L68_LF2:
  911  00001964  23bdfff0	addi	r29,r29,#-16
  912  00001968  3c080000	lhi	r8,((LC2_LF2)>>16)&0xffff
  913  0000196c  2508b060	addui	r8,r8,(LC2_LF2)&0xffff
  914  00001970  afa80000	sw	(r29),r8
  915  00001974  afa40004	sw	4(r29),r4
  916  00001978  50610004	slli	r1,r3,#0x4
  917  0000197c  00230820	add	r1,r1,r3
  918  00001980  50210002	slli	r1,r1,#0x2
  919  00001984  00230822	sub	r1,r1,r3
  920  00001988  50210002	slli	r1,r1,#0x2
  921  0000198c  3c080000	lhi	r8,((_openfiles_LF2)>>16)&0xffff
  922  00001990  2508b110	addui	r8,r8,(_openfiles_LF2)&0xffff
  923  00001994  00280820	add	r1,r1,r8
  924  00001998  8c210000	lw	r1,(r1)
  925  0000199c  afa10008	sw	8(r29),r1
  926  000019a0  0c008804	jal	_printf
  927  000019a4  54000000	nop; not filled.
  928  000019a8  23bd0010	addi	r29,r29,#16
  929  000019ac          	L67_LF2:
  930  000019ac  23bdfff0	addi	r29,r29,#-16
  931  000019b0  50610004	slli	r1,r3,#0x4
  932  000019b4  00230820	add	r1,r1,r3
  933  000019b8  50210002	slli	r1,r1,#0x2
  934  000019bc  00230822	sub	r1,r1,r3
  935  000019c0  50260002	slli	r6,r1,#0x2
  936  000019c4  3c080000	lhi	r8,((_openfiles_LF2)>>16)&0xffff
  937  000019c8  2508b110	addui	r8,r8,(_openfiles_LF2)&0xffff
  938  000019cc  00c83820	add	r7,r6,r8
  939  000019d0  8ce20000	lw	r2,(r7)
  940  000019d4  50410001	slli	r1,r2,#0x1
  941  000019d8  00220820	add	r1,r1,r2
  942  000019dc  50210003	slli	r1,r1,#0x3
  943  000019e0  3c080000	lhi	r8,((_fs_LF2)>>16)&0xffff
  944  000019e4  2508b0e0	addui	r8,r8,(_fs_LF2)&0xffff
  945  000019e8  00280820	add	r1,r1,r8
  946  000019ec  afa30000	sw	(r29),r3
  947  000019f0  afa40004	sw	4(r29),r4
  948  000019f4  afa50008	sw	8(r29),r5
  949  000019f8  8c210000	lw	r1,(r1)
  950  000019fc  4c200000	jalr	r1
  951  00001a00  54000000	nop; not filled.
  952  00001a04  00011020	add	r2,r0,r1
  953  00001a08  23bd0010	addi	r29,r29,#16
  954  00001a0c  68410000	slti	r1,r2,#0
  955  00001a10  10200024	beqz	r1,L69_LF2
  956  00001a14  54000000	nop; not filled.
  957  00001a18  3c080000	lhi	r8,((_openfiles_LF2)>>16)&0xffff
  958  00001a1c  2508b110	addui	r8,r8,(_openfiles_LF2)&0xffff
  959  00001a20  00c80820	add	r1,r6,r8
  960  00001a24  20080000	addi	r8,r0,#0
  961  00001a28  ac280004	sw	4(r1),r8
  962  00001a2c  00020820	add	r1,r0,r2
  963  00001a30  08000090	j	L73_LF2
  964  00001a34  54000000	nop; not filled.
  965  00001a38          	L69_LF2:
  966  00001a38  23bdfff8	addi	r29,r29,#-8
  967  00001a3c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  968  00001a40  2442fd46	addui	r2,r2,(_debugstr)&0xffff
  969  00001a44  afa20000	sw	(r29),r2
  970  00001a48  20080066	addi	r8,r0,#102
  971  00001a4c  afa80004	sw	4(r29),r8
  972  00001a50  0c0023c4	jal	_dindex
  973  00001a54  54000000	nop; not filled.
  974  00001a58  23bd0008	addi	r29,r29,#8
  975  00001a5c  64210000	snei	r1,r1,#0
  976  00001a60  1420002c	bnez	r1,L72_LF2
  977  00001a64  54000000	nop; not filled.
  978  00001a68  23bdfff8	addi	r29,r29,#-8
  979  00001a6c  afa20000	sw	(r29),r2
  980  00001a70  2008002b	addi	r8,r0,#43
  981  00001a74  afa80004	sw	4(r29),r8
  982  00001a78  0c00239c	jal	_dindex
  983  00001a7c  54000000	nop; not filled.
  984  00001a80  23bd0008	addi	r29,r29,#8
  985  00001a84  64210000	snei	r1,r1,#0
  986  00001a88  10200034	beqz	r1,L71_LF2
  987  00001a8c  54000000	nop; not filled.
  988  00001a90          	L72_LF2:
  989  00001a90  23bdffe8	addi	r29,r29,#-24
  990  00001a94  3c080000	lhi	r8,((LC3_LF2)>>16)&0xffff
  991  00001a98  2508b084	addui	r8,r8,(LC3_LF2)&0xffff
  992  00001a9c  afa80000	sw	(r29),r8
  993  00001aa0  afa40004	sw	4(r29),r4
  994  00001aa4  8ce70000	lw	r7,(r7)
  995  00001aa8  afa70008	sw	8(r29),r7
  996  00001aac  afa5000c	sw	12(r29),r5
  997  00001ab0  afa30010	sw	16(r29),r3
  998  00001ab4  0c0086f0	jal	_printf
  999  00001ab8  54000000	nop; not filled.
 1000  00001abc  23bd0018	addi	r29,r29,#24
 1001  00001ac0          	L71_LF2:
 1002  00001ac0  00030820	add	r1,r0,r3
 1003  00001ac4          	L73_LF2:
 1004  00001ac4  8fa20000	lw	r2,0(r29)
 1005  00001ac8  8fa30004	lw	r3,4(r29)
 1006  00001acc  8fa40008	lw	r4,8(r29)
 1007  00001ad0  8fa5000c	lw	r5,12(r29)
 1008  00001ad4  8fa60010	lw	r6,16(r29)
 1009  00001ad8  8fa70014	lw	r7,20(r29)
 1010  00001adc  8fa80018	lw	r8,24(r29)
 1011  00001ae0  8fdffff8	lw	r31,-8(r30)
 1012  00001ae4  001ee820	add	r29,r0,r30
 1013  00001ae8  8fdefffc	lw	r30,-4(r30)
 1014  00001aec  4be00000	jr	r31
 1015  00001af0  54000000	nop
 1016  00001af4          	.endproc _FsOpen
 1017  00001af4          	.align 2
 1018  00001af4          	.proc _FsClose
 1019  00001af4          	.global _FsClose
 1020  00001af4          	_FsClose:
 1021                      ;  Function 'FsClose'; 0 bytes of locals, 3 regs to save.
 1022  00001af4  afbefffc	sw	-4(r29),r30; push fp
 1023  00001af8  001df020	add	r30,r0,r29; fp = sp
 1024  00001afc  afbffff8	sw	-8(r29),r31; push ret addr
 1025  00001b00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1026  00001b04  afa20000	sw	0(r29),r2
 1027  00001b08  afa30004	sw	4(r29),r3
 1028  00001b0c  afa40008	sw	8(r29),r4
 1029  00001b10  8fdf0000	lw	r31,(r30)
 1030  00001b14  20020000	addi	r2,r0,#0
 1031  00001b18  23e1ffff	addi	r1,r31,#-1
 1032  00001b1c  7021001e	sleui	r1,r1,#30
 1033  00001b20  10200038	beqz	r1,L84_LF2
 1034  00001b24  54000000	nop; not filled.
 1035  00001b28  53e10004	slli	r1,r31,#0x4
 1036  00001b2c  003f0820	add	r1,r1,r31
 1037  00001b30  50210002	slli	r1,r1,#0x2
 1038  00001b34  003f0822	sub	r1,r1,r31
 1039  00001b38  50210002	slli	r1,r1,#0x2
 1040  00001b3c  3c040000	lhi	r4,((_openfiles_LF2)>>16)&0xffff
 1041  00001b40  2484b110	addui	r4,r4,(_openfiles_LF2)&0xffff
 1042  00001b44  00240820	add	r1,r1,r4
 1043  00001b48  8c210004	lw	r1,4(r1)
 1044  00001b4c  64210000	snei	r1,r1,#0
 1045  00001b50  10200008	beqz	r1,L84_LF2
 1046  00001b54  54000000	nop; not filled.
 1047  00001b58  20020001	addi	r2,r0,#1
 1048  00001b5c          	L84_LF2:
 1049  00001b5c  64410000	snei	r1,r2,#0
 1050  00001b60  10200074	beqz	r1,L82_LF2
 1051  00001b64  54000000	nop; not filled.
 1052  00001b68  23bdfff8	addi	r29,r29,#-8
 1053  00001b6c  53e10004	slli	r1,r31,#0x4
 1054  00001b70  003f0820	add	r1,r1,r31
 1055  00001b74  50210002	slli	r1,r1,#0x2
 1056  00001b78  003f0822	sub	r1,r1,r31
 1057  00001b7c  50230002	slli	r3,r1,#0x2
 1058  00001b80  3c040000	lhi	r4,((_openfiles_LF2)>>16)&0xffff
 1059  00001b84  2484b110	addui	r4,r4,(_openfiles_LF2)&0xffff
 1060  00001b88  00640820	add	r1,r3,r4
 1061  00001b8c  8c220000	lw	r2,(r1)
 1062  00001b90  50410001	slli	r1,r2,#0x1
 1063  00001b94  00220820	add	r1,r1,r2
 1064  00001b98  50210003	slli	r1,r1,#0x3
 1065  00001b9c  3c040000	lhi	r4,((_fs_LF2)>>16)&0xffff
 1066  00001ba0  2484b0e0	addui	r4,r4,(_fs_LF2)&0xffff
 1067  00001ba4  00240820	add	r1,r1,r4
 1068  00001ba8  afbf0000	sw	(r29),r31
 1069  00001bac  8c210010	lw	r1,16(r1)
 1070  00001bb0  4c200000	jalr	r1
 1071  00001bb4  54000000	nop; not filled.
 1072  00001bb8  23bd0008	addi	r29,r29,#8
 1073  00001bbc  3c040000	lhi	r4,((_openfiles_LF2)>>16)&0xffff
 1074  00001bc0  2484b110	addui	r4,r4,(_openfiles_LF2)&0xffff
 1075  00001bc4  00641020	add	r2,r3,r4
 1076  00001bc8  20040000	addi	r4,r0,#0
 1077  00001bcc  ac440004	sw	4(r2),r4
 1078  00001bd0  08000008	j	L86_LF2
 1079  00001bd4  54000000	nop; not filled.
 1080  00001bd8          	L82_LF2:
 1081  00001bd8  2001ffff	addi	r1,r0,#-1
 1082  00001bdc          	L86_LF2:
 1083  00001bdc  8fa20000	lw	r2,0(r29)
 1084  00001be0  8fa30004	lw	r3,4(r29)
 1085  00001be4  8fa40008	lw	r4,8(r29)
 1086  00001be8  8fdffff8	lw	r31,-8(r30)
 1087  00001bec  001ee820	add	r29,r0,r30
 1088  00001bf0  8fdefffc	lw	r30,-4(r30)
 1089  00001bf4  4be00000	jr	r31
 1090  00001bf8  54000000	nop
 1091  00001bfc          	.endproc _FsClose
 1092  00001bfc          	.align 2
 1093  00001bfc          	.proc _FsRead
 1094  00001bfc          	.global _FsRead
 1095  00001bfc          	_FsRead:
 1096                      ;  Function 'FsRead'; 0 bytes of locals, 2 regs to save.
 1097  00001bfc  afbefffc	sw	-4(r29),r30; push fp
 1098  00001c00  001df020	add	r30,r0,r29; fp = sp
 1099  00001c04  afbffff8	sw	-8(r29),r31; push ret addr
 1100  00001c08  2fbd0010	subui	r29,r29,#16; alloc local storage
 1101  00001c0c  afa20000	sw	0(r29),r2
 1102  00001c10  afa30004	sw	4(r29),r3
 1103  00001c14  8fdf0000	lw	r31,(r30)
 1104  00001c18  20020000	addi	r2,r0,#0
 1105  00001c1c  23e1ffff	addi	r1,r31,#-1
 1106  00001c20  7021001e	sleui	r1,r1,#30
 1107  00001c24  10200038	beqz	r1,L94_LF2
 1108  00001c28  54000000	nop; not filled.
 1109  00001c2c  53e10004	slli	r1,r31,#0x4
 1110  00001c30  003f0820	add	r1,r1,r31
 1111  00001c34  50210002	slli	r1,r1,#0x2
 1112  00001c38  003f0822	sub	r1,r1,r31
 1113  00001c3c  50210002	slli	r1,r1,#0x2
 1114  00001c40  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1115  00001c44  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1116  00001c48  00230820	add	r1,r1,r3
 1117  00001c4c  8c210004	lw	r1,4(r1)
 1118  00001c50  64210000	snei	r1,r1,#0
 1119  00001c54  10200008	beqz	r1,L94_LF2
 1120  00001c58  54000000	nop; not filled.
 1121  00001c5c  20020001	addi	r2,r0,#1
 1122  00001c60          	L94_LF2:
 1123  00001c60  64410000	snei	r1,r2,#0
 1124  00001c64  10200070	beqz	r1,L92_LF2
 1125  00001c68  54000000	nop; not filled.
 1126  00001c6c  23bdfff0	addi	r29,r29,#-16
 1127  00001c70  53e10004	slli	r1,r31,#0x4
 1128  00001c74  003f0820	add	r1,r1,r31
 1129  00001c78  50210002	slli	r1,r1,#0x2
 1130  00001c7c  003f0822	sub	r1,r1,r31
 1131  00001c80  50210002	slli	r1,r1,#0x2
 1132  00001c84  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1133  00001c88  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1134  00001c8c  00230820	add	r1,r1,r3
 1135  00001c90  8c220000	lw	r2,(r1)
 1136  00001c94  50410001	slli	r1,r2,#0x1
 1137  00001c98  00220820	add	r1,r1,r2
 1138  00001c9c  50210003	slli	r1,r1,#0x3
 1139  00001ca0  3c030000	lhi	r3,((_fs_LF2)>>16)&0xffff
 1140  00001ca4  2463b0e0	addui	r3,r3,(_fs_LF2)&0xffff
 1141  00001ca8  00230820	add	r1,r1,r3
 1142  00001cac  afbf0000	sw	(r29),r31
 1143  00001cb0  8fc30004	lw	r3,4(r30)
 1144  00001cb4  afa30004	sw	4(r29),r3
 1145  00001cb8  8fc30008	lw	r3,8(r30)
 1146  00001cbc  afa30008	sw	8(r29),r3
 1147  00001cc0  8c210004	lw	r1,4(r1)
 1148  00001cc4  4c200000	jalr	r1
 1149  00001cc8  54000000	nop; not filled.
 1150  00001ccc  23bd0010	addi	r29,r29,#16
 1151  00001cd0  08000008	j	L91_LF2
 1152  00001cd4  54000000	nop; not filled.
 1153  00001cd8          	L92_LF2:
 1154  00001cd8  2001ffff	addi	r1,r0,#-1
 1155  00001cdc          	L91_LF2:
 1156  00001cdc  8fa20000	lw	r2,0(r29)
 1157  00001ce0  8fa30004	lw	r3,4(r29)
 1158  00001ce4  8fdffff8	lw	r31,-8(r30)
 1159  00001ce8  001ee820	add	r29,r0,r30
 1160  00001cec  8fdefffc	lw	r30,-4(r30)
 1161  00001cf0  4be00000	jr	r31
 1162  00001cf4  54000000	nop
 1163  00001cf8          	.endproc _FsRead
 1164  00001cf8          	.align 2
 1165  00001cf8          	.proc _FsWrite
 1166  00001cf8          	.global _FsWrite
 1167  00001cf8          	_FsWrite:
 1168                      ;  Function 'FsWrite'; 0 bytes of locals, 2 regs to save.
 1169  00001cf8  afbefffc	sw	-4(r29),r30; push fp
 1170  00001cfc  001df020	add	r30,r0,r29; fp = sp
 1171  00001d00  afbffff8	sw	-8(r29),r31; push ret addr
 1172  00001d04  2fbd0010	subui	r29,r29,#16; alloc local storage
 1173  00001d08  afa20000	sw	0(r29),r2
 1174  00001d0c  afa30004	sw	4(r29),r3
 1175  00001d10  8fdf0000	lw	r31,(r30)
 1176  00001d14  20020000	addi	r2,r0,#0
 1177  00001d18  23e1ffff	addi	r1,r31,#-1
 1178  00001d1c  7021001e	sleui	r1,r1,#30
 1179  00001d20  10200038	beqz	r1,L103_LF2
 1180  00001d24  54000000	nop; not filled.
 1181  00001d28  53e10004	slli	r1,r31,#0x4
 1182  00001d2c  003f0820	add	r1,r1,r31
 1183  00001d30  50210002	slli	r1,r1,#0x2
 1184  00001d34  003f0822	sub	r1,r1,r31
 1185  00001d38  50210002	slli	r1,r1,#0x2
 1186  00001d3c  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1187  00001d40  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1188  00001d44  00230820	add	r1,r1,r3
 1189  00001d48  8c210004	lw	r1,4(r1)
 1190  00001d4c  64210000	snei	r1,r1,#0
 1191  00001d50  10200008	beqz	r1,L103_LF2
 1192  00001d54  54000000	nop; not filled.
 1193  00001d58  20020001	addi	r2,r0,#1
 1194  00001d5c          	L103_LF2:
 1195  00001d5c  64410000	snei	r1,r2,#0
 1196  00001d60  10200070	beqz	r1,L101_LF2
 1197  00001d64  54000000	nop; not filled.
 1198  00001d68  23bdfff0	addi	r29,r29,#-16
 1199  00001d6c  53e10004	slli	r1,r31,#0x4
 1200  00001d70  003f0820	add	r1,r1,r31
 1201  00001d74  50210002	slli	r1,r1,#0x2
 1202  00001d78  003f0822	sub	r1,r1,r31
 1203  00001d7c  50210002	slli	r1,r1,#0x2
 1204  00001d80  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1205  00001d84  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1206  00001d88  00230820	add	r1,r1,r3
 1207  00001d8c  8c220000	lw	r2,(r1)
 1208  00001d90  50410001	slli	r1,r2,#0x1
 1209  00001d94  00220820	add	r1,r1,r2
 1210  00001d98  50210003	slli	r1,r1,#0x3
 1211  00001d9c  3c030000	lhi	r3,((_fs_LF2)>>16)&0xffff
 1212  00001da0  2463b0e0	addui	r3,r3,(_fs_LF2)&0xffff
 1213  00001da4  00230820	add	r1,r1,r3
 1214  00001da8  afbf0000	sw	(r29),r31
 1215  00001dac  8fc30004	lw	r3,4(r30)
 1216  00001db0  afa30004	sw	4(r29),r3
 1217  00001db4  8fc30008	lw	r3,8(r30)
 1218  00001db8  afa30008	sw	8(r29),r3
 1219  00001dbc  8c210008	lw	r1,8(r1)
 1220  00001dc0  4c200000	jalr	r1
 1221  00001dc4  54000000	nop; not filled.
 1222  00001dc8  23bd0010	addi	r29,r29,#16
 1223  00001dcc  08000008	j	L100_LF2
 1224  00001dd0  54000000	nop; not filled.
 1225  00001dd4          	L101_LF2:
 1226  00001dd4  2001ffff	addi	r1,r0,#-1
 1227  00001dd8          	L100_LF2:
 1228  00001dd8  8fa20000	lw	r2,0(r29)
 1229  00001ddc  8fa30004	lw	r3,4(r29)
 1230  00001de0  8fdffff8	lw	r31,-8(r30)
 1231  00001de4  001ee820	add	r29,r0,r30
 1232  00001de8  8fdefffc	lw	r30,-4(r30)
 1233  00001dec  4be00000	jr	r31
 1234  00001df0  54000000	nop
 1235  00001df4          	.endproc _FsWrite
 1236  00001df4          	.align 2
 1237  00001df4          	.proc _FsSeek
 1238  00001df4          	.global _FsSeek
 1239  00001df4          	_FsSeek:
 1240                      ;  Function 'FsSeek'; 0 bytes of locals, 2 regs to save.
 1241  00001df4  afbefffc	sw	-4(r29),r30; push fp
 1242  00001df8  001df020	add	r30,r0,r29; fp = sp
 1243  00001dfc  afbffff8	sw	-8(r29),r31; push ret addr
 1244  00001e00  2fbd0010	subui	r29,r29,#16; alloc local storage
 1245  00001e04  afa20000	sw	0(r29),r2
 1246  00001e08  afa30004	sw	4(r29),r3
 1247  00001e0c  8fdf0000	lw	r31,(r30)
 1248  00001e10  20020000	addi	r2,r0,#0
 1249  00001e14  23e1ffff	addi	r1,r31,#-1
 1250  00001e18  7021001e	sleui	r1,r1,#30
 1251  00001e1c  10200038	beqz	r1,L112_LF2
 1252  00001e20  54000000	nop; not filled.
 1253  00001e24  53e10004	slli	r1,r31,#0x4
 1254  00001e28  003f0820	add	r1,r1,r31
 1255  00001e2c  50210002	slli	r1,r1,#0x2
 1256  00001e30  003f0822	sub	r1,r1,r31
 1257  00001e34  50210002	slli	r1,r1,#0x2
 1258  00001e38  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1259  00001e3c  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1260  00001e40  00230820	add	r1,r1,r3
 1261  00001e44  8c210004	lw	r1,4(r1)
 1262  00001e48  64210000	snei	r1,r1,#0
 1263  00001e4c  10200008	beqz	r1,L112_LF2
 1264  00001e50  54000000	nop; not filled.
 1265  00001e54  20020001	addi	r2,r0,#1
 1266  00001e58          	L112_LF2:
 1267  00001e58  64410000	snei	r1,r2,#0
 1268  00001e5c  10200070	beqz	r1,L110_LF2
 1269  00001e60  54000000	nop; not filled.
 1270  00001e64  23bdfff0	addi	r29,r29,#-16
 1271  00001e68  53e10004	slli	r1,r31,#0x4
 1272  00001e6c  003f0820	add	r1,r1,r31
 1273  00001e70  50210002	slli	r1,r1,#0x2
 1274  00001e74  003f0822	sub	r1,r1,r31
 1275  00001e78  50210002	slli	r1,r1,#0x2
 1276  00001e7c  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1277  00001e80  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1278  00001e84  00230820	add	r1,r1,r3
 1279  00001e88  8c220000	lw	r2,(r1)
 1280  00001e8c  50410001	slli	r1,r2,#0x1
 1281  00001e90  00220820	add	r1,r1,r2
 1282  00001e94  50210003	slli	r1,r1,#0x3
 1283  00001e98  3c030000	lhi	r3,((_fs_LF2)>>16)&0xffff
 1284  00001e9c  2463b0e0	addui	r3,r3,(_fs_LF2)&0xffff
 1285  00001ea0  00230820	add	r1,r1,r3
 1286  00001ea4  afbf0000	sw	(r29),r31
 1287  00001ea8  8fc30004	lw	r3,4(r30)
 1288  00001eac  afa30004	sw	4(r29),r3
 1289  00001eb0  8fc30008	lw	r3,8(r30)
 1290  00001eb4  afa30008	sw	8(r29),r3
 1291  00001eb8  8c21000c	lw	r1,12(r1)
 1292  00001ebc  4c200000	jalr	r1
 1293  00001ec0  54000000	nop; not filled.
 1294  00001ec4  23bd0010	addi	r29,r29,#16
 1295  00001ec8  08000008	j	L109_LF2
 1296  00001ecc  54000000	nop; not filled.
 1297  00001ed0          	L110_LF2:
 1298  00001ed0  2001ffff	addi	r1,r0,#-1
 1299  00001ed4          	L109_LF2:
 1300  00001ed4  8fa20000	lw	r2,0(r29)
 1301  00001ed8  8fa30004	lw	r3,4(r29)
 1302  00001edc  8fdffff8	lw	r31,-8(r30)
 1303  00001ee0  001ee820	add	r29,r0,r30
 1304  00001ee4  8fdefffc	lw	r30,-4(r30)
 1305  00001ee8  4be00000	jr	r31
 1306  00001eec  54000000	nop
 1307  00001ef0          	.endproc _FsSeek
 1308  00001ef0          	.align 2
 1309  00001ef0          	.proc _FsDelete
 1310  00001ef0          	.global _FsDelete
 1311  00001ef0          	_FsDelete:
 1312                      ;  Function 'FsDelete'; 0 bytes of locals, 2 regs to save.
 1313  00001ef0  afbefffc	sw	-4(r29),r30; push fp
 1314  00001ef4  001df020	add	r30,r0,r29; fp = sp
 1315  00001ef8  afbffff8	sw	-8(r29),r31; push ret addr
 1316  00001efc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1317  00001f00  afa20000	sw	0(r29),r2
 1318  00001f04  afa30004	sw	4(r29),r3
 1319  00001f08  8fc20000	lw	r2,(r30)
 1320  00001f0c  23bdfff0	addi	r29,r29,#-16
 1321  00001f10  afa20000	sw	(r29),r2
 1322  00001f14  3c010000	lhi	r1,((LC1_LF2)>>16)&0xffff
 1323  00001f18  2421b058	addui	r1,r1,(LC1_LF2)&0xffff
 1324  00001f1c  afa10004	sw	4(r29),r1
 1325  00001f20  20030004	addi	r3,r0,#4
 1326  00001f24  afa30008	sw	8(r29),r3
 1327  00001f28  0c001ba8	jal	_dstrncmp
 1328  00001f2c  54000000	nop; not filled.
 1329  00001f30  23bd0010	addi	r29,r29,#16
 1330  00001f34  64210000	snei	r1,r1,#0
 1331  00001f38  1420001c	bnez	r1,L118_LF2
 1332  00001f3c  54000000	nop; not filled.
 1333  00001f40  20420004	addi	r2,r2,#4
 1334  00001f44  23bdfff8	addi	r29,r29,#-8
 1335  00001f48  3c010000	lhi	r1,((_fs_LF2+44)>>16)&0xffff
 1336  00001f4c  2421b10c	addui	r1,r1,(_fs_LF2+44)&0xffff
 1337  00001f50  08000010	j	L120_LF2
 1338  00001f54  54000000	nop; not filled.
 1339  00001f58          	L118_LF2:
 1340  00001f58  23bdfff8	addi	r29,r29,#-8
 1341  00001f5c  3c010000	lhi	r1,((_fs_LF2+20)>>16)&0xffff
 1342  00001f60  2421b0f4	addui	r1,r1,(_fs_LF2+20)&0xffff
 1343  00001f64          	L120_LF2:
 1344  00001f64  afa20000	sw	(r29),r2
 1345  00001f68  8c210000	lw	r1,(r1)
 1346  00001f6c  4c200000	jalr	r1
 1347  00001f70  54000000	nop; not filled.
 1348  00001f74  23bd0008	addi	r29,r29,#8
 1349  00001f78  8fa20000	lw	r2,0(r29)
 1350  00001f7c  8fa30004	lw	r3,4(r29)
 1351  00001f80  8fdffff8	lw	r31,-8(r30)
 1352  00001f84  001ee820	add	r29,r0,r30
 1353  00001f88  8fdefffc	lw	r30,-4(r30)
 1354  00001f8c  4be00000	jr	r31
 1355  00001f90  54000000	nop
 1356  00001f94          	.endproc _FsDelete
 1357  00001f94          	.data
 1358  0000b0aa          	.align 2
 1359  0000b0ac          	LC4_LF2:
 1360  0000b0ac  41747465	.ascii "Attempting to open file %s into desc %d, mode %d.\n\000"
 1360  0000b0b0  6d707469	
 1360  0000b0b4  6e672074	
 1360  0000b0b8  6f206f70	
 1360  0000b0bc  656e2066	
 1360  0000b0c0  696c6520	
 1360  0000b0c4  25732069	
 1360  0000b0c8  6e746f20	
 1360  0000b0cc  64657363	
 1360  0000b0d0  2025642c	
 1360  0000b0d4  206d6f64	
 1360  0000b0d8  65202564	
 1360  0000b0dc  2e0a00  	
 1361  0000b0df          	.text
 1362  00001f94          	.align 2
 1363  00001f94          	.proc _FsUnixOpen
 1364  00001f94          	.global _FsUnixOpen
 1365  00001f94          	_FsUnixOpen:
 1366                      ;  Function 'FsUnixOpen'; 0 bytes of locals, 5 regs to save.
 1367  00001f94  afbefffc	sw	-4(r29),r30; push fp
 1368  00001f98  001df020	add	r30,r0,r29; fp = sp
 1369  00001f9c  afbffff8	sw	-8(r29),r31; push ret addr
 1370  00001fa0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1371  00001fa4  afa20000	sw	0(r29),r2
 1372  00001fa8  afa30004	sw	4(r29),r3
 1373  00001fac  afa40008	sw	8(r29),r4
 1374  00001fb0  afa5000c	sw	12(r29),r5
 1375  00001fb4  afa60010	sw	16(r29),r6
 1376  00001fb8  8fc40000	lw	r4,(r30)
 1377  00001fbc  8fc30004	lw	r3,4(r30)
 1378  00001fc0  8fc50008	lw	r5,8(r30)
 1379  00001fc4  23bdfff8	addi	r29,r29,#-8
 1380  00001fc8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 1381  00001fcc  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 1382  00001fd0  afa20000	sw	(r29),r2
 1383  00001fd4  20060066	addi	r6,r0,#102
 1384  00001fd8  afa60004	sw	4(r29),r6
 1385  00001fdc  0c001e38	jal	_dindex
 1386  00001fe0  54000000	nop; not filled.
 1387  00001fe4  23bd0008	addi	r29,r29,#8
 1388  00001fe8  64210000	snei	r1,r1,#0
 1389  00001fec  1420002c	bnez	r1,L127_LF2
 1390  00001ff0  54000000	nop; not filled.
 1391  00001ff4  23bdfff8	addi	r29,r29,#-8
 1392  00001ff8  afa20000	sw	(r29),r2
 1393  00001ffc  2006002b	addi	r6,r0,#43
 1394  00002000  afa60004	sw	4(r29),r6
 1395  00002004  0c001e10	jal	_dindex
 1396  00002008  54000000	nop; not filled.
 1397  0000200c  23bd0008	addi	r29,r29,#8
 1398  00002010  64210000	snei	r1,r1,#0
 1399  00002014  1020002c	beqz	r1,L126_LF2
 1400  00002018  54000000	nop; not filled.
 1401  0000201c          	L127_LF2:
 1402  0000201c  23bdfff0	addi	r29,r29,#-16
 1403  00002020  3c060000	lhi	r6,((LC4_LF2)>>16)&0xffff
 1404  00002024  24c6b0ac	addui	r6,r6,(LC4_LF2)&0xffff
 1405  00002028  afa60000	sw	(r29),r6
 1406  0000202c  afa30004	sw	4(r29),r3
 1407  00002030  afa40008	sw	8(r29),r4
 1408  00002034  afa5000c	sw	12(r29),r5
 1409  00002038  0c00816c	jal	_printf
 1410  0000203c  54000000	nop; not filled.
 1411  00002040  23bd0010	addi	r29,r29,#16
 1412  00002044          	L126_LF2:
 1413  00002044  23bdfff8	addi	r29,r29,#-8
 1414  00002048  afa30000	sw	(r29),r3
 1415  0000204c  afa50004	sw	4(r29),r5
 1416  00002050  0c0080c4	jal	_open
 1417  00002054  54000000	nop; not filled.
 1418  00002058  00011820	add	r3,r0,r1
 1419  0000205c  50810004	slli	r1,r4,#0x4
 1420  00002060  00240820	add	r1,r1,r4
 1421  00002064  50210002	slli	r1,r1,#0x2
 1422  00002068  00240822	sub	r1,r1,r4
 1423  0000206c  50210002	slli	r1,r1,#0x2
 1424  00002070  3c060000	lhi	r6,((_openfiles_LF2)>>16)&0xffff
 1425  00002074  24c6b110	addui	r6,r6,(_openfiles_LF2)&0xffff
 1426  00002078  00260820	add	r1,r1,r6
 1427  0000207c  ac230108	sw	264(r1),r3
 1428  00002080  23bd0008	addi	r29,r29,#8
 1429  00002084  68620000	slti	r2,r3,#0
 1430  00002088  00030820	add	r1,r0,r3
 1431  0000208c  14400008	bnez	r2,L128_LF2
 1432  00002090  54000000	nop; not filled.
 1433  00002094  20010001	addi	r1,r0,#1
 1434  00002098          	L128_LF2:
 1435  00002098  8fa20000	lw	r2,0(r29)
 1436  0000209c  8fa30004	lw	r3,4(r29)
 1437  000020a0  8fa40008	lw	r4,8(r29)
 1438  000020a4  8fa5000c	lw	r5,12(r29)
 1439  000020a8  8fa60010	lw	r6,16(r29)
 1440  000020ac  8fdffff8	lw	r31,-8(r30)
 1441  000020b0  001ee820	add	r29,r0,r30
 1442  000020b4  8fdefffc	lw	r30,-4(r30)
 1443  000020b8  4be00000	jr	r31
 1444  000020bc  54000000	nop
 1445  000020c0          	.endproc _FsUnixOpen
 1446  000020c0          	.align 2
 1447  000020c0          	.proc _FsUnixRead
 1448  000020c0          	.global _FsUnixRead
 1449  000020c0          	_FsUnixRead:
 1450                      ;  Function 'FsUnixRead'; 0 bytes of locals, 4 regs to save.
 1451  000020c0  afbefffc	sw	-4(r29),r30; push fp
 1452  000020c4  001df020	add	r30,r0,r29; fp = sp
 1453  000020c8  afbffff8	sw	-8(r29),r31; push ret addr
 1454  000020cc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1455  000020d0  afa20000	sw	0(r29),r2
 1456  000020d4  afa30004	sw	4(r29),r3
 1457  000020d8  afa40008	sw	8(r29),r4
 1458  000020dc  afa5000c	sw	12(r29),r5
 1459  000020e0  8fc20000	lw	r2,(r30)
 1460  000020e4  8fc30004	lw	r3,4(r30)
 1461  000020e8  8fc40008	lw	r4,8(r30)
 1462  000020ec  23bdfff0	addi	r29,r29,#-16
 1463  000020f0  50410004	slli	r1,r2,#0x4
 1464  000020f4  00220820	add	r1,r1,r2
 1465  000020f8  50210002	slli	r1,r1,#0x2
 1466  000020fc  00220822	sub	r1,r1,r2
 1467  00002100  50210002	slli	r1,r1,#0x2
 1468  00002104  3c050000	lhi	r5,((_openfiles_LF2)>>16)&0xffff
 1469  00002108  24a5b110	addui	r5,r5,(_openfiles_LF2)&0xffff
 1470  0000210c  00250820	add	r1,r1,r5
 1471  00002110  8c210108	lw	r1,264(r1)
 1472  00002114  afa10000	sw	(r29),r1
 1473  00002118  afa30004	sw	4(r29),r3
 1474  0000211c  afa40008	sw	8(r29),r4
 1475  00002120  0c00800c	jal	_read
 1476  00002124  54000000	nop; not filled.
 1477  00002128  23bd0010	addi	r29,r29,#16
 1478  0000212c  8fa20000	lw	r2,0(r29)
 1479  00002130  8fa30004	lw	r3,4(r29)
 1480  00002134  8fa40008	lw	r4,8(r29)
 1481  00002138  8fa5000c	lw	r5,12(r29)
 1482  0000213c  8fdffff8	lw	r31,-8(r30)
 1483  00002140  001ee820	add	r29,r0,r30
 1484  00002144  8fdefffc	lw	r30,-4(r30)
 1485  00002148  4be00000	jr	r31
 1486  0000214c  54000000	nop
 1487  00002150          	.endproc _FsUnixRead
 1488  00002150          	.align 2
 1489  00002150          	.proc _FsUnixWrite
 1490  00002150          	.global _FsUnixWrite
 1491  00002150          	_FsUnixWrite:
 1492                      ;  Function 'FsUnixWrite'; 0 bytes of locals, 4 regs to save.
 1493  00002150  afbefffc	sw	-4(r29),r30; push fp
 1494  00002154  001df020	add	r30,r0,r29; fp = sp
 1495  00002158  afbffff8	sw	-8(r29),r31; push ret addr
 1496  0000215c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1497  00002160  afa20000	sw	0(r29),r2
 1498  00002164  afa30004	sw	4(r29),r3
 1499  00002168  afa40008	sw	8(r29),r4
 1500  0000216c  afa5000c	sw	12(r29),r5
 1501  00002170  8fc20000	lw	r2,(r30)
 1502  00002174  8fc30004	lw	r3,4(r30)
 1503  00002178  8fc40008	lw	r4,8(r30)
 1504  0000217c  23bdfff0	addi	r29,r29,#-16
 1505  00002180  50410004	slli	r1,r2,#0x4
 1506  00002184  00220820	add	r1,r1,r2
 1507  00002188  50210002	slli	r1,r1,#0x2
 1508  0000218c  00220822	sub	r1,r1,r2
 1509  00002190  50210002	slli	r1,r1,#0x2
 1510  00002194  3c050000	lhi	r5,((_openfiles_LF2)>>16)&0xffff
 1511  00002198  24a5b110	addui	r5,r5,(_openfiles_LF2)&0xffff
 1512  0000219c  00250820	add	r1,r1,r5
 1513  000021a0  8c210108	lw	r1,264(r1)
 1514  000021a4  afa10000	sw	(r29),r1
 1515  000021a8  afa30004	sw	4(r29),r3
 1516  000021ac  afa40008	sw	8(r29),r4
 1517  000021b0  0c007f88	jal	_write
 1518  000021b4  54000000	nop; not filled.
 1519  000021b8  23bd0010	addi	r29,r29,#16
 1520  000021bc  8fa20000	lw	r2,0(r29)
 1521  000021c0  8fa30004	lw	r3,4(r29)
 1522  000021c4  8fa40008	lw	r4,8(r29)
 1523  000021c8  8fa5000c	lw	r5,12(r29)
 1524  000021cc  8fdffff8	lw	r31,-8(r30)
 1525  000021d0  001ee820	add	r29,r0,r30
 1526  000021d4  8fdefffc	lw	r30,-4(r30)
 1527  000021d8  4be00000	jr	r31
 1528  000021dc  54000000	nop
 1529  000021e0          	.endproc _FsUnixWrite
 1530  000021e0          	.align 2
 1531  000021e0          	.proc _FsUnixSeek
 1532  000021e0          	.global _FsUnixSeek
 1533  000021e0          	_FsUnixSeek:
 1534                      ;  Function 'FsUnixSeek'; 0 bytes of locals, 4 regs to save.
 1535  000021e0  afbefffc	sw	-4(r29),r30; push fp
 1536  000021e4  001df020	add	r30,r0,r29; fp = sp
 1537  000021e8  afbffff8	sw	-8(r29),r31; push ret addr
 1538  000021ec  2fbd0018	subui	r29,r29,#24; alloc local storage
 1539  000021f0  afa20000	sw	0(r29),r2
 1540  000021f4  afa30004	sw	4(r29),r3
 1541  000021f8  afa40008	sw	8(r29),r4
 1542  000021fc  afa5000c	sw	12(r29),r5
 1543  00002200  8fc20000	lw	r2,(r30)
 1544  00002204  8fc30004	lw	r3,4(r30)
 1545  00002208  8fc40008	lw	r4,8(r30)
 1546  0000220c  23bdfff0	addi	r29,r29,#-16
 1547  00002210  50410004	slli	r1,r2,#0x4
 1548  00002214  00220820	add	r1,r1,r2
 1549  00002218  50210002	slli	r1,r1,#0x2
 1550  0000221c  00220822	sub	r1,r1,r2
 1551  00002220  50210002	slli	r1,r1,#0x2
 1552  00002224  3c050000	lhi	r5,((_openfiles_LF2)>>16)&0xffff
 1553  00002228  24a5b110	addui	r5,r5,(_openfiles_LF2)&0xffff
 1554  0000222c  00250820	add	r1,r1,r5
 1555  00002230  8c210108	lw	r1,264(r1)
 1556  00002234  afa10000	sw	(r29),r1
 1557  00002238  afa30004	sw	4(r29),r3
 1558  0000223c  afa40008	sw	8(r29),r4
 1559  00002240  0c007f04	jal	_lseek
 1560  00002244  54000000	nop; not filled.
 1561  00002248  23bd0010	addi	r29,r29,#16
 1562  0000224c  8fa20000	lw	r2,0(r29)
 1563  00002250  8fa30004	lw	r3,4(r29)
 1564  00002254  8fa40008	lw	r4,8(r29)
 1565  00002258  8fa5000c	lw	r5,12(r29)
 1566  0000225c  8fdffff8	lw	r31,-8(r30)
 1567  00002260  001ee820	add	r29,r0,r30
 1568  00002264  8fdefffc	lw	r30,-4(r30)
 1569  00002268  4be00000	jr	r31
 1570  0000226c  54000000	nop
 1571  00002270          	.endproc _FsUnixSeek
 1572  00002270          	.align 2
 1573  00002270          	.proc _FsUnixClose
 1574  00002270          	.global _FsUnixClose
 1575  00002270          	_FsUnixClose:
 1576                      ;  Function 'FsUnixClose'; 0 bytes of locals, 2 regs to save.
 1577  00002270  afbefffc	sw	-4(r29),r30; push fp
 1578  00002274  001df020	add	r30,r0,r29; fp = sp
 1579  00002278  afbffff8	sw	-8(r29),r31; push ret addr
 1580  0000227c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1581  00002280  afa20000	sw	0(r29),r2
 1582  00002284  afa30004	sw	4(r29),r3
 1583  00002288  8fc20000	lw	r2,(r30)
 1584  0000228c  23bdfff8	addi	r29,r29,#-8
 1585  00002290  50410004	slli	r1,r2,#0x4
 1586  00002294  00220820	add	r1,r1,r2
 1587  00002298  50210002	slli	r1,r1,#0x2
 1588  0000229c  00220822	sub	r1,r1,r2
 1589  000022a0  50210002	slli	r1,r1,#0x2
 1590  000022a4  3c030000	lhi	r3,((_openfiles_LF2)>>16)&0xffff
 1591  000022a8  2463b110	addui	r3,r3,(_openfiles_LF2)&0xffff
 1592  000022ac  00230820	add	r1,r1,r3
 1593  000022b0  8c210108	lw	r1,264(r1)
 1594  000022b4  afa10000	sw	(r29),r1
 1595  000022b8  0c007e68	jal	_close
 1596  000022bc  54000000	nop; not filled.
 1597  000022c0  23bd0008	addi	r29,r29,#8
 1598  000022c4  8fa20000	lw	r2,0(r29)
 1599  000022c8  8fa30004	lw	r3,4(r29)
 1600  000022cc  8fdffff8	lw	r31,-8(r30)
 1601  000022d0  001ee820	add	r29,r0,r30
 1602  000022d4  8fdefffc	lw	r30,-4(r30)
 1603  000022d8  4be00000	jr	r31
 1604  000022dc  54000000	nop
 1605  000022e0          	.endproc _FsUnixClose
 1606  000022e0          	.align 2
 1607  000022e0          	.proc _FsUnixDelete
 1608  000022e0          	.global _FsUnixDelete
 1609  000022e0          	_FsUnixDelete:
 1610                      ;  Function 'FsUnixDelete'; 0 bytes of locals, 0 regs to save.
 1611  000022e0  afbefffc	sw	-4(r29),r30; push fp
 1612  000022e4  001df020	add	r30,r0,r29; fp = sp
 1613  000022e8  afbffff8	sw	-8(r29),r31; push ret addr
 1614  000022ec  2fbd0008	subui	r29,r29,#8; alloc local storage
 1615  000022f0  2001ffff	addi	r1,r0,#-1
 1616  000022f4  8fdffff8	lw	r31,-8(r30)
 1617  000022f8  001ee820	add	r29,r0,r30
 1618  000022fc  8fdefffc	lw	r30,-4(r30)
 1619  00002300  4be00000	jr	r31
 1620  00002304  54000000	nop
 1621  00002308          	.endproc _FsUnixDelete
 1622  00002308          	.align 2
 1623  00002308          	.proc _FsDlxIo
 1624  00002308          	.global _FsDlxIo
 1625  00002308          	_FsDlxIo:
 1626                      ;  Function 'FsDlxIo'; 0 bytes of locals, 0 regs to save.
 1627  00002308  afbefffc	sw	-4(r29),r30; push fp
 1628  0000230c  001df020	add	r30,r0,r29; fp = sp
 1629  00002310  afbffff8	sw	-8(r29),r31; push ret addr
 1630  00002314  2fbd0008	subui	r29,r29,#8; alloc local storage
 1631  00002318  20010001	addi	r1,r0,#1
 1632  0000231c  8fdffff8	lw	r31,-8(r30)
 1633  00002320  001ee820	add	r29,r0,r30
 1634  00002324  8fdefffc	lw	r30,-4(r30)
 1635  00002328  4be00000	jr	r31
 1636  0000232c  54000000	nop
 1637  00002330          	.endproc _FsDlxIo
 1638  00002330          	.align 2
 1639  00002330          	.proc _FsDlxRead
 1640  00002330          	.global _FsDlxRead
 1641  00002330          	_FsDlxRead:
 1642                      ;  Function 'FsDlxRead'; 0 bytes of locals, 0 regs to save.
 1643  00002330  afbefffc	sw	-4(r29),r30; push fp
 1644  00002334  001df020	add	r30,r0,r29; fp = sp
 1645  00002338  afbffff8	sw	-8(r29),r31; push ret addr
 1646  0000233c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1647  00002340  20010001	addi	r1,r0,#1
 1648  00002344  8fdffff8	lw	r31,-8(r30)
 1649  00002348  001ee820	add	r29,r0,r30
 1650  0000234c  8fdefffc	lw	r30,-4(r30)
 1651  00002350  4be00000	jr	r31
 1652  00002354  54000000	nop
 1653  00002358          	.endproc _FsDlxRead
 1654  00002358          	.align 2
 1655  00002358          	.proc _FsDlxWrite
 1656  00002358          	.global _FsDlxWrite
 1657  00002358          	_FsDlxWrite:
 1658                      ;  Function 'FsDlxWrite'; 0 bytes of locals, 0 regs to save.
 1659  00002358  afbefffc	sw	-4(r29),r30; push fp
 1660  0000235c  001df020	add	r30,r0,r29; fp = sp
 1661  00002360  afbffff8	sw	-8(r29),r31; push ret addr
 1662  00002364  2fbd0008	subui	r29,r29,#8; alloc local storage
 1663  00002368  20010001	addi	r1,r0,#1
 1664  0000236c  8fdffff8	lw	r31,-8(r30)
 1665  00002370  001ee820	add	r29,r0,r30
 1666  00002374  8fdefffc	lw	r30,-4(r30)
 1667  00002378  4be00000	jr	r31
 1668  0000237c  54000000	nop
 1669  00002380          	.endproc _FsDlxWrite
 1670  00002380          	.align 2
 1671  00002380          	.proc _FsDlxOpen
 1672  00002380          	.global _FsDlxOpen
 1673  00002380          	_FsDlxOpen:
 1674                      ;  Function 'FsDlxOpen'; 0 bytes of locals, 1 regs to save.
 1675  00002380  afbefffc	sw	-4(r29),r30; push fp
 1676  00002384  001df020	add	r30,r0,r29; fp = sp
 1677  00002388  afbffff8	sw	-8(r29),r31; push ret addr
 1678  0000238c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1679  00002390  afa20000	sw	0(r29),r2
 1680  00002394  8fc10000	lw	r1,(r30)
 1681  00002398  50220004	slli	r2,r1,#0x4
 1682  0000239c  00411020	add	r2,r2,r1
 1683  000023a0  50420002	slli	r2,r2,#0x2
 1684  000023a4  00410822	sub	r1,r2,r1
 1685  000023a8  50210002	slli	r1,r1,#0x2
 1686  000023ac  3c1f0000	lhi	r31,((_openfiles_LF2)>>16)&0xffff
 1687  000023b0  27ffb110	addui	r31,r31,(_openfiles_LF2)&0xffff
 1688  000023b4  003f0820	add	r1,r1,r31
 1689  000023b8  201f0000	addi	r31,r0,#0
 1690  000023bc  ac3f0108	sw	264(r1),r31
 1691  000023c0  20010001	addi	r1,r0,#1
 1692  000023c4  8fa20000	lw	r2,0(r29)
 1693  000023c8  8fdffff8	lw	r31,-8(r30)
 1694  000023cc  001ee820	add	r29,r0,r30
 1695  000023d0  8fdefffc	lw	r30,-4(r30)
 1696  000023d4  4be00000	jr	r31
 1697  000023d8  54000000	nop
 1698  000023dc          	.endproc _FsDlxOpen
 1699  000023dc          	.align 2
 1700  000023dc          	.proc _FsDlxSeek
 1701  000023dc          	.global _FsDlxSeek
 1702  000023dc          	_FsDlxSeek:
 1703                      ;  Function 'FsDlxSeek'; 0 bytes of locals, 1 regs to save.
 1704  000023dc  afbefffc	sw	-4(r29),r30; push fp
 1705  000023e0  001df020	add	r30,r0,r29; fp = sp
 1706  000023e4  afbffff8	sw	-8(r29),r31; push ret addr
 1707  000023e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1708  000023ec  afa20000	sw	0(r29),r2
 1709  000023f0  8fc10000	lw	r1,(r30)
 1710  000023f4  50220004	slli	r2,r1,#0x4
 1711  000023f8  00411020	add	r2,r2,r1
 1712  000023fc  50420002	slli	r2,r2,#0x2
 1713  00002400  00410822	sub	r1,r2,r1
 1714  00002404  50210002	slli	r1,r1,#0x2
 1715  00002408  3c1f0000	lhi	r31,((_openfiles_LF2)>>16)&0xffff
 1716  0000240c  27ffb110	addui	r31,r31,(_openfiles_LF2)&0xffff
 1717  00002410  003f0820	add	r1,r1,r31
 1718  00002414  8c210108	lw	r1,264(r1)
 1719  00002418  8fa20000	lw	r2,0(r29)
 1720  0000241c  8fdffff8	lw	r31,-8(r30)
 1721  00002420  001ee820	add	r29,r0,r30
 1722  00002424  8fdefffc	lw	r30,-4(r30)
 1723  00002428  4be00000	jr	r31
 1724  0000242c  54000000	nop
 1725  00002430          	.endproc _FsDlxSeek
 1726  00002430          	.align 2
 1727  00002430          	.proc _FsDlxClose
 1728  00002430          	.global _FsDlxClose
 1729  00002430          	_FsDlxClose:
 1730                      ;  Function 'FsDlxClose'; 0 bytes of locals, 0 regs to save.
 1731  00002430  afbefffc	sw	-4(r29),r30; push fp
 1732  00002434  001df020	add	r30,r0,r29; fp = sp
 1733  00002438  afbffff8	sw	-8(r29),r31; push ret addr
 1734  0000243c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1735  00002440  20010001	addi	r1,r0,#1
 1736  00002444  8fdffff8	lw	r31,-8(r30)
 1737  00002448  001ee820	add	r29,r0,r30
 1738  0000244c  8fdefffc	lw	r30,-4(r30)
 1739  00002450  4be00000	jr	r31
 1740  00002454  54000000	nop
 1741  00002458          	.endproc _FsDlxClose
 1742  00002458          	.align 2
 1743  00002458          	.proc _FsDlxDelete
 1744  00002458          	.global _FsDlxDelete
 1745  00002458          	_FsDlxDelete:
 1746                      ;  Function 'FsDlxDelete'; 0 bytes of locals, 0 regs to save.
 1747  00002458  afbefffc	sw	-4(r29),r30; push fp
 1748  0000245c  001df020	add	r30,r0,r29; fp = sp
 1749  00002460  afbffff8	sw	-8(r29),r31; push ret addr
 1750  00002464  2fbd0008	subui	r29,r29,#8; alloc local storage
 1751  00002468  20010001	addi	r1,r0,#1
 1752  0000246c  8fdffff8	lw	r31,-8(r30)
 1753  00002470  001ee820	add	r29,r0,r30
 1754  00002474  8fdefffc	lw	r30,-4(r30)
 1755  00002478  4be00000	jr	r31
 1756  0000247c  54000000	nop
 1757  00002480          	.endproc _FsDlxDelete
 1758  00002480          	.align 2
 1759  00002480          	.proc _FsModuleInit
 1760  00002480          	.global _FsModuleInit
 1761  00002480          	_FsModuleInit:
 1762                      ;  Function 'FsModuleInit'; 0 bytes of locals, 2 regs to save.
 1763  00002480  afbefffc	sw	-4(r29),r30; push fp
 1764  00002484  001df020	add	r30,r0,r29; fp = sp
 1765  00002488  afbffff8	sw	-8(r29),r31; push ret addr
 1766  0000248c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1767  00002490  afa20000	sw	0(r29),r2
 1768  00002494  afa30004	sw	4(r29),r3
 1769  00002498  3c1f0000	lhi	r31,((_openfiles_LF2)>>16)&0xffff
 1770  0000249c  27ffb110	addui	r31,r31,(_openfiles_LF2)&0xffff
 1771  000024a0  23e22074	addi	r2,r31,#8308
 1772  000024a4          	L182_LF2:
 1773  000024a4  20030000	addi	r3,r0,#0
 1774  000024a8  afe30004	sw	4(r31),r3
 1775  000024ac  23ff010c	addi	r31,r31,#268
 1776  000024b0  03e2082c	sle	r1,r31,r2
 1777  000024b4  1420ffec	bnez	r1,L182_LF2
 1778  000024b8  54000000	nop; not filled.
 1779  000024bc  3c010000	lhi	r1,((_fs_LF2)>>16)&0xffff
 1780  000024c0  2421b0e0	addui	r1,r1,(_fs_LF2)&0xffff
 1781  000024c4  3c030000	lhi	r3,((_FsUnixOpen)>>16)&0xffff
 1782  000024c8  24631f94	addui	r3,r3,(_FsUnixOpen)&0xffff
 1783  000024cc  ac230000	sw	(r1),r3
 1784  000024d0  3c030000	lhi	r3,((_FsUnixClose)>>16)&0xffff
 1785  000024d4  24632270	addui	r3,r3,(_FsUnixClose)&0xffff
 1786  000024d8  ac230010	sw	16(r1),r3
 1787  000024dc  3c030000	lhi	r3,((_FsUnixRead)>>16)&0xffff
 1788  000024e0  246320c0	addui	r3,r3,(_FsUnixRead)&0xffff
 1789  000024e4  ac230004	sw	4(r1),r3
 1790  000024e8  3c030000	lhi	r3,((_FsUnixWrite)>>16)&0xffff
 1791  000024ec  24632150	addui	r3,r3,(_FsUnixWrite)&0xffff
 1792  000024f0  ac230008	sw	8(r1),r3
 1793  000024f4  3c030000	lhi	r3,((_FsUnixSeek)>>16)&0xffff
 1794  000024f8  246321e0	addui	r3,r3,(_FsUnixSeek)&0xffff
 1795  000024fc  ac23000c	sw	12(r1),r3
 1796  00002500  3c030000	lhi	r3,((_FsUnixDelete)>>16)&0xffff
 1797  00002504  246322e0	addui	r3,r3,(_FsUnixDelete)&0xffff
 1798  00002508  ac230014	sw	20(r1),r3
 1799  0000250c  3c030000	lhi	r3,((_FsDlxOpen)>>16)&0xffff
 1800  00002510  24632380	addui	r3,r3,(_FsDlxOpen)&0xffff
 1801  00002514  ac230018	sw	24(r1),r3
 1802  00002518  3c030000	lhi	r3,((_FsDlxClose)>>16)&0xffff
 1803  0000251c  24632430	addui	r3,r3,(_FsDlxClose)&0xffff
 1804  00002520  ac230028	sw	40(r1),r3
 1805  00002524  3c030000	lhi	r3,((_FsDlxRead)>>16)&0xffff
 1806  00002528  24632330	addui	r3,r3,(_FsDlxRead)&0xffff
 1807  0000252c  ac23001c	sw	28(r1),r3
 1808  00002530  3c030000	lhi	r3,((_FsDlxWrite)>>16)&0xffff
 1809  00002534  24632358	addui	r3,r3,(_FsDlxWrite)&0xffff
 1810  00002538  ac230020	sw	32(r1),r3
 1811  0000253c  3c030000	lhi	r3,((_FsDlxSeek)>>16)&0xffff
 1812  00002540  246323dc	addui	r3,r3,(_FsDlxSeek)&0xffff
 1813  00002544  ac230024	sw	36(r1),r3
 1814  00002548  3c030000	lhi	r3,((_FsDlxDelete)>>16)&0xffff
 1815  0000254c  24632458	addui	r3,r3,(_FsDlxDelete)&0xffff
 1816  00002550  ac23002c	sw	44(r1),r3
 1817  00002554  8fa20000	lw	r2,0(r29)
 1818  00002558  8fa30004	lw	r3,4(r29)
 1819  0000255c  8fdffff8	lw	r31,-8(r30)
 1820  00002560  001ee820	add	r29,r0,r30
 1821  00002564  8fdefffc	lw	r30,-4(r30)
 1822  00002568  4be00000	jr	r31
 1823  0000256c  54000000	nop
 1824  00002570          	.endproc _FsModuleInit
 1825  00002570          	.data
 1826  0000b0df          	.align 2
 1827  0000b0e0          	_fs_LF2:
 1828  0000b0e0          	.space 48
 1829  0000b110          	.align 2
 1830  0000b110          	_openfiles_LF2:
 1831  0000b110          	.space 8576
 1832                      ; Compiled by GCC
 1834  0000d290          	.align 2
 1835  0000d290          	_rcsid_LF3:
 1836  0000d290  3a206d65	.ascii "$Id: memory.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
 1836  0000d294  6d6f7279	
 1836  0000d298  2e632c76	
 1836  0000d29c  20312e31	
 1836  0000d2a0  20323030	
 1836  0000d2a4  302f3039	
 1836  0000d2a8  2f323020	
 1836  0000d2ac  30313a35	
 1836  0000d2b0  303a3139	
 1836  0000d2b4  20656c6d	
 1836  0000d2b8  20457870	
 1836  0000d2bc  20656c6d	
 1836  0000d2c0  20303030	
 1837  0000d2c4          	.text
 1838  00002570          	.align 2
 1839  00002570          	.proc _isspace
 1840  00002570          	.global _isspace
 1841  00002570          	_isspace:
 1842                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 1843  00002570  afbefffc	sw	-4(r29),r30; push fp
 1844  00002574  001df020	add	r30,r0,r29; fp = sp
 1845  00002578  afbffff8	sw	-8(r29),r31; push ret addr
 1846  0000257c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1847  00002580  afa20000	sw	0(r29),r2
 1848  00002584  83c20003	lb	r2,3(r30)
 1849  00002588  201f0000	addi	r31,r0,#0
 1850  0000258c  304100ff	andi	r1,r2,#0x00ff
 1851  00002590  60210020	seqi	r1,r1,#32
 1852  00002594  14200018	bnez	r1,L6_LF3
 1853  00002598  54000000	nop; not filled.
 1854  0000259c  2041fff7	addi	r1,r2,#-9
 1855  000025a0  302100ff	andi	r1,r1,#0x00ff
 1856  000025a4  70210001	sleui	r1,r1,#1
 1857  000025a8  10200008	beqz	r1,L5_LF3
 1858  000025ac  54000000	nop; not filled.
 1859  000025b0          	L6_LF3:
 1860  000025b0  201f0001	addi	r31,r0,#1
 1861  000025b4          	L5_LF3:
 1862  000025b4  001f0820	add	r1,r0,r31
 1863  000025b8  8fa20000	lw	r2,0(r29)
 1864  000025bc  8fdffff8	lw	r31,-8(r30)
 1865  000025c0  001ee820	add	r29,r0,r30
 1866  000025c4  8fdefffc	lw	r30,-4(r30)
 1867  000025c8  4be00000	jr	r31
 1868  000025cc  54000000	nop
 1869  000025d0          	.endproc _isspace
 1870  000025d0          	.align 2
 1871  000025d0          	.proc _isxdigit
 1872  000025d0          	.global _isxdigit
 1873  000025d0          	_isxdigit:
 1874                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 1875  000025d0  afbefffc	sw	-4(r29),r30; push fp
 1876  000025d4  001df020	add	r30,r0,r29; fp = sp
 1877  000025d8  afbffff8	sw	-8(r29),r31; push ret addr
 1878  000025dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1879  000025e0  afa20000	sw	0(r29),r2
 1880  000025e4  83df0003	lb	r31,3(r30)
 1881  000025e8  20020000	addi	r2,r0,#0
 1882  000025ec  23e1ffd0	addi	r1,r31,#-48
 1883  000025f0  302100ff	andi	r1,r1,#0x00ff
 1884  000025f4  70210009	sleui	r1,r1,#9
 1885  000025f8  14200028	bnez	r1,L12_LF3
 1886  000025fc  54000000	nop; not filled.
 1887  00002600  23e1ff9f	addi	r1,r31,#-97
 1888  00002604  302100ff	andi	r1,r1,#0x00ff
 1889  00002608  70210005	sleui	r1,r1,#5
 1890  0000260c  14200014	bnez	r1,L12_LF3
 1891  00002610  54000000	nop; not filled.
 1892  00002614  33e100ff	andi	r1,r31,#0x00ff
 1893  00002618  64210041	snei	r1,r1,#65
 1894  0000261c  14200008	bnez	r1,L11_LF3
 1895  00002620  54000000	nop; not filled.
 1896  00002624          	L12_LF3:
 1897  00002624  20020001	addi	r2,r0,#1
 1898  00002628          	L11_LF3:
 1899  00002628  00020820	add	r1,r0,r2
 1900  0000262c  8fa20000	lw	r2,0(r29)
 1901  00002630  8fdffff8	lw	r31,-8(r30)
 1902  00002634  001ee820	add	r29,r0,r30
 1903  00002638  8fdefffc	lw	r30,-4(r30)
 1904  0000263c  4be00000	jr	r31
 1905  00002640  54000000	nop
 1906  00002644          	.endproc _isxdigit
 1907  00002644          	.align 2
 1908  00002644          	.proc _DisableIntrs
 1909  00002644          	.global _DisableIntrs
 1910  00002644          	_DisableIntrs:
 1911                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 1912  00002644  afbefffc	sw	-4(r29),r30; push fp
 1913  00002648  001df020	add	r30,r0,r29; fp = sp
 1914  0000264c  afbffff8	sw	-8(r29),r31; push ret addr
 1915  00002650  2fbd0010	subui	r29,r29,#16; alloc local storage
 1916  00002654  afa20000	sw	0(r29),r2
 1917  00002658  23bdfff8	addi	r29,r29,#-8
 1918  0000265c  2002000f	addi	r2,r0,#15
 1919  00002660  afa20000	sw	(r29),r2
 1920  00002664  0fffec20	jal	_SetIntrs
 1921  00002668  54000000	nop; not filled.
 1922  0000266c  23bd0008	addi	r29,r29,#8
 1923  00002670  8fa20000	lw	r2,0(r29)
 1924  00002674  8fdffff8	lw	r31,-8(r30)
 1925  00002678  001ee820	add	r29,r0,r30
 1926  0000267c  8fdefffc	lw	r30,-4(r30)
 1927  00002680  4be00000	jr	r31
 1928  00002684  54000000	nop
 1929  00002688          	.endproc _DisableIntrs
 1930  00002688          	.align 2
 1931  00002688          	.proc _EnableIntrs
 1932  00002688          	.global _EnableIntrs
 1933  00002688          	_EnableIntrs:
 1934                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 1935  00002688  afbefffc	sw	-4(r29),r30; push fp
 1936  0000268c  001df020	add	r30,r0,r29; fp = sp
 1937  00002690  afbffff8	sw	-8(r29),r31; push ret addr
 1938  00002694  2fbd0010	subui	r29,r29,#16; alloc local storage
 1939  00002698  afa20000	sw	0(r29),r2
 1940  0000269c  23bdfff8	addi	r29,r29,#-8
 1941  000026a0  20020000	addi	r2,r0,#0
 1942  000026a4  afa20000	sw	(r29),r2
 1943  000026a8  0fffebdc	jal	_SetIntrs
 1944  000026ac  54000000	nop; not filled.
 1945  000026b0  23bd0008	addi	r29,r29,#8
 1946  000026b4  8fa20000	lw	r2,0(r29)
 1947  000026b8  8fdffff8	lw	r31,-8(r30)
 1948  000026bc  001ee820	add	r29,r0,r30
 1949  000026c0  8fdefffc	lw	r30,-4(r30)
 1950  000026c4  4be00000	jr	r31
 1951  000026c8  54000000	nop
 1952  000026cc          	.endproc _EnableIntrs
 1953  000026cc          	.align 2
 1954  000026cc          	.proc _RestoreIntrs
 1955  000026cc          	.global _RestoreIntrs
 1956  000026cc          	_RestoreIntrs:
 1957                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 1958  000026cc  afbefffc	sw	-4(r29),r30; push fp
 1959  000026d0  001df020	add	r30,r0,r29; fp = sp
 1960  000026d4  afbffff8	sw	-8(r29),r31; push ret addr
 1961  000026d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1962  000026dc  afa20000	sw	0(r29),r2
 1963  000026e0  23bdfff8	addi	r29,r29,#-8
 1964  000026e4  8fc20000	lw	r2,(r30)
 1965  000026e8  afa20000	sw	(r29),r2
 1966  000026ec  0fffeb98	jal	_SetIntrs
 1967  000026f0  54000000	nop; not filled.
 1968  000026f4  23bd0008	addi	r29,r29,#8
 1969  000026f8  8fa20000	lw	r2,0(r29)
 1970  000026fc  8fdffff8	lw	r31,-8(r30)
 1971  00002700  001ee820	add	r29,r0,r30
 1972  00002704  8fdefffc	lw	r30,-4(r30)
 1973  00002708  4be00000	jr	r31
 1974  0000270c  54000000	nop
 1975  00002710          	.endproc _RestoreIntrs
 1976  00002710          	.align 2
 1977  00002710          	.proc _QueueLinkInit
 1978  00002710          	.global _QueueLinkInit
 1979  00002710          	_QueueLinkInit:
 1980                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 1981  00002710  afbefffc	sw	-4(r29),r30; push fp
 1982  00002714  001df020	add	r30,r0,r29; fp = sp
 1983  00002718  afbffff8	sw	-8(r29),r31; push ret addr
 1984  0000271c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1985  00002720  afa20000	sw	0(r29),r2
 1986  00002724  8fc10000	lw	r1,(r30)
 1987  00002728  8fc20004	lw	r2,4(r30)
 1988  0000272c  201f0000	addi	r31,r0,#0
 1989  00002730  ac3f0000	sw	(r1),r31
 1990  00002734  ac22000c	sw	12(r1),r2
 1991  00002738  8fa20000	lw	r2,0(r29)
 1992  0000273c  8fdffff8	lw	r31,-8(r30)
 1993  00002740  001ee820	add	r29,r0,r30
 1994  00002744  8fdefffc	lw	r30,-4(r30)
 1995  00002748  4be00000	jr	r31
 1996  0000274c  54000000	nop
 1997  00002750          	.endproc _QueueLinkInit
 1998  00002750          	.align 2
 1999  00002750          	.proc _QueueNext
 2000  00002750          	.global _QueueNext
 2001  00002750          	_QueueNext:
 2002                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 2003  00002750  afbefffc	sw	-4(r29),r30; push fp
 2004  00002754  001df020	add	r30,r0,r29; fp = sp
 2005  00002758  afbffff8	sw	-8(r29),r31; push ret addr
 2006  0000275c  2fbd0008	subui	r29,r29,#8; alloc local storage
 2007  00002760  8fc10000	lw	r1,(r30)
 2008  00002764  8c210000	lw	r1,(r1)
 2009  00002768  8fdffff8	lw	r31,-8(r30)
 2010  0000276c  001ee820	add	r29,r0,r30
 2011  00002770  8fdefffc	lw	r30,-4(r30)
 2012  00002774  4be00000	jr	r31
 2013  00002778  54000000	nop
 2014  0000277c          	.endproc _QueueNext
 2015  0000277c          	.align 2
 2016  0000277c          	.proc _QueuePrev
 2017  0000277c          	.global _QueuePrev
 2018  0000277c          	_QueuePrev:
 2019                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 2020  0000277c  afbefffc	sw	-4(r29),r30; push fp
 2021  00002780  001df020	add	r30,r0,r29; fp = sp
 2022  00002784  afbffff8	sw	-8(r29),r31; push ret addr
 2023  00002788  2fbd0008	subui	r29,r29,#8; alloc local storage
 2024  0000278c  8fc10000	lw	r1,(r30)
 2025  00002790  8c210004	lw	r1,4(r1)
 2026  00002794  8fdffff8	lw	r31,-8(r30)
 2027  00002798  001ee820	add	r29,r0,r30
 2028  0000279c  8fdefffc	lw	r30,-4(r30)
 2029  000027a0  4be00000	jr	r31
 2030  000027a4  54000000	nop
 2031  000027a8          	.endproc _QueuePrev
 2032  000027a8          	.align 2
 2033  000027a8          	.proc _QueueFirst
 2034  000027a8          	.global _QueueFirst
 2035  000027a8          	_QueueFirst:
 2036                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 2037  000027a8  afbefffc	sw	-4(r29),r30; push fp
 2038  000027ac  001df020	add	r30,r0,r29; fp = sp
 2039  000027b0  afbffff8	sw	-8(r29),r31; push ret addr
 2040  000027b4  2fbd0008	subui	r29,r29,#8; alloc local storage
 2041  000027b8  8fc10000	lw	r1,(r30)
 2042  000027bc  8c210000	lw	r1,(r1)
 2043  000027c0  8fdffff8	lw	r31,-8(r30)
 2044  000027c4  001ee820	add	r29,r0,r30
 2045  000027c8  8fdefffc	lw	r30,-4(r30)
 2046  000027cc  4be00000	jr	r31
 2047  000027d0  54000000	nop
 2048  000027d4          	.endproc _QueueFirst
 2049  000027d4          	.align 2
 2050  000027d4          	.proc _QueueLast
 2051  000027d4          	.global _QueueLast
 2052  000027d4          	_QueueLast:
 2053                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 2054  000027d4  afbefffc	sw	-4(r29),r30; push fp
 2055  000027d8  001df020	add	r30,r0,r29; fp = sp
 2056  000027dc  afbffff8	sw	-8(r29),r31; push ret addr
 2057  000027e0  2fbd0008	subui	r29,r29,#8; alloc local storage
 2058  000027e4  8fc10000	lw	r1,(r30)
 2059  000027e8  8c210004	lw	r1,4(r1)
 2060  000027ec  8fdffff8	lw	r31,-8(r30)
 2061  000027f0  001ee820	add	r29,r0,r30
 2062  000027f4  8fdefffc	lw	r30,-4(r30)
 2063  000027f8  4be00000	jr	r31
 2064  000027fc  54000000	nop
 2065  00002800          	.endproc _QueueLast
 2066  00002800          	.align 2
 2067  00002800          	.proc _QueueInsertAfter
 2068  00002800          	.global _QueueInsertAfter
 2069  00002800          	_QueueInsertAfter:
 2070                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 2071  00002800  afbefffc	sw	-4(r29),r30; push fp
 2072  00002804  001df020	add	r30,r0,r29; fp = sp
 2073  00002808  afbffff8	sw	-8(r29),r31; push ret addr
 2074  0000280c  2fbd0010	subui	r29,r29,#16; alloc local storage
 2075  00002810  afa20000	sw	0(r29),r2
 2076  00002814  afa30004	sw	4(r29),r3
 2077  00002818  8fc30000	lw	r3,(r30)
 2078  0000281c  8fc20004	lw	r2,4(r30)
 2079  00002820  8fc10008	lw	r1,8(r30)
 2080  00002824  ac230008	sw	8(r1),r3
 2081  00002828  ac220004	sw	4(r1),r2
 2082  0000282c  8c5f0000	lw	r31,(r2)
 2083  00002830  ac3f0000	sw	(r1),r31
 2084  00002834  ac410000	sw	(r2),r1
 2085  00002838  8c220000	lw	r2,(r1)
 2086  0000283c  ac410004	sw	4(r2),r1
 2087  00002840  8c610008	lw	r1,8(r3)
 2088  00002844  20210001	addi	r1,r1,#1
 2089  00002848  ac610008	sw	8(r3),r1
 2090  0000284c  8fa20000	lw	r2,0(r29)
 2091  00002850  8fa30004	lw	r3,4(r29)
 2092  00002854  8fdffff8	lw	r31,-8(r30)
 2093  00002858  001ee820	add	r29,r0,r30
 2094  0000285c  8fdefffc	lw	r30,-4(r30)
 2095  00002860  4be00000	jr	r31
 2096  00002864  54000000	nop
 2097  00002868          	.endproc _QueueInsertAfter
 2098  00002868          	.align 2
 2099  00002868          	.proc _QueueInsertFirst
 2100  00002868          	.global _QueueInsertFirst
 2101  00002868          	_QueueInsertFirst:
 2102                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 2103  00002868  afbefffc	sw	-4(r29),r30; push fp
 2104  0000286c  001df020	add	r30,r0,r29; fp = sp
 2105  00002870  afbffff8	sw	-8(r29),r31; push ret addr
 2106  00002874  2fbd0010	subui	r29,r29,#16; alloc local storage
 2107  00002878  afa20000	sw	0(r29),r2
 2108  0000287c  afa30004	sw	4(r29),r3
 2109  00002880  8fc30000	lw	r3,(r30)
 2110  00002884  8fc10004	lw	r1,4(r30)
 2111  00002888  ac230008	sw	8(r1),r3
 2112  0000288c  ac230004	sw	4(r1),r3
 2113  00002890  8c7f0000	lw	r31,(r3)
 2114  00002894  ac3f0000	sw	(r1),r31
 2115  00002898  ac610000	sw	(r3),r1
 2116  0000289c  8c220000	lw	r2,(r1)
 2117  000028a0  ac410004	sw	4(r2),r1
 2118  000028a4  8c610008	lw	r1,8(r3)
 2119  000028a8  20210001	addi	r1,r1,#1
 2120  000028ac  ac610008	sw	8(r3),r1
 2121  000028b0  8fa20000	lw	r2,0(r29)
 2122  000028b4  8fa30004	lw	r3,4(r29)
 2123  000028b8  8fdffff8	lw	r31,-8(r30)
 2124  000028bc  001ee820	add	r29,r0,r30
 2125  000028c0  8fdefffc	lw	r30,-4(r30)
 2126  000028c4  4be00000	jr	r31
 2127  000028c8  54000000	nop
 2128  000028cc          	.endproc _QueueInsertFirst
 2129  000028cc          	.align 2
 2130  000028cc          	.proc _QueueInsertLast
 2131  000028cc          	.global _QueueInsertLast
 2132  000028cc          	_QueueInsertLast:
 2133                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 2134  000028cc  afbefffc	sw	-4(r29),r30; push fp
 2135  000028d0  001df020	add	r30,r0,r29; fp = sp
 2136  000028d4  afbffff8	sw	-8(r29),r31; push ret addr
 2137  000028d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 2138  000028dc  afa20000	sw	0(r29),r2
 2139  000028e0  afa30004	sw	4(r29),r3
 2140  000028e4  8fc30000	lw	r3,(r30)
 2141  000028e8  8fc10004	lw	r1,4(r30)
 2142  000028ec  8c620004	lw	r2,4(r3)
 2143  000028f0  ac230008	sw	8(r1),r3
 2144  000028f4  ac220004	sw	4(r1),r2
 2145  000028f8  8c5f0000	lw	r31,(r2)
 2146  000028fc  ac3f0000	sw	(r1),r31
 2147  00002900  ac410000	sw	(r2),r1
 2148  00002904  8c220000	lw	r2,(r1)
 2149  00002908  ac410004	sw	4(r2),r1
 2150  0000290c  8c610008	lw	r1,8(r3)
 2151  00002910  20210001	addi	r1,r1,#1
 2152  00002914  ac610008	sw	8(r3),r1
 2153  00002918  8fa20000	lw	r2,0(r29)
 2154  0000291c  8fa30004	lw	r3,4(r29)
 2155  00002920  8fdffff8	lw	r31,-8(r30)
 2156  00002924  001ee820	add	r29,r0,r30
 2157  00002928  8fdefffc	lw	r30,-4(r30)
 2158  0000292c  4be00000	jr	r31
 2159  00002930  54000000	nop
 2160  00002934          	.endproc _QueueInsertLast
 2161  00002934          	.align 2
 2162  00002934          	.proc _QueueRemove
 2163  00002934          	.global _QueueRemove
 2164  00002934          	_QueueRemove:
 2165                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 2166  00002934  afbefffc	sw	-4(r29),r30; push fp
 2167  00002938  001df020	add	r30,r0,r29; fp = sp
 2168  0000293c  afbffff8	sw	-8(r29),r31; push ret addr
 2169  00002940  2fbd0010	subui	r29,r29,#16; alloc local storage
 2170  00002944  afa20000	sw	0(r29),r2
 2171  00002948  afa30004	sw	4(r29),r3
 2172  0000294c  8fdf0000	lw	r31,(r30)
 2173  00002950  8fe10008	lw	r1,8(r31)
 2174  00002954  8c210008	lw	r1,8(r1)
 2175  00002958  6c210000	sgti	r1,r1,#0
 2176  0000295c  1020002c	beqz	r1,L44_LF3
 2177  00002960  54000000	nop; not filled.
 2178  00002964  8fe10004	lw	r1,4(r31)
 2179  00002968  8fe30000	lw	r3,(r31)
 2180  0000296c  ac230000	sw	(r1),r3
 2181  00002970  8fe10000	lw	r1,(r31)
 2182  00002974  8fe30004	lw	r3,4(r31)
 2183  00002978  ac230004	sw	4(r1),r3
 2184  0000297c  8fe20008	lw	r2,8(r31)
 2185  00002980  8c410008	lw	r1,8(r2)
 2186  00002984  2021ffff	addi	r1,r1,#-1
 2187  00002988  ac410008	sw	8(r2),r1
 2188  0000298c          	L44_LF3:
 2189  0000298c  20030000	addi	r3,r0,#0
 2190  00002990  afe30000	sw	(r31),r3
 2191  00002994  8fa20000	lw	r2,0(r29)
 2192  00002998  8fa30004	lw	r3,4(r29)
 2193  0000299c  8fdffff8	lw	r31,-8(r30)
 2194  000029a0  001ee820	add	r29,r0,r30
 2195  000029a4  8fdefffc	lw	r30,-4(r30)
 2196  000029a8  4be00000	jr	r31
 2197  000029ac  54000000	nop
 2198  000029b0          	.endproc _QueueRemove
 2199  000029b0          	.align 2
 2200  000029b0          	.proc _QueueLength
 2201  000029b0          	.global _QueueLength
 2202  000029b0          	_QueueLength:
 2203                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 2204  000029b0  afbefffc	sw	-4(r29),r30; push fp
 2205  000029b4  001df020	add	r30,r0,r29; fp = sp
 2206  000029b8  afbffff8	sw	-8(r29),r31; push ret addr
 2207  000029bc  2fbd0008	subui	r29,r29,#8; alloc local storage
 2208  000029c0  8fc10000	lw	r1,(r30)
 2209  000029c4  8c210008	lw	r1,8(r1)
 2210  000029c8  8fdffff8	lw	r31,-8(r30)
 2211  000029cc  001ee820	add	r29,r0,r30
 2212  000029d0  8fdefffc	lw	r30,-4(r30)
 2213  000029d4  4be00000	jr	r31
 2214  000029d8  54000000	nop
 2215  000029dc          	.endproc _QueueLength
 2216  000029dc          	.align 2
 2217  000029dc          	.proc _QueueEmpty
 2218  000029dc          	.global _QueueEmpty
 2219  000029dc          	_QueueEmpty:
 2220                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 2221  000029dc  afbefffc	sw	-4(r29),r30; push fp
 2222  000029e0  001df020	add	r30,r0,r29; fp = sp
 2223  000029e4  afbffff8	sw	-8(r29),r31; push ret addr
 2224  000029e8  2fbd0008	subui	r29,r29,#8; alloc local storage
 2225  000029ec  8fc10000	lw	r1,(r30)
 2226  000029f0  8c210008	lw	r1,8(r1)
 2227  000029f4  60210000	seqi	r1,r1,#0
 2228  000029f8  8fdffff8	lw	r31,-8(r30)
 2229  000029fc  001ee820	add	r29,r0,r30
 2230  00002a00  8fdefffc	lw	r30,-4(r30)
 2231  00002a04  4be00000	jr	r31
 2232  00002a08  54000000	nop
 2233  00002a0c          	.endproc _QueueEmpty
 2234  00002a0c          	.data
 2235  0000d2c4          	.align 2
 2236  0000d2c4          	_negativeone_LF3:
 2237  0000d2c4  ffffffff	.word -1
 2238  0000d2c8          	.text
 2239  00002a0c          	.align 2
 2240  00002a0c          	.proc _MemoryGetSize
 2241  00002a0c          	.global _MemoryGetSize
 2242  00002a0c          	_MemoryGetSize:
 2243                      ;  Function 'MemoryGetSize'; 0 bytes of locals, 0 regs to save.
 2244  00002a0c  afbefffc	sw	-4(r29),r30; push fp
 2245  00002a10  001df020	add	r30,r0,r29; fp = sp
 2246  00002a14  afbffff8	sw	-8(r29),r31; push ret addr
 2247  00002a18  2fbd0008	subui	r29,r29,#8; alloc local storage
 2248  00002a1c  3c01ffff	lhi	r1,#-1
 2249  00002a20  24210000	addui	r1,r1,#0
 2250  00002a24  8c210000	lw	r1,(r1)
 2251  00002a28  8fdffff8	lw	r31,-8(r30)
 2252  00002a2c  001ee820	add	r29,r0,r30
 2253  00002a30  8fdefffc	lw	r30,-4(r30)
 2254  00002a34  4be00000	jr	r31
 2255  00002a38  54000000	nop
 2256  00002a3c          	.endproc _MemoryGetSize
 2257  00002a3c          	.data
 2258  0000d2c8          	.align 2
 2259  0000d2c8          	LC0_LF3:
 2260  0000d2c8  53657420	.ascii "Set freemap entry %d to 0x%x.\n\000"
 2260  0000d2cc  66726565	
 2260  0000d2d0  6d617020	
 2260  0000d2d4  656e7472	
 2260  0000d2d8  79202564	
 2260  0000d2dc  20746f20	
 2260  0000d2e0  30782578	
 2260  0000d2e4  2e0a00  	
 2261  0000d2e7          	.text
 2262  00002a3c          	.align 2
 2263  00002a3c          	.proc _MemorySetFreemap
 2264  00002a3c          	.global _MemorySetFreemap
 2265  00002a3c          	_MemorySetFreemap:
 2266                      ;  Function 'MemorySetFreemap'; 0 bytes of locals, 5 regs to save.
 2267  00002a3c  afbefffc	sw	-4(r29),r30; push fp
 2268  00002a40  001df020	add	r30,r0,r29; fp = sp
 2269  00002a44  afbffff8	sw	-8(r29),r31; push ret addr
 2270  00002a48  2fbd0020	subui	r29,r29,#32; alloc local storage
 2271  00002a4c  afa20000	sw	0(r29),r2
 2272  00002a50  afa30004	sw	4(r29),r3
 2273  00002a54  afa40008	sw	8(r29),r4
 2274  00002a58  afa5000c	sw	12(r29),r5
 2275  00002a5c  afa60010	sw	16(r29),r6
 2276  00002a60  8fc30000	lw	r3,(r30)
 2277  00002a64  8fdf0004	lw	r31,4(r30)
 2278  00002a68  00031020	add	r2,r0,r3
 2279  00002a6c  74610000	sgei	r1,r3,#0
 2280  00002a70  14200008	bnez	r1,L61_LF3
 2281  00002a74  54000000	nop; not filled.
 2282  00002a78  2062001f	addi	r2,r3,#31
 2283  00002a7c          	L61_LF3:
 2284  00002a7c  5c450005	srai	r5,r2,#0x5
 2285  00002a80  50a10005	slli	r1,r5,#0x5
 2286  00002a84  00611822	sub	r3,r3,r1
 2287  00002a88  20010001	addi	r1,r0,#1
 2288  00002a8c  00231004	sll	r2,r1,r3
 2289  00002a90  3c010000	lhi	r1,((_negativeone_LF3)>>16)&0xffff
 2290  00002a94  2421d2c4	addui	r1,r1,(_negativeone_LF3)&0xffff
 2291  00002a98  8c210000	lw	r1,(r1)
 2292  00002a9c  00411026	xor	r2,r2,r1
 2293  00002aa0  50a10002	slli	r1,r5,#0x2
 2294  00002aa4  3c060000	lhi	r6,((_freepages_LF3)>>16)&0xffff
 2295  00002aa8  24c6d420	addui	r6,r6,(_freepages_LF3)&0xffff
 2296  00002aac  00262020	add	r4,r1,r6
 2297  00002ab0  8c810000	lw	r1,(r4)
 2298  00002ab4  00221024	and	r2,r1,r2
 2299  00002ab8  03e30804	sll	r1,r31,r3
 2300  00002abc  00410825	or	r1,r2,r1
 2301  00002ac0  ac810000	sw	(r4),r1
 2302  00002ac4  23bdfff8	addi	r29,r29,#-8
 2303  00002ac8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2304  00002acc  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 2305  00002ad0  afa20000	sw	(r29),r2
 2306  00002ad4  2006006d	addi	r6,r0,#109
 2307  00002ad8  afa60004	sw	4(r29),r6
 2308  00002adc  0c001338	jal	_dindex
 2309  00002ae0  54000000	nop; not filled.
 2310  00002ae4  23bd0008	addi	r29,r29,#8
 2311  00002ae8  64210000	snei	r1,r1,#0
 2312  00002aec  1420002c	bnez	r1,L65_LF3
 2313  00002af0  54000000	nop; not filled.
 2314  00002af4  23bdfff8	addi	r29,r29,#-8
 2315  00002af8  afa20000	sw	(r29),r2
 2316  00002afc  2006002b	addi	r6,r0,#43
 2317  00002b00  afa60004	sw	4(r29),r6
 2318  00002b04  0c001310	jal	_dindex
 2319  00002b08  54000000	nop; not filled.
 2320  00002b0c  23bd0008	addi	r29,r29,#8
 2321  00002b10  64210000	snei	r1,r1,#0
 2322  00002b14  1020002c	beqz	r1,L64_LF3
 2323  00002b18  54000000	nop; not filled.
 2324  00002b1c          	L65_LF3:
 2325  00002b1c  23bdfff0	addi	r29,r29,#-16
 2326  00002b20  3c060000	lhi	r6,((LC0_LF3)>>16)&0xffff
 2327  00002b24  24c6d2c8	addui	r6,r6,(LC0_LF3)&0xffff
 2328  00002b28  afa60000	sw	(r29),r6
 2329  00002b2c  afa50004	sw	4(r29),r5
 2330  00002b30  8c840000	lw	r4,(r4)
 2331  00002b34  afa40008	sw	8(r29),r4
 2332  00002b38  0c00766c	jal	_printf
 2333  00002b3c  54000000	nop; not filled.
 2334  00002b40  23bd0010	addi	r29,r29,#16
 2335  00002b44          	L64_LF3:
 2336  00002b44  8fa20000	lw	r2,0(r29)
 2337  00002b48  8fa30004	lw	r3,4(r29)
 2338  00002b4c  8fa40008	lw	r4,8(r29)
 2339  00002b50  8fa5000c	lw	r5,12(r29)
 2340  00002b54  8fa60010	lw	r6,16(r29)
 2341  00002b58  8fdffff8	lw	r31,-8(r30)
 2342  00002b5c  001ee820	add	r29,r0,r30
 2343  00002b60  8fdefffc	lw	r30,-4(r30)
 2344  00002b64  4be00000	jr	r31
 2345  00002b68  54000000	nop
 2346  00002b6c          	.endproc _MemorySetFreemap
 2347  00002b6c          	.data
 2348  0000d2e7          	.align 2
 2349  0000d2e8          	LC1_LF3:
 2350  0000d2e8  4d617020	.ascii "Map has %d entries, memory size is 0x%x.\n\000"
 2350  0000d2ec  68617320	
 2350  0000d2f0  25642065	
 2350  0000d2f4  6e747269	
 2350  0000d2f8  65732c20	
 2350  0000d2fc  6d656d6f	
 2350  0000d300  72792073	
 2350  0000d304  697a6520	
 2350  0000d308  69732030	
 2350  0000d30c  7825782e	
 2350  0000d310  0a00    	
 2351  0000d312          	.align 2
 2352  0000d314          	LC2_LF3:
 2353  0000d314  46726565	.ascii "Free pages start with page # 0x%x.\n\000"
 2353  0000d318  20706167	
 2353  0000d31c  65732073	
 2353  0000d320  74617274	
 2353  0000d324  20776974	
 2353  0000d328  68207061	
 2353  0000d32c  67652023	
 2353  0000d330  20307825	
 2353  0000d334  782e0a00	
 2354  0000d338          	.align 2
 2355  0000d338          	LC3_LF3:
 2356  0000d338  496e6974	.ascii "Initialized %d free pages.\n\000"
 2356  0000d33c  69616c69	
 2356  0000d340  7a656420	
 2356  0000d344  25642066	
 2356  0000d348  72656520	
 2356  0000d34c  70616765	
 2356  0000d350  732e0a00	
 2357  0000d354          	.text
 2358  00002b6c          	.align 2
 2359  00002b6c          	.proc _MemoryModuleInit
 2360  00002b6c          	.global _MemoryModuleInit
 2361  00002b6c          	_MemoryModuleInit:
 2362                      ;  Function 'MemoryModuleInit'; 0 bytes of locals, 10 regs to save.
 2363  00002b6c  afbefffc	sw	-4(r29),r30; push fp
 2364  00002b70  001df020	add	r30,r0,r29; fp = sp
 2365  00002b74  afbffff8	sw	-8(r29),r31; push ret addr
 2366  00002b78  2fbd0030	subui	r29,r29,#48; alloc local storage
 2367  00002b7c  afa20000	sw	0(r29),r2
 2368  00002b80  afa30004	sw	4(r29),r3
 2369  00002b84  afa40008	sw	8(r29),r4
 2370  00002b88  afa5000c	sw	12(r29),r5
 2371  00002b8c  afa60010	sw	16(r29),r6
 2372  00002b90  afa70014	sw	20(r29),r7
 2373  00002b94  afa80018	sw	24(r29),r8
 2374  00002b98  afa9001c	sw	28(r29),r9
 2375  00002b9c  afaa0020	sw	32(r29),r10
 2376  00002ba0  afab0024	sw	36(r29),r11
 2377  00002ba4  3c01ffff	lhi	r1,#-1
 2378  00002ba8  24210000	addui	r1,r1,#0
 2379  00002bac  8c220000	lw	r2,(r1)
 2380  00002bb0  74410000	sgei	r1,r2,#0
 2381  00002bb4  14200008	bnez	r1,L68_LF3
 2382  00002bb8  54000000	nop; not filled.
 2383  00002bbc  2442ffff	addui	r2,r2,#65535
 2384  00002bc0          	L68_LF3:
 2385  00002bc0  5c480010	srai	r8,r2,#0x10
 2386  00002bc4  3c030000	lhi	r3,((_pagestart_LF3)>>16)&0xffff
 2387  00002bc8  2463d414	addui	r3,r3,(_pagestart_LF3)&0xffff
 2388  00002bcc  3c010001	lhi	r1,((_lastosaddress)>>16)&0xffff
 2389  00002bd0  24213304	addui	r1,r1,(_lastosaddress)&0xffff
 2390  00002bd4  8c210000	lw	r1,(r1)
 2391  00002bd8  2422fffc	addui	r2,r1,#65532
 2392  00002bdc  74410000	sgei	r1,r2,#0
 2393  00002be0  14200008	bnez	r1,L69_LF3
 2394  00002be4  54000000	nop; not filled.
 2395  00002be8  2442ffff	addui	r2,r2,#65535
 2396  00002bec          	L69_LF3:
 2397  00002bec  5c410010	srai	r1,r2,#0x10
 2398  00002bf0  ac610000	sw	(r3),r1
 2399  00002bf4  3c030000	lhi	r3,((_freemapmax_LF3)>>16)&0xffff
 2400  00002bf8  2463d418	addui	r3,r3,(_freemapmax_LF3)&0xffff
 2401  00002bfc  2102001f	addi	r2,r8,#31
 2402  00002c00  74410000	sgei	r1,r2,#0
 2403  00002c04  14200008	bnez	r1,L70_LF3
 2404  00002c08  54000000	nop; not filled.
 2405  00002c0c  2102003e	addi	r2,r8,#62
 2406  00002c10          	L70_LF3:
 2407  00002c10  5c410005	srai	r1,r2,#0x5
 2408  00002c14  ac610000	sw	(r3),r1
 2409  00002c18  23bdfff8	addi	r29,r29,#-8
 2410  00002c1c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2411  00002c20  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 2412  00002c24  afa20000	sw	(r29),r2
 2413  00002c28  200b006d	addi	r11,r0,#109
 2414  00002c2c  afab0004	sw	4(r29),r11
 2415  00002c30  0c0011e4	jal	_dindex
 2416  00002c34  54000000	nop; not filled.
 2417  00002c38  23bd0008	addi	r29,r29,#8
 2418  00002c3c  64210000	snei	r1,r1,#0
 2419  00002c40  1420002c	bnez	r1,L72_LF3
 2420  00002c44  54000000	nop; not filled.
 2421  00002c48  23bdfff8	addi	r29,r29,#-8
 2422  00002c4c  afa20000	sw	(r29),r2
 2423  00002c50  200b002b	addi	r11,r0,#43
 2424  00002c54  afab0004	sw	4(r29),r11
 2425  00002c58  0c0011bc	jal	_dindex
 2426  00002c5c  54000000	nop; not filled.
 2427  00002c60  23bd0008	addi	r29,r29,#8
 2428  00002c64  64210000	snei	r1,r1,#0
 2429  00002c68  1020002c	beqz	r1,L71_LF3
 2430  00002c6c  54000000	nop; not filled.
 2431  00002c70          	L72_LF3:
 2432  00002c70  23bdfff0	addi	r29,r29,#-16
 2433  00002c74  3c0b0000	lhi	r11,((LC1_LF3)>>16)&0xffff
 2434  00002c78  256bd2e8	addui	r11,r11,(LC1_LF3)&0xffff
 2435  00002c7c  afab0000	sw	(r29),r11
 2436  00002c80  8c610000	lw	r1,(r3)
 2437  00002c84  afa10004	sw	4(r29),r1
 2438  00002c88  afa80008	sw	8(r29),r8
 2439  00002c8c  0c007518	jal	_printf
 2440  00002c90  54000000	nop; not filled.
 2441  00002c94  23bd0010	addi	r29,r29,#16
 2442  00002c98          	L71_LF3:
 2443  00002c98  23bdfff8	addi	r29,r29,#-8
 2444  00002c9c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2445  00002ca0  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 2446  00002ca4  afa20000	sw	(r29),r2
 2447  00002ca8  200b006d	addi	r11,r0,#109
 2448  00002cac  afab0004	sw	4(r29),r11
 2449  00002cb0  0c001164	jal	_dindex
 2450  00002cb4  54000000	nop; not filled.
 2451  00002cb8  23bd0008	addi	r29,r29,#8
 2452  00002cbc  64210000	snei	r1,r1,#0
 2453  00002cc0  1420002c	bnez	r1,L74_LF3
 2454  00002cc4  54000000	nop; not filled.
 2455  00002cc8  23bdfff8	addi	r29,r29,#-8
 2456  00002ccc  afa20000	sw	(r29),r2
 2457  00002cd0  200b002b	addi	r11,r0,#43
 2458  00002cd4  afab0004	sw	4(r29),r11
 2459  00002cd8  0c00113c	jal	_dindex
 2460  00002cdc  54000000	nop; not filled.
 2461  00002ce0  23bd0008	addi	r29,r29,#8
 2462  00002ce4  64210000	snei	r1,r1,#0
 2463  00002ce8  10200030	beqz	r1,L73_LF3
 2464  00002cec  54000000	nop; not filled.
 2465  00002cf0          	L74_LF3:
 2466  00002cf0  23bdfff8	addi	r29,r29,#-8
 2467  00002cf4  3c0b0000	lhi	r11,((LC2_LF3)>>16)&0xffff
 2468  00002cf8  256bd314	addui	r11,r11,(LC2_LF3)&0xffff
 2469  00002cfc  afab0000	sw	(r29),r11
 2470  00002d00  3c010000	lhi	r1,((_pagestart_LF3)>>16)&0xffff
 2471  00002d04  2421d414	addui	r1,r1,(_pagestart_LF3)&0xffff
 2472  00002d08  8c210000	lw	r1,(r1)
 2473  00002d0c  afa10004	sw	4(r29),r1
 2474  00002d10  0c007494	jal	_printf
 2475  00002d14  54000000	nop; not filled.
 2476  00002d18  23bd0008	addi	r29,r29,#8
 2477  00002d1c          	L73_LF3:
 2478  00002d1c  20020000	addi	r2,r0,#0
 2479  00002d20  3c040000	lhi	r4,((_freemapmax_LF3)>>16)&0xffff
 2480  00002d24  2484d418	addui	r4,r4,(_freemapmax_LF3)&0xffff
 2481  00002d28  8c810000	lw	r1,(r4)
 2482  00002d2c  0041082a	slt	r1,r2,r1
 2483  00002d30  1020002c	beqz	r1,L76_LF3
 2484  00002d34  54000000	nop; not filled.
 2485  00002d38  3c030000	lhi	r3,((_freepages_LF3)>>16)&0xffff
 2486  00002d3c  2463d420	addui	r3,r3,(_freepages_LF3)&0xffff
 2487  00002d40          	L78_LF3:
 2488  00002d40  200b0000	addi	r11,r0,#0
 2489  00002d44  ac6b0000	sw	(r3),r11
 2490  00002d48  20630004	addi	r3,r3,#4
 2491  00002d4c  20420001	addi	r2,r2,#1
 2492  00002d50  8c810000	lw	r1,(r4)
 2493  00002d54  0041082a	slt	r1,r2,r1
 2494  00002d58  1420ffe4	bnez	r1,L78_LF3
 2495  00002d5c  54000000	nop; not filled.
 2496  00002d60          	L76_LF3:
 2497  00002d60  3c020000	lhi	r2,((_nfreepages_LF3)>>16)&0xffff
 2498  00002d64  2442d41c	addui	r2,r2,(_nfreepages_LF3)&0xffff
 2499  00002d68  200b0000	addi	r11,r0,#0
 2500  00002d6c  ac4b0000	sw	(r2),r11
 2501  00002d70  3c010000	lhi	r1,((_pagestart_LF3)>>16)&0xffff
 2502  00002d74  2421d414	addui	r1,r1,(_pagestart_LF3)&0xffff
 2503  00002d78  8c240000	lw	r4,(r1)
 2504  00002d7c  0088082a	slt	r1,r4,r8
 2505  00002d80  10200104	beqz	r1,L81_LF3
 2506  00002d84  54000000	nop; not filled.
 2507  00002d88  00023820	add	r7,r0,r2
 2508  00002d8c  200a0001	addi	r10,r0,#1
 2509  00002d90  3c090000	lhi	r9,((_negativeone_LF3)>>16)&0xffff
 2510  00002d94  2529d2c4	addui	r9,r9,(_negativeone_LF3)&0xffff
 2511  00002d98          	L83_LF3:
 2512  00002d98  8ce10000	lw	r1,(r7)
 2513  00002d9c  20210001	addi	r1,r1,#1
 2514  00002da0  ace10000	sw	(r7),r1
 2515  00002da4  00041020	add	r2,r0,r4
 2516  00002da8  74810000	sgei	r1,r4,#0
 2517  00002dac  14200008	bnez	r1,L85_LF3
 2518  00002db0  54000000	nop; not filled.
 2519  00002db4  2082001f	addi	r2,r4,#31
 2520  00002db8          	L85_LF3:
 2521  00002db8  5c460005	srai	r6,r2,#0x5
 2522  00002dbc  50c10005	slli	r1,r6,#0x5
 2523  00002dc0  00810822	sub	r1,r4,r1
 2524  00002dc4  01411804	sll	r3,r10,r1
 2525  00002dc8  8d210000	lw	r1,(r9)
 2526  00002dcc  00611026	xor	r2,r3,r1
 2527  00002dd0  50c10002	slli	r1,r6,#0x2
 2528  00002dd4  3c0b0000	lhi	r11,((_freepages_LF3)>>16)&0xffff
 2529  00002dd8  256bd420	addui	r11,r11,(_freepages_LF3)&0xffff
 2530  00002ddc  002b2820	add	r5,r1,r11
 2531  00002de0  8ca10000	lw	r1,(r5)
 2532  00002de4  00220824	and	r1,r1,r2
 2533  00002de8  00230825	or	r1,r1,r3
 2534  00002dec  aca10000	sw	(r5),r1
 2535  00002df0  23bdfff8	addi	r29,r29,#-8
 2536  00002df4  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2537  00002df8  256bfd46	addui	r11,r11,(_debugstr)&0xffff
 2538  00002dfc  afab0000	sw	(r29),r11
 2539  00002e00  200b006d	addi	r11,r0,#109
 2540  00002e04  afab0004	sw	4(r29),r11
 2541  00002e08  0c00100c	jal	_dindex
 2542  00002e0c  54000000	nop; not filled.
 2543  00002e10  23bd0008	addi	r29,r29,#8
 2544  00002e14  64210000	snei	r1,r1,#0
 2545  00002e18  14200034	bnez	r1,L89_LF3
 2546  00002e1c  54000000	nop; not filled.
 2547  00002e20  23bdfff8	addi	r29,r29,#-8
 2548  00002e24  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2549  00002e28  256bfd46	addui	r11,r11,(_debugstr)&0xffff
 2550  00002e2c  afab0000	sw	(r29),r11
 2551  00002e30  200b002b	addi	r11,r0,#43
 2552  00002e34  afab0004	sw	4(r29),r11
 2553  00002e38  0c000fdc	jal	_dindex
 2554  00002e3c  54000000	nop; not filled.
 2555  00002e40  23bd0008	addi	r29,r29,#8
 2556  00002e44  64210000	snei	r1,r1,#0
 2557  00002e48  1020002c	beqz	r1,L82_LF3
 2558  00002e4c  54000000	nop; not filled.
 2559  00002e50          	L89_LF3:
 2560  00002e50  23bdfff0	addi	r29,r29,#-16
 2561  00002e54  3c0b0000	lhi	r11,((LC0_LF3)>>16)&0xffff
 2562  00002e58  256bd2c8	addui	r11,r11,(LC0_LF3)&0xffff
 2563  00002e5c  afab0000	sw	(r29),r11
 2564  00002e60  afa60004	sw	4(r29),r6
 2565  00002e64  8ca50000	lw	r5,(r5)
 2566  00002e68  afa50008	sw	8(r29),r5
 2567  00002e6c  0c007338	jal	_printf
 2568  00002e70  54000000	nop; not filled.
 2569  00002e74  23bd0010	addi	r29,r29,#16
 2570  00002e78          	L82_LF3:
 2571  00002e78  20840001	addi	r4,r4,#1
 2572  00002e7c  0088082a	slt	r1,r4,r8
 2573  00002e80  1420ff14	bnez	r1,L83_LF3
 2574  00002e84  54000000	nop; not filled.
 2575  00002e88          	L81_LF3:
 2576  00002e88  23bdfff8	addi	r29,r29,#-8
 2577  00002e8c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2578  00002e90  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 2579  00002e94  afa20000	sw	(r29),r2
 2580  00002e98  200b006d	addi	r11,r0,#109
 2581  00002e9c  afab0004	sw	4(r29),r11
 2582  00002ea0  0c000f74	jal	_dindex
 2583  00002ea4  54000000	nop; not filled.
 2584  00002ea8  23bd0008	addi	r29,r29,#8
 2585  00002eac  64210000	snei	r1,r1,#0
 2586  00002eb0  1420002c	bnez	r1,L92_LF3
 2587  00002eb4  54000000	nop; not filled.
 2588  00002eb8  23bdfff8	addi	r29,r29,#-8
 2589  00002ebc  afa20000	sw	(r29),r2
 2590  00002ec0  200b002b	addi	r11,r0,#43
 2591  00002ec4  afab0004	sw	4(r29),r11
 2592  00002ec8  0c000f4c	jal	_dindex
 2593  00002ecc  54000000	nop; not filled.
 2594  00002ed0  23bd0008	addi	r29,r29,#8
 2595  00002ed4  64210000	snei	r1,r1,#0
 2596  00002ed8  10200030	beqz	r1,L91_LF3
 2597  00002edc  54000000	nop; not filled.
 2598  00002ee0          	L92_LF3:
 2599  00002ee0  23bdfff8	addi	r29,r29,#-8
 2600  00002ee4  3c0b0000	lhi	r11,((LC3_LF3)>>16)&0xffff
 2601  00002ee8  256bd338	addui	r11,r11,(LC3_LF3)&0xffff
 2602  00002eec  afab0000	sw	(r29),r11
 2603  00002ef0  3c010000	lhi	r1,((_nfreepages_LF3)>>16)&0xffff
 2604  00002ef4  2421d41c	addui	r1,r1,(_nfreepages_LF3)&0xffff
 2605  00002ef8  8c210000	lw	r1,(r1)
 2606  00002efc  afa10004	sw	4(r29),r1
 2607  00002f00  0c0072a4	jal	_printf
 2608  00002f04  54000000	nop; not filled.
 2609  00002f08  23bd0008	addi	r29,r29,#8
 2610  00002f0c          	L91_LF3:
 2611  00002f0c  8fa20000	lw	r2,0(r29)
 2612  00002f10  8fa30004	lw	r3,4(r29)
 2613  00002f14  8fa40008	lw	r4,8(r29)
 2614  00002f18  8fa5000c	lw	r5,12(r29)
 2615  00002f1c  8fa60010	lw	r6,16(r29)
 2616  00002f20  8fa70014	lw	r7,20(r29)
 2617  00002f24  8fa80018	lw	r8,24(r29)
 2618  00002f28  8fa9001c	lw	r9,28(r29)
 2619  00002f2c  8faa0020	lw	r10,32(r29)
 2620  00002f30  8fab0024	lw	r11,36(r29)
 2621  00002f34  8fdffff8	lw	r31,-8(r30)
 2622  00002f38  001ee820	add	r29,r0,r30
 2623  00002f3c  8fdefffc	lw	r30,-4(r30)
 2624  00002f40  4be00000	jr	r31
 2625  00002f44  54000000	nop
 2626  00002f48          	.endproc _MemoryModuleInit
 2627  00002f48          	.data
 2628  0000d354          	.align 2
 2629  0000d354          	_mapnum42_LF3:
 2630  0000d354  00000000	.word 0
 2631  0000d358          	.align 2
 2632  0000d358          	LC4_LF3:
 2633  0000d358  416c6c6f	.ascii "Allocating memory, starting with page %d\n\000"
 2633  0000d35c  63617469	
 2633  0000d360  6e67206d	
 2633  0000d364  656d6f72	
 2633  0000d368  792c2073	
 2633  0000d36c  74617274	
 2633  0000d370  696e6720	
 2633  0000d374  77697468	
 2633  0000d378  20706167	
 2633  0000d37c  65202564	
 2633  0000d380  0a00    	
 2634  0000d382          	.align 2
 2635  0000d384          	LC5_LF3:
 2636  0000d384  416c6c6f	.ascii "Allocated memory, from map %d, page %d, map=0x%x.\n\000"
 2636  0000d388  63617465	
 2636  0000d38c  64206d65	
 2636  0000d390  6d6f7279	
 2636  0000d394  2c206672	
 2636  0000d398  6f6d206d	
 2636  0000d39c  61702025	
 2636  0000d3a0  642c2070	
 2636  0000d3a4  61676520	
 2636  0000d3a8  25642c20	
 2636  0000d3ac  6d61703d	
 2636  0000d3b0  30782578	
 2636  0000d3b4  2e0a00  	
 2637  0000d3b7          	.text
 2638  00002f48          	.align 2
 2639  00002f48          	.proc _MemoryAllocPage
 2640  00002f48          	.global _MemoryAllocPage
 2641  00002f48          	_MemoryAllocPage:
 2642                      ;  Function 'MemoryAllocPage'; 0 bytes of locals, 6 regs to save.
 2643  00002f48  afbefffc	sw	-4(r29),r30; push fp
 2644  00002f4c  001df020	add	r30,r0,r29; fp = sp
 2645  00002f50  afbffff8	sw	-8(r29),r31; push ret addr
 2646  00002f54  2fbd0020	subui	r29,r29,#32; alloc local storage
 2647  00002f58  afa20000	sw	0(r29),r2
 2648  00002f5c  afa30004	sw	4(r29),r3
 2649  00002f60  afa40008	sw	8(r29),r4
 2650  00002f64  afa5000c	sw	12(r29),r5
 2651  00002f68  afa60010	sw	16(r29),r6
 2652  00002f6c  afa70014	sw	20(r29),r7
 2653  00002f70  3c010000	lhi	r1,((_nfreepages_LF3)>>16)&0xffff
 2654  00002f74  2421d41c	addui	r1,r1,(_nfreepages_LF3)&0xffff
 2655  00002f78  8c210000	lw	r1,(r1)
 2656  00002f7c  64210000	snei	r1,r1,#0
 2657  00002f80  14200010	bnez	r1,L111_LF3
 2658  00002f84  54000000	nop; not filled.
 2659  00002f88  20010000	addi	r1,r0,#0
 2660  00002f8c  08000238	j	L127_LF3
 2661  00002f90  54000000	nop; not filled.
 2662  00002f94          	L111_LF3:
 2663  00002f94  23bdfff8	addi	r29,r29,#-8
 2664  00002f98  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2665  00002f9c  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 2666  00002fa0  afa20000	sw	(r29),r2
 2667  00002fa4  2007006d	addi	r7,r0,#109
 2668  00002fa8  afa70004	sw	4(r29),r7
 2669  00002fac  0c000e68	jal	_dindex
 2670  00002fb0  54000000	nop; not filled.
 2671  00002fb4  23bd0008	addi	r29,r29,#8
 2672  00002fb8  64210000	snei	r1,r1,#0
 2673  00002fbc  1420002c	bnez	r1,L113_LF3
 2674  00002fc0  54000000	nop; not filled.
 2675  00002fc4  23bdfff8	addi	r29,r29,#-8
 2676  00002fc8  afa20000	sw	(r29),r2
 2677  00002fcc  2007002b	addi	r7,r0,#43
 2678  00002fd0  afa70004	sw	4(r29),r7
 2679  00002fd4  0c000e40	jal	_dindex
 2680  00002fd8  54000000	nop; not filled.
 2681  00002fdc  23bd0008	addi	r29,r29,#8
 2682  00002fe0  64210000	snei	r1,r1,#0
 2683  00002fe4  10200030	beqz	r1,L112_LF3
 2684  00002fe8  54000000	nop; not filled.
 2685  00002fec          	L113_LF3:
 2686  00002fec  23bdfff8	addi	r29,r29,#-8
 2687  00002ff0  3c070000	lhi	r7,((LC4_LF3)>>16)&0xffff
 2688  00002ff4  24e7d358	addui	r7,r7,(LC4_LF3)&0xffff
 2689  00002ff8  afa70000	sw	(r29),r7
 2690  00002ffc  3c010000	lhi	r1,((_mapnum42_LF3)>>16)&0xffff
 2691  00003000  2421d354	addui	r1,r1,(_mapnum42_LF3)&0xffff
 2692  00003004  8c210000	lw	r1,(r1)
 2693  00003008  afa10004	sw	4(r29),r1
 2694  0000300c  0c007198	jal	_printf
 2695  00003010  54000000	nop; not filled.
 2696  00003014  23bd0008	addi	r29,r29,#8
 2697  00003018          	L112_LF3:
 2698  00003018  3c020000	lhi	r2,((_mapnum42_LF3)>>16)&0xffff
 2699  0000301c  2442d354	addui	r2,r2,(_mapnum42_LF3)&0xffff
 2700  00003020  8c410000	lw	r1,(r2)
 2701  00003024  3c040000	lhi	r4,((_freepages_LF3)>>16)&0xffff
 2702  00003028  2484d420	addui	r4,r4,(_freepages_LF3)&0xffff
 2703  0000302c  50210002	slli	r1,r1,#0x2
 2704  00003030  00240820	add	r1,r1,r4
 2705  00003034  8c210000	lw	r1,(r1)
 2706  00003038  64210000	snei	r1,r1,#0
 2707  0000303c  1420004c	bnez	r1,L115_LF3
 2708  00003040  54000000	nop; not filled.
 2709  00003044  3c010000	lhi	r1,((_freemapmax_LF3)>>16)&0xffff
 2710  00003048  2421d418	addui	r1,r1,(_freemapmax_LF3)&0xffff
 2711  0000304c  8c230000	lw	r3,(r1)
 2712  00003050          	L116_LF3:
 2713  00003050  8c410000	lw	r1,(r2)
 2714  00003054  20210001	addi	r1,r1,#1
 2715  00003058  ac410000	sw	(r2),r1
 2716  0000305c  0023082d	sge	r1,r1,r3
 2717  00003060  1020000c	beqz	r1,L114_LF3
 2718  00003064  54000000	nop; not filled.
 2719  00003068  20070000	addi	r7,r0,#0
 2720  0000306c  ac470000	sw	(r2),r7
 2721  00003070          	L114_LF3:
 2722  00003070  8c410000	lw	r1,(r2)
 2723  00003074  50210002	slli	r1,r1,#0x2
 2724  00003078  00240820	add	r1,r1,r4
 2725  0000307c  8c210000	lw	r1,(r1)
 2726  00003080  64210000	snei	r1,r1,#0
 2727  00003084  1020ffc8	beqz	r1,L116_LF3
 2728  00003088  54000000	nop; not filled.
 2729  0000308c          	L115_LF3:
 2730  0000308c  3c010000	lhi	r1,((_mapnum42_LF3)>>16)&0xffff
 2731  00003090  2421d354	addui	r1,r1,(_mapnum42_LF3)&0xffff
 2732  00003094  8c210000	lw	r1,(r1)
 2733  00003098  50210002	slli	r1,r1,#0x2
 2734  0000309c  3c070000	lhi	r7,((_freepages_LF3)>>16)&0xffff
 2735  000030a0  24e7d420	addui	r7,r7,(_freepages_LF3)&0xffff
 2736  000030a4  00270820	add	r1,r1,r7
 2737  000030a8  8c230000	lw	r3,(r1)
 2738  000030ac  201f0000	addi	r31,r0,#0
 2739  000030b0  30610001	andi	r1,r3,#1
 2740  000030b4  14200020	bnez	r1,L120_LF3
 2741  000030b8  54000000	nop; not filled.
 2742  000030bc  20020001	addi	r2,r0,#1
 2743  000030c0          	L121_LF3:
 2744  000030c0  23ff0001	addi	r31,r31,#1
 2745  000030c4  005f0804	sll	r1,r2,r31
 2746  000030c8  00610824	and	r1,r3,r1
 2747  000030cc  64210000	snei	r1,r1,#0
 2748  000030d0  1020ffec	beqz	r1,L121_LF3
 2749  000030d4  54000000	nop; not filled.
 2750  000030d8          	L120_LF3:
 2751  000030d8  20010001	addi	r1,r0,#1
 2752  000030dc  003f1004	sll	r2,r1,r31
 2753  000030e0  3c010000	lhi	r1,((_negativeone_LF3)>>16)&0xffff
 2754  000030e4  2421d2c4	addui	r1,r1,(_negativeone_LF3)&0xffff
 2755  000030e8  8c210000	lw	r1,(r1)
 2756  000030ec  00412026	xor	r4,r2,r1
 2757  000030f0  3c050000	lhi	r5,((_mapnum42_LF3)>>16)&0xffff
 2758  000030f4  24a5d354	addui	r5,r5,(_mapnum42_LF3)&0xffff
 2759  000030f8  8ca30000	lw	r3,(r5)
 2760  000030fc  3c060000	lhi	r6,((_freepages_LF3)>>16)&0xffff
 2761  00003100  24c6d420	addui	r6,r6,(_freepages_LF3)&0xffff
 2762  00003104  50610002	slli	r1,r3,#0x2
 2763  00003108  00261020	add	r2,r1,r6
 2764  0000310c  8c410000	lw	r1,(r2)
 2765  00003110  00240824	and	r1,r1,r4
 2766  00003114  ac410000	sw	(r2),r1
 2767  00003118  50610005	slli	r1,r3,#0x5
 2768  0000311c  003f1820	add	r3,r1,r31
 2769  00003120  23bdfff8	addi	r29,r29,#-8
 2770  00003124  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2771  00003128  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 2772  0000312c  afa20000	sw	(r29),r2
 2773  00003130  2007006d	addi	r7,r0,#109
 2774  00003134  afa70004	sw	4(r29),r7
 2775  00003138  0c000cdc	jal	_dindex
 2776  0000313c  54000000	nop; not filled.
 2777  00003140  23bd0008	addi	r29,r29,#8
 2778  00003144  64210000	snei	r1,r1,#0
 2779  00003148  1420002c	bnez	r1,L126_LF3
 2780  0000314c  54000000	nop; not filled.
 2781  00003150  23bdfff8	addi	r29,r29,#-8
 2782  00003154  afa20000	sw	(r29),r2
 2783  00003158  2007002b	addi	r7,r0,#43
 2784  0000315c  afa70004	sw	4(r29),r7
 2785  00003160  0c000cb4	jal	_dindex
 2786  00003164  54000000	nop; not filled.
 2787  00003168  23bd0008	addi	r29,r29,#8
 2788  0000316c  64210000	snei	r1,r1,#0
 2789  00003170  1020003c	beqz	r1,L125_LF3
 2790  00003174  54000000	nop; not filled.
 2791  00003178          	L126_LF3:
 2792  00003178  23bdfff0	addi	r29,r29,#-16
 2793  0000317c  3c070000	lhi	r7,((LC5_LF3)>>16)&0xffff
 2794  00003180  24e7d384	addui	r7,r7,(LC5_LF3)&0xffff
 2795  00003184  afa70000	sw	(r29),r7
 2796  00003188  8ca10000	lw	r1,(r5)
 2797  0000318c  afa10004	sw	4(r29),r1
 2798  00003190  afa30008	sw	8(r29),r3
 2799  00003194  50210002	slli	r1,r1,#0x2
 2800  00003198  00260820	add	r1,r1,r6
 2801  0000319c  8c210000	lw	r1,(r1)
 2802  000031a0  afa1000c	sw	12(r29),r1
 2803  000031a4  0c007000	jal	_printf
 2804  000031a8  54000000	nop; not filled.
 2805  000031ac  23bd0010	addi	r29,r29,#16
 2806  000031b0          	L125_LF3:
 2807  000031b0  3c010000	lhi	r1,((_nfreepages_LF3)>>16)&0xffff
 2808  000031b4  2421d41c	addui	r1,r1,(_nfreepages_LF3)&0xffff
 2809  000031b8  8c220000	lw	r2,(r1)
 2810  000031bc  2042ffff	addi	r2,r2,#-1
 2811  000031c0  ac220000	sw	(r1),r2
 2812  000031c4  00030820	add	r1,r0,r3
 2813  000031c8          	L127_LF3:
 2814  000031c8  8fa20000	lw	r2,0(r29)
 2815  000031cc  8fa30004	lw	r3,4(r29)
 2816  000031d0  8fa40008	lw	r4,8(r29)
 2817  000031d4  8fa5000c	lw	r5,12(r29)
 2818  000031d8  8fa60010	lw	r6,16(r29)
 2819  000031dc  8fa70014	lw	r7,20(r29)
 2820  000031e0  8fdffff8	lw	r31,-8(r30)
 2821  000031e4  001ee820	add	r29,r0,r30
 2822  000031e8  8fdefffc	lw	r30,-4(r30)
 2823  000031ec  4be00000	jr	r31
 2824  000031f0  54000000	nop
 2825  000031f4          	.endproc _MemoryAllocPage
 2826  000031f4          	.data
 2827  0000d3b7          	.align 2
 2828  0000d3b8          	LC6_LF3:
 2829  0000d3b8  46726565	.ascii "Freed page 0x%x, %d remaining.\n\000"
 2829  0000d3bc  64207061	
 2829  0000d3c0  67652030	
 2829  0000d3c4  7825782c	
 2829  0000d3c8  20256420	
 2829  0000d3cc  72656d61	
 2829  0000d3d0  696e696e	
 2829  0000d3d4  672e0a00	
 2830  0000d3d8          	.text
 2831  000031f4          	.align 2
 2832  000031f4          	.proc _MemoryFreePage
 2833  000031f4          	.global _MemoryFreePage
 2834  000031f4          	_MemoryFreePage:
 2835                      ;  Function 'MemoryFreePage'; 0 bytes of locals, 6 regs to save.
 2836  000031f4  afbefffc	sw	-4(r29),r30; push fp
 2837  000031f8  001df020	add	r30,r0,r29; fp = sp
 2838  000031fc  afbffff8	sw	-8(r29),r31; push ret addr
 2839  00003200  2fbd0020	subui	r29,r29,#32; alloc local storage
 2840  00003204  afa20000	sw	0(r29),r2
 2841  00003208  afa30004	sw	4(r29),r3
 2842  0000320c  afa40008	sw	8(r29),r4
 2843  00003210  afa5000c	sw	12(r29),r5
 2844  00003214  afa60010	sw	16(r29),r6
 2845  00003218  afa70014	sw	20(r29),r7
 2846  0000321c  8fc60000	lw	r6,(r30)
 2847  00003220  20030001	addi	r3,r0,#1
 2848  00003224  00061020	add	r2,r0,r6
 2849  00003228  74c10000	sgei	r1,r6,#0
 2850  0000322c  14200008	bnez	r1,L130_LF3
 2851  00003230  54000000	nop; not filled.
 2852  00003234  20c2001f	addi	r2,r6,#31
 2853  00003238          	L130_LF3:
 2854  00003238  5c450005	srai	r5,r2,#0x5
 2855  0000323c  50a10005	slli	r1,r5,#0x5
 2856  00003240  00c10822	sub	r1,r6,r1
 2857  00003244  00611804	sll	r3,r3,r1
 2858  00003248  3c010000	lhi	r1,((_negativeone_LF3)>>16)&0xffff
 2859  0000324c  2421d2c4	addui	r1,r1,(_negativeone_LF3)&0xffff
 2860  00003250  8c210000	lw	r1,(r1)
 2861  00003254  00611026	xor	r2,r3,r1
 2862  00003258  50a10002	slli	r1,r5,#0x2
 2863  0000325c  3c070000	lhi	r7,((_freepages_LF3)>>16)&0xffff
 2864  00003260  24e7d420	addui	r7,r7,(_freepages_LF3)&0xffff
 2865  00003264  00272020	add	r4,r1,r7
 2866  00003268  8c810000	lw	r1,(r4)
 2867  0000326c  00220824	and	r1,r1,r2
 2868  00003270  00230825	or	r1,r1,r3
 2869  00003274  ac810000	sw	(r4),r1
 2870  00003278  23bdfff8	addi	r29,r29,#-8
 2871  0000327c  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2872  00003280  24e7fd46	addui	r7,r7,(_debugstr)&0xffff
 2873  00003284  afa70000	sw	(r29),r7
 2874  00003288  2007006d	addi	r7,r0,#109
 2875  0000328c  afa70004	sw	4(r29),r7
 2876  00003290  0c000b84	jal	_dindex
 2877  00003294  54000000	nop; not filled.
 2878  00003298  23bd0008	addi	r29,r29,#8
 2879  0000329c  64210000	snei	r1,r1,#0
 2880  000032a0  14200034	bnez	r1,L134_LF3
 2881  000032a4  54000000	nop; not filled.
 2882  000032a8  23bdfff8	addi	r29,r29,#-8
 2883  000032ac  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2884  000032b0  24e7fd46	addui	r7,r7,(_debugstr)&0xffff
 2885  000032b4  afa70000	sw	(r29),r7
 2886  000032b8  2007002b	addi	r7,r0,#43
 2887  000032bc  afa70004	sw	4(r29),r7
 2888  000032c0  0c000b54	jal	_dindex
 2889  000032c4  54000000	nop; not filled.
 2890  000032c8  23bd0008	addi	r29,r29,#8
 2891  000032cc  64210000	snei	r1,r1,#0
 2892  000032d0  1020002c	beqz	r1,L129_LF3
 2893  000032d4  54000000	nop; not filled.
 2894  000032d8          	L134_LF3:
 2895  000032d8  23bdfff0	addi	r29,r29,#-16
 2896  000032dc  3c070000	lhi	r7,((LC0_LF3)>>16)&0xffff
 2897  000032e0  24e7d2c8	addui	r7,r7,(LC0_LF3)&0xffff
 2898  000032e4  afa70000	sw	(r29),r7
 2899  000032e8  afa50004	sw	4(r29),r5
 2900  000032ec  8c840000	lw	r4,(r4)
 2901  000032f0  afa40008	sw	8(r29),r4
 2902  000032f4  0c006eb0	jal	_printf
 2903  000032f8  54000000	nop; not filled.
 2904  000032fc  23bd0010	addi	r29,r29,#16
 2905  00003300          	L129_LF3:
 2906  00003300  3c020000	lhi	r2,((_nfreepages_LF3)>>16)&0xffff
 2907  00003304  2442d41c	addui	r2,r2,(_nfreepages_LF3)&0xffff
 2908  00003308  8c410000	lw	r1,(r2)
 2909  0000330c  20210001	addi	r1,r1,#1
 2910  00003310  ac410000	sw	(r2),r1
 2911  00003314  23bdfff8	addi	r29,r29,#-8
 2912  00003318  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 2913  0000331c  2463fd46	addui	r3,r3,(_debugstr)&0xffff
 2914  00003320  afa30000	sw	(r29),r3
 2915  00003324  2007006d	addi	r7,r0,#109
 2916  00003328  afa70004	sw	4(r29),r7
 2917  0000332c  0c000ae8	jal	_dindex
 2918  00003330  54000000	nop; not filled.
 2919  00003334  23bd0008	addi	r29,r29,#8
 2920  00003338  64210000	snei	r1,r1,#0
 2921  0000333c  1420002c	bnez	r1,L136_LF3
 2922  00003340  54000000	nop; not filled.
 2923  00003344  23bdfff8	addi	r29,r29,#-8
 2924  00003348  afa30000	sw	(r29),r3
 2925  0000334c  2007002b	addi	r7,r0,#43
 2926  00003350  afa70004	sw	4(r29),r7
 2927  00003354  0c000ac0	jal	_dindex
 2928  00003358  54000000	nop; not filled.
 2929  0000335c  23bd0008	addi	r29,r29,#8
 2930  00003360  64210000	snei	r1,r1,#0
 2931  00003364  1020002c	beqz	r1,L135_LF3
 2932  00003368  54000000	nop; not filled.
 2933  0000336c          	L136_LF3:
 2934  0000336c  23bdfff0	addi	r29,r29,#-16
 2935  00003370  3c070000	lhi	r7,((LC6_LF3)>>16)&0xffff
 2936  00003374  24e7d3b8	addui	r7,r7,(LC6_LF3)&0xffff
 2937  00003378  afa70000	sw	(r29),r7
 2938  0000337c  afa60004	sw	4(r29),r6
 2939  00003380  8c420000	lw	r2,(r2)
 2940  00003384  afa20008	sw	8(r29),r2
 2941  00003388  0c006e1c	jal	_printf
 2942  0000338c  54000000	nop; not filled.
 2943  00003390  23bd0010	addi	r29,r29,#16
 2944  00003394          	L135_LF3:
 2945  00003394  8fa20000	lw	r2,0(r29)
 2946  00003398  8fa30004	lw	r3,4(r29)
 2947  0000339c  8fa40008	lw	r4,8(r29)
 2948  000033a0  8fa5000c	lw	r5,12(r29)
 2949  000033a4  8fa60010	lw	r6,16(r29)
 2950  000033a8  8fa70014	lw	r7,20(r29)
 2951  000033ac  8fdffff8	lw	r31,-8(r30)
 2952  000033b0  001ee820	add	r29,r0,r30
 2953  000033b4  8fdefffc	lw	r30,-4(r30)
 2954  000033b8  4be00000	jr	r31
 2955  000033bc  54000000	nop
 2956  000033c0          	.endproc _MemoryFreePage
 2957  000033c0          	.align 2
 2958  000033c0          	.proc _MemoryTranslateUserToSystem
 2959  000033c0          	.global _MemoryTranslateUserToSystem
 2960  000033c0          	_MemoryTranslateUserToSystem:
 2961                      ;  Function 'MemoryTranslateUserToSystem'; 0 bytes of locals, 3 regs to save.
 2962  000033c0  afbefffc	sw	-4(r29),r30; push fp
 2963  000033c4  001df020	add	r30,r0,r29; fp = sp
 2964  000033c8  afbffff8	sw	-8(r29),r31; push ret addr
 2965  000033cc  2fbd0018	subui	r29,r29,#24; alloc local storage
 2966  000033d0  afa20000	sw	0(r29),r2
 2967  000033d4  afa30004	sw	4(r29),r3
 2968  000033d8  afa40008	sw	8(r29),r4
 2969  000033dc  8fc30000	lw	r3,(r30)
 2970  000033e0  8fc10004	lw	r1,4(r30)
 2971  000033e4  583f0010	srli	r31,r1,#0x10
 2972  000033e8  3022ffff	andi	r2,r1,#0xffff
 2973  000033ec  8c6100a0	lw	r1,160(r3)
 2974  000033f0  03e1082b	sgt	r1,r31,r1
 2975  000033f4  14200024	bnez	r1,L140_LF3
 2976  000033f8  54000000	nop; not filled.
 2977  000033fc  53e10002	slli	r1,r31,#0x2
 2978  00003400  00230820	add	r1,r1,r3
 2979  00003404  8c210060	lw	r1,96(r1)
 2980  00003408  2004fff8	addi	r4,r0,#-8
 2981  0000340c  00240824	and	r1,r1,r4
 2982  00003410  00220820	add	r1,r1,r2
 2983  00003414  08000008	j	L141_LF3
 2984  00003418  54000000	nop; not filled.
 2985  0000341c          	L140_LF3:
 2986  0000341c  20010000	addi	r1,r0,#0
 2987  00003420          	L141_LF3:
 2988  00003420  8fa20000	lw	r2,0(r29)
 2989  00003424  8fa30004	lw	r3,4(r29)
 2990  00003428  8fa40008	lw	r4,8(r29)
 2991  0000342c  8fdffff8	lw	r31,-8(r30)
 2992  00003430  001ee820	add	r29,r0,r30
 2993  00003434  8fdefffc	lw	r30,-4(r30)
 2994  00003438  4be00000	jr	r31
 2995  0000343c  54000000	nop
 2996  00003440          	.endproc _MemoryTranslateUserToSystem
 2997  00003440          	.align 2
 2998  00003440          	.proc _MemoryCopySystemToUser
 2999  00003440          	.global _MemoryCopySystemToUser
 3000  00003440          	_MemoryCopySystemToUser:
 3001                      ;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 8 regs to save.
 3002  00003440  afbefffc	sw	-4(r29),r30; push fp
 3003  00003444  001df020	add	r30,r0,r29; fp = sp
 3004  00003448  afbffff8	sw	-8(r29),r31; push ret addr
 3005  0000344c  2fbd0028	subui	r29,r29,#40; alloc local storage
 3006  00003450  afa20000	sw	0(r29),r2
 3007  00003454  afa30004	sw	4(r29),r3
 3008  00003458  afa40008	sw	8(r29),r4
 3009  0000345c  afa5000c	sw	12(r29),r5
 3010  00003460  afa60010	sw	16(r29),r6
 3011  00003464  afa70014	sw	20(r29),r7
 3012  00003468  afa80018	sw	24(r29),r8
 3013  0000346c  afa9001c	sw	28(r29),r9
 3014  00003470  8fc70000	lw	r7,(r30)
 3015  00003474  8fc50004	lw	r5,4(r30)
 3016  00003478  8fc40008	lw	r4,8(r30)
 3017  0000347c  8fc3000c	lw	r3,12(r30)
 3018  00003480  20060000	addi	r6,r0,#0
 3019  00003484  6c610000	sgti	r1,r3,#0
 3020  00003488  102000a4	beqz	r1,L168_LF3
 3021  0000348c  54000000	nop; not filled.
 3022  00003490  3c080001	lhi	r8,#1
 3023  00003494  25080000	addui	r8,r8,#0
 3024  00003498          	L169_LF3:
 3025  00003498  58820010	srli	r2,r4,#0x10
 3026  0000349c  309fffff	andi	r31,r4,#0xffff
 3027  000034a0  8ce100a0	lw	r1,160(r7)
 3028  000034a4  0041082b	sgt	r1,r2,r1
 3029  000034a8  10200010	beqz	r1,L171_LF3
 3030  000034ac  54000000	nop; not filled.
 3031  000034b0  201f0000	addi	r31,r0,#0
 3032  000034b4  0800001c	j	L170_LF3
 3033  000034b8  54000000	nop; not filled.
 3034  000034bc          	L171_LF3:
 3035  000034bc  50410002	slli	r1,r2,#0x2
 3036  000034c0  00270820	add	r1,r1,r7
 3037  000034c4  8c210060	lw	r1,96(r1)
 3038  000034c8  2009fff8	addi	r9,r0,#-8
 3039  000034cc  00290824	and	r1,r1,r9
 3040  000034d0  003ff820	add	r31,r1,r31
 3041  000034d4          	L170_LF3:
 3042  000034d4  67e10000	snei	r1,r31,#0
 3043  000034d8  10200054	beqz	r1,L168_LF3
 3044  000034dc  54000000	nop; not filled.
 3045  000034e0  33e1ffff	andi	r1,r31,#65535
 3046  000034e4  01011022	sub	r2,r8,r1
 3047  000034e8  0043082b	sgt	r1,r2,r3
 3048  000034ec  10200008	beqz	r1,L173_LF3
 3049  000034f0  54000000	nop; not filled.
 3050  000034f4  00031020	add	r2,r0,r3
 3051  000034f8          	L173_LF3:
 3052  000034f8  23bdfff0	addi	r29,r29,#-16
 3053  000034fc  afa50000	sw	(r29),r5
 3054  00003500  afbf0004	sw	4(r29),r31
 3055  00003504  afa20008	sw	8(r29),r2
 3056  00003508  0c000c9c	jal	_bcopy
 3057  0000350c  54000000	nop; not filled.
 3058  00003510  23bd0010	addi	r29,r29,#16
 3059  00003514  00621822	sub	r3,r3,r2
 3060  00003518  00c23020	add	r6,r6,r2
 3061  0000351c  00a22820	add	r5,r5,r2
 3062  00003520  00822020	add	r4,r4,r2
 3063  00003524  6c610000	sgti	r1,r3,#0
 3064  00003528  1420ff6c	bnez	r1,L169_LF3
 3065  0000352c  54000000	nop; not filled.
 3066  00003530          	L168_LF3:
 3067  00003530  00060820	add	r1,r0,r6
 3068  00003534  8fa20000	lw	r2,0(r29)
 3069  00003538  8fa30004	lw	r3,4(r29)
 3070  0000353c  8fa40008	lw	r4,8(r29)
 3071  00003540  8fa5000c	lw	r5,12(r29)
 3072  00003544  8fa60010	lw	r6,16(r29)
 3073  00003548  8fa70014	lw	r7,20(r29)
 3074  0000354c  8fa80018	lw	r8,24(r29)
 3075  00003550  8fa9001c	lw	r9,28(r29)
 3076  00003554  8fdffff8	lw	r31,-8(r30)
 3077  00003558  001ee820	add	r29,r0,r30
 3078  0000355c  8fdefffc	lw	r30,-4(r30)
 3079  00003560  4be00000	jr	r31
 3080  00003564  54000000	nop
 3081  00003568          	.endproc _MemoryCopySystemToUser
 3082  00003568          	.align 2
 3083  00003568          	.proc _MemoryCopyUserToSystem
 3084  00003568          	.global _MemoryCopyUserToSystem
 3085  00003568          	_MemoryCopyUserToSystem:
 3086                      ;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 8 regs to save.
 3087  00003568  afbefffc	sw	-4(r29),r30; push fp
 3088  0000356c  001df020	add	r30,r0,r29; fp = sp
 3089  00003570  afbffff8	sw	-8(r29),r31; push ret addr
 3090  00003574  2fbd0028	subui	r29,r29,#40; alloc local storage
 3091  00003578  afa20000	sw	0(r29),r2
 3092  0000357c  afa30004	sw	4(r29),r3
 3093  00003580  afa40008	sw	8(r29),r4
 3094  00003584  afa5000c	sw	12(r29),r5
 3095  00003588  afa60010	sw	16(r29),r6
 3096  0000358c  afa70014	sw	20(r29),r7
 3097  00003590  afa80018	sw	24(r29),r8
 3098  00003594  afa9001c	sw	28(r29),r9
 3099  00003598  8fc70000	lw	r7,(r30)
 3100  0000359c  8fc50008	lw	r5,8(r30)
 3101  000035a0  8fc40004	lw	r4,4(r30)
 3102  000035a4  8fc3000c	lw	r3,12(r30)
 3103  000035a8  20060000	addi	r6,r0,#0
 3104  000035ac  6c610000	sgti	r1,r3,#0
 3105  000035b0  102000a4	beqz	r1,L192_LF3
 3106  000035b4  54000000	nop; not filled.
 3107  000035b8  3c080001	lhi	r8,#1
 3108  000035bc  25080000	addui	r8,r8,#0
 3109  000035c0          	L193_LF3:
 3110  000035c0  58820010	srli	r2,r4,#0x10
 3111  000035c4  309fffff	andi	r31,r4,#0xffff
 3112  000035c8  8ce100a0	lw	r1,160(r7)
 3113  000035cc  0041082b	sgt	r1,r2,r1
 3114  000035d0  10200010	beqz	r1,L195_LF3
 3115  000035d4  54000000	nop; not filled.
 3116  000035d8  201f0000	addi	r31,r0,#0
 3117  000035dc  0800001c	j	L194_LF3
 3118  000035e0  54000000	nop; not filled.
 3119  000035e4          	L195_LF3:
 3120  000035e4  50410002	slli	r1,r2,#0x2
 3121  000035e8  00270820	add	r1,r1,r7
 3122  000035ec  8c210060	lw	r1,96(r1)
 3123  000035f0  2009fff8	addi	r9,r0,#-8
 3124  000035f4  00290824	and	r1,r1,r9
 3125  000035f8  003ff820	add	r31,r1,r31
 3126  000035fc          	L194_LF3:
 3127  000035fc  67e10000	snei	r1,r31,#0
 3128  00003600  10200054	beqz	r1,L192_LF3
 3129  00003604  54000000	nop; not filled.
 3130  00003608  33e1ffff	andi	r1,r31,#65535
 3131  0000360c  01011022	sub	r2,r8,r1
 3132  00003610  0043082b	sgt	r1,r2,r3
 3133  00003614  10200008	beqz	r1,L198_LF3
 3134  00003618  54000000	nop; not filled.
 3135  0000361c  00031020	add	r2,r0,r3
 3136  00003620          	L198_LF3:
 3137  00003620  23bdfff0	addi	r29,r29,#-16
 3138  00003624  afbf0000	sw	(r29),r31
 3139  00003628  afa50004	sw	4(r29),r5
 3140  0000362c  afa20008	sw	8(r29),r2
 3141  00003630  0c000b74	jal	_bcopy
 3142  00003634  54000000	nop; not filled.
 3143  00003638  23bd0010	addi	r29,r29,#16
 3144  0000363c  00621822	sub	r3,r3,r2
 3145  00003640  00c23020	add	r6,r6,r2
 3146  00003644  00a22820	add	r5,r5,r2
 3147  00003648  00822020	add	r4,r4,r2
 3148  0000364c  6c610000	sgti	r1,r3,#0
 3149  00003650  1420ff6c	bnez	r1,L193_LF3
 3150  00003654  54000000	nop; not filled.
 3151  00003658          	L192_LF3:
 3152  00003658  00060820	add	r1,r0,r6
 3153  0000365c  8fa20000	lw	r2,0(r29)
 3154  00003660  8fa30004	lw	r3,4(r29)
 3155  00003664  8fa40008	lw	r4,8(r29)
 3156  00003668  8fa5000c	lw	r5,12(r29)
 3157  0000366c  8fa60010	lw	r6,16(r29)
 3158  00003670  8fa70014	lw	r7,20(r29)
 3159  00003674  8fa80018	lw	r8,24(r29)
 3160  00003678  8fa9001c	lw	r9,28(r29)
 3161  0000367c  8fdffff8	lw	r31,-8(r30)
 3162  00003680  001ee820	add	r29,r0,r30
 3163  00003684  8fdefffc	lw	r30,-4(r30)
 3164  00003688  4be00000	jr	r31
 3165  0000368c  54000000	nop
 3166  00003690          	.endproc _MemoryCopyUserToSystem
 3167  00003690          	.align 2
 3168  00003690          	.proc _MemorySetupPte
 3169  00003690          	.global _MemorySetupPte
 3170  00003690          	_MemorySetupPte:
 3171                      ;  Function 'MemorySetupPte'; 0 bytes of locals, 0 regs to save.
 3172  00003690  afbefffc	sw	-4(r29),r30; push fp
 3173  00003694  001df020	add	r30,r0,r29; fp = sp
 3174  00003698  afbffff8	sw	-8(r29),r31; push ret addr
 3175  0000369c  2fbd0008	subui	r29,r29,#8; alloc local storage
 3176  000036a0  8fc10000	lw	r1,(r30)
 3177  000036a4  50210010	slli	r1,r1,#0x10
 3178  000036a8  34210001	ori	r1,r1,#1
 3179  000036ac  8fdffff8	lw	r31,-8(r30)
 3180  000036b0  001ee820	add	r29,r0,r30
 3181  000036b4  8fdefffc	lw	r30,-4(r30)
 3182  000036b8  4be00000	jr	r31
 3183  000036bc  54000000	nop
 3184  000036c0          	.endproc _MemorySetupPte
 3185  000036c0          	.align 2
 3186  000036c0          	.proc _MemoryFreePte
 3187  000036c0          	.global _MemoryFreePte
 3188  000036c0          	_MemoryFreePte:
 3189                      ;  Function 'MemoryFreePte'; 0 bytes of locals, 0 regs to save.
 3190  000036c0  afbefffc	sw	-4(r29),r30; push fp
 3191  000036c4  001df020	add	r30,r0,r29; fp = sp
 3192  000036c8  afbffff8	sw	-8(r29),r31; push ret addr
 3193  000036cc  2fbd0008	subui	r29,r29,#8; alloc local storage
 3194  000036d0  23bdfff8	addi	r29,r29,#-8
 3195  000036d4  97c10000	lhu	r1,(r30)
 3196  000036d8  afa10000	sw	(r29),r1
 3197  000036dc  0ffffb14	jal	_MemoryFreePage
 3198  000036e0  54000000	nop; not filled.
 3199  000036e4  23bd0008	addi	r29,r29,#8
 3200  000036e8  8fdffff8	lw	r31,-8(r30)
 3201  000036ec  001ee820	add	r29,r0,r30
 3202  000036f0  8fdefffc	lw	r30,-4(r30)
 3203  000036f4  4be00000	jr	r31
 3204  000036f8  54000000	nop
 3205  000036fc          	.endproc _MemoryFreePte
 3206  000036fc          	.align 2
 3207  000036fc          	.proc _MemoryPteToPage
 3208  000036fc          	.global _MemoryPteToPage
 3209  000036fc          	_MemoryPteToPage:
 3210                      ;  Function 'MemoryPteToPage'; 0 bytes of locals, 0 regs to save.
 3211  000036fc  afbefffc	sw	-4(r29),r30; push fp
 3212  00003700  001df020	add	r30,r0,r29; fp = sp
 3213  00003704  afbffff8	sw	-8(r29),r31; push ret addr
 3214  00003708  2fbd0008	subui	r29,r29,#8; alloc local storage
 3215  0000370c  8fc10000	lw	r1,(r30)
 3216  00003710  201ffff8	addi	r31,r0,#-8
 3217  00003714  003f0824	and	r1,r1,r31
 3218  00003718  8fdffff8	lw	r31,-8(r30)
 3219  0000371c  001ee820	add	r29,r0,r30
 3220  00003720  8fdefffc	lw	r30,-4(r30)
 3221  00003724  4be00000	jr	r31
 3222  00003728  54000000	nop
 3223  0000372c          	.endproc _MemoryPteToPage
 3224  0000372c          	.data
 3225  0000d3d8          	.align 2
 3226  0000d3d8          	_invalidOps61_LF3:
 3227  0000d3d8  00003404	.word 13316
 3228  0000d3dc          	.align 2
 3229  0000d3dc          	LC7_LF3:
 3230  0000d3dc  4f706572	.ascii "Operand for instruction %08x is 0x%x (reg=<%d,0x%x>)\n\000"
 3230  0000d3e0  616e6420	
 3230  0000d3e4  666f7220	
 3230  0000d3e8  696e7374	
 3230  0000d3ec  72756374	
 3230  0000d3f0  696f6e20	
 3230  0000d3f4  25303878	
 3230  0000d3f8  20697320	
 3230  0000d3fc  30782578	
 3230  0000d400  20287265	
 3230  0000d404  673d3c25	
 3230  0000d408  642c3078	
 3230  0000d40c  25783e29	
 3230  0000d410  0a00    	
 3231  0000d412          	.text
 3232  0000372c          	.align 2
 3233  0000372c          	.proc _MemoryGetOperandAddress
 3234  0000372c          	.global _MemoryGetOperandAddress
 3235  0000372c          	_MemoryGetOperandAddress:
 3236                      ;  Function 'MemoryGetOperandAddress'; 0 bytes of locals, 6 regs to save.
 3237  0000372c  afbefffc	sw	-4(r29),r30; push fp
 3238  00003730  001df020	add	r30,r0,r29; fp = sp
 3239  00003734  afbffff8	sw	-8(r29),r31; push ret addr
 3240  00003738  2fbd0020	subui	r29,r29,#32; alloc local storage
 3241  0000373c  afa20000	sw	0(r29),r2
 3242  00003740  afa30004	sw	4(r29),r3
 3243  00003744  afa40008	sw	8(r29),r4
 3244  00003748  afa5000c	sw	12(r29),r5
 3245  0000374c  afa60010	sw	16(r29),r6
 3246  00003750  afa70014	sw	20(r29),r7
 3247  00003754  8fc20000	lw	r2,(r30)
 3248  00003758  8fc50004	lw	r5,4(r30)
 3249  0000375c  58a1001a	srli	r1,r5,#0x1a
 3250  00003760  203fffe0	addi	r31,r1,#-32
 3251  00003764  6fe1000f	sgtui	r1,r31,#15
 3252  00003768  14200020	bnez	r1,L215_LF3
 3253  0000376c  54000000	nop; not filled.
 3254  00003770  3c010000	lhi	r1,((_invalidOps61_LF3)>>16)&0xffff
 3255  00003774  2421d3d8	addui	r1,r1,(_invalidOps61_LF3)&0xffff
 3256  00003778  8c210000	lw	r1,(r1)
 3257  0000377c  003f0806	srl	r1,r1,r31
 3258  00003780  30210001	andi	r1,r1,#1
 3259  00003784  10200010	beqz	r1,L214_LF3
 3260  00003788  54000000	nop; not filled.
 3261  0000378c          	L215_LF3:
 3262  0000378c  2001ffff	addi	r1,r0,#-1
 3263  00003790  080000c4	j	L219_LF3
 3264  00003794  54000000	nop; not filled.
 3265  00003798          	L214_LF3:
 3266  00003798  58a10015	srli	r1,r5,#0x15
 3267  0000379c  3026001f	andi	r6,r1,#31
 3268  000037a0  30bfffff	andi	r31,r5,#0xffff
 3269  000037a4  5be1000f	srli	r1,r31,#0xf
 3270  000037a8  10200010	beqz	r1,L216_LF3
 3271  000037ac  54000000	nop; not filled.
 3272  000037b0  3c07ffff	lhi	r7,#-1
 3273  000037b4  24e70000	addui	r7,r7,#0
 3274  000037b8  03e7f825	or	r31,r31,r7
 3275  000037bc          	L216_LF3:
 3276  000037bc  8c420000	lw	r2,(r2)
 3277  000037c0  50c10002	slli	r1,r6,#0x2
 3278  000037c4  00220820	add	r1,r1,r2
 3279  000037c8  8c230028	lw	r3,40(r1)
 3280  000037cc  007f2020	add	r4,r3,r31
 3281  000037d0  23bdfff8	addi	r29,r29,#-8
 3282  000037d4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 3283  000037d8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 3284  000037dc  afa20000	sw	(r29),r2
 3285  000037e0  2007006d	addi	r7,r0,#109
 3286  000037e4  afa70004	sw	4(r29),r7
 3287  000037e8  0c00062c	jal	_dindex
 3288  000037ec  54000000	nop; not filled.
 3289  000037f0  23bd0008	addi	r29,r29,#8
 3290  000037f4  64210000	snei	r1,r1,#0
 3291  000037f8  1420002c	bnez	r1,L218_LF3
 3292  000037fc  54000000	nop; not filled.
 3293  00003800  23bdfff8	addi	r29,r29,#-8
 3294  00003804  afa20000	sw	(r29),r2
 3295  00003808  2007002b	addi	r7,r0,#43
 3296  0000380c  afa70004	sw	4(r29),r7
 3297  00003810  0c000604	jal	_dindex
 3298  00003814  54000000	nop; not filled.
 3299  00003818  23bd0008	addi	r29,r29,#8
 3300  0000381c  64210000	snei	r1,r1,#0
 3301  00003820  10200030	beqz	r1,L217_LF3
 3302  00003824  54000000	nop; not filled.
 3303  00003828          	L218_LF3:
 3304  00003828  23bdffe8	addi	r29,r29,#-24
 3305  0000382c  3c070000	lhi	r7,((LC7_LF3)>>16)&0xffff
 3306  00003830  24e7d3dc	addui	r7,r7,(LC7_LF3)&0xffff
 3307  00003834  afa70000	sw	(r29),r7
 3308  00003838  afa50004	sw	4(r29),r5
 3309  0000383c  afa40008	sw	8(r29),r4
 3310  00003840  afa6000c	sw	12(r29),r6
 3311  00003844  afa30010	sw	16(r29),r3
 3312  00003848  0c00695c	jal	_printf
 3313  0000384c  54000000	nop; not filled.
 3314  00003850  23bd0018	addi	r29,r29,#24
 3315  00003854          	L217_LF3:
 3316  00003854  00040820	add	r1,r0,r4
 3317  00003858          	L219_LF3:
 3318  00003858  8fa20000	lw	r2,0(r29)
 3319  0000385c  8fa30004	lw	r3,4(r29)
 3320  00003860  8fa40008	lw	r4,8(r29)
 3321  00003864  8fa5000c	lw	r5,12(r29)
 3322  00003868  8fa60010	lw	r6,16(r29)
 3323  0000386c  8fa70014	lw	r7,20(r29)
 3324  00003870  8fdffff8	lw	r31,-8(r30)
 3325  00003874  001ee820	add	r29,r0,r30
 3326  00003878  8fdefffc	lw	r30,-4(r30)
 3327  0000387c  4be00000	jr	r31
 3328  00003880  54000000	nop
 3329  00003884          	.endproc _MemoryGetOperandAddress
 3330  00003884          	.data
 3331  0000d412          	.align 2
 3332  0000d414          	_pagestart_LF3:
 3333  0000d414          	.space 4
 3334  0000d418          	.align 2
 3335  0000d418          	_freemapmax_LF3:
 3336  0000d418          	.space 4
 3337  0000d41c          	.align 2
 3338  0000d41c          	_nfreepages_LF3:
 3339  0000d41c          	.space 4
 3340  0000d420          	.align 2
 3341  0000d420          	_freepages_LF3:
 3342  0000d420          	.space 8192
 3343                      ; Compiled by GCC
 3344  0000f420          	.text
 3345  00003884          	.align 2
 3346  00003884          	.proc _isspace
 3347  00003884          	.global _isspace
 3348  00003884          	_isspace:
 3349                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 3350  00003884  afbefffc	sw	-4(r29),r30; push fp
 3351  00003888  001df020	add	r30,r0,r29; fp = sp
 3352  0000388c  afbffff8	sw	-8(r29),r31; push ret addr
 3353  00003890  2fbd0010	subui	r29,r29,#16; alloc local storage
 3354  00003894  afa20000	sw	0(r29),r2
 3355  00003898  83c20003	lb	r2,3(r30)
 3356  0000389c  201f0000	addi	r31,r0,#0
 3357  000038a0  304100ff	andi	r1,r2,#0x00ff
 3358  000038a4  60210020	seqi	r1,r1,#32
 3359  000038a8  14200018	bnez	r1,L6_LF4
 3360  000038ac  54000000	nop; not filled.
 3361  000038b0  2041fff7	addi	r1,r2,#-9
 3362  000038b4  302100ff	andi	r1,r1,#0x00ff
 3363  000038b8  70210001	sleui	r1,r1,#1
 3364  000038bc  10200008	beqz	r1,L5_LF4
 3365  000038c0  54000000	nop; not filled.
 3366  000038c4          	L6_LF4:
 3367  000038c4  201f0001	addi	r31,r0,#1
 3368  000038c8          	L5_LF4:
 3369  000038c8  001f0820	add	r1,r0,r31
 3370  000038cc  8fa20000	lw	r2,0(r29)
 3371  000038d0  8fdffff8	lw	r31,-8(r30)
 3372  000038d4  001ee820	add	r29,r0,r30
 3373  000038d8  8fdefffc	lw	r30,-4(r30)
 3374  000038dc  4be00000	jr	r31
 3375  000038e0  54000000	nop
 3376  000038e4          	.endproc _isspace
 3377  000038e4          	.align 2
 3378  000038e4          	.proc _isxdigit
 3379  000038e4          	.global _isxdigit
 3380  000038e4          	_isxdigit:
 3381                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 3382  000038e4  afbefffc	sw	-4(r29),r30; push fp
 3383  000038e8  001df020	add	r30,r0,r29; fp = sp
 3384  000038ec  afbffff8	sw	-8(r29),r31; push ret addr
 3385  000038f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 3386  000038f4  afa20000	sw	0(r29),r2
 3387  000038f8  83df0003	lb	r31,3(r30)
 3388  000038fc  20020000	addi	r2,r0,#0
 3389  00003900  23e1ffd0	addi	r1,r31,#-48
 3390  00003904  302100ff	andi	r1,r1,#0x00ff
 3391  00003908  70210009	sleui	r1,r1,#9
 3392  0000390c  14200028	bnez	r1,L12_LF4
 3393  00003910  54000000	nop; not filled.
 3394  00003914  23e1ff9f	addi	r1,r31,#-97
 3395  00003918  302100ff	andi	r1,r1,#0x00ff
 3396  0000391c  70210005	sleui	r1,r1,#5
 3397  00003920  14200014	bnez	r1,L12_LF4
 3398  00003924  54000000	nop; not filled.
 3399  00003928  33e100ff	andi	r1,r31,#0x00ff
 3400  0000392c  64210041	snei	r1,r1,#65
 3401  00003930  14200008	bnez	r1,L11_LF4
 3402  00003934  54000000	nop; not filled.
 3403  00003938          	L12_LF4:
 3404  00003938  20020001	addi	r2,r0,#1
 3405  0000393c          	L11_LF4:
 3406  0000393c  00020820	add	r1,r0,r2
 3407  00003940  8fa20000	lw	r2,0(r29)
 3408  00003944  8fdffff8	lw	r31,-8(r30)
 3409  00003948  001ee820	add	r29,r0,r30
 3410  0000394c  8fdefffc	lw	r30,-4(r30)
 3411  00003950  4be00000	jr	r31
 3412  00003954  54000000	nop
 3413  00003958          	.endproc _isxdigit
 3414  00003958          	.align 2
 3415  00003958          	.proc _dstrcpy
 3416  00003958          	.global _dstrcpy
 3417  00003958          	_dstrcpy:
 3418                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
 3419  00003958  afbefffc	sw	-4(r29),r30; push fp
 3420  0000395c  001df020	add	r30,r0,r29; fp = sp
 3421  00003960  afbffff8	sw	-8(r29),r31; push ret addr
 3422  00003964  2fbd0010	subui	r29,r29,#16; alloc local storage
 3423  00003968  afa20000	sw	0(r29),r2
 3424  0000396c  afa30004	sw	4(r29),r3
 3425  00003970  8fdf0000	lw	r31,(r30)
 3426  00003974  8fc20004	lw	r2,4(r30)
 3427  00003978  001f1820	add	r3,r0,r31
 3428  0000397c          	L19_LF4:
 3429  0000397c  80410000	lb	r1,(r2)
 3430  00003980  a3e10000	sb	(r31),r1
 3431  00003984  20420001	addi	r2,r2,#1
 3432  00003988  23ff0001	addi	r31,r31,#1
 3433  0000398c  302100ff	andi	r1,r1,#0x00ff
 3434  00003990  64210000	snei	r1,r1,#0
 3435  00003994  1420ffe4	bnez	r1,L19_LF4
 3436  00003998  54000000	nop; not filled.
 3437  0000399c  00030820	add	r1,r0,r3
 3438  000039a0  8fa20000	lw	r2,0(r29)
 3439  000039a4  8fa30004	lw	r3,4(r29)
 3440  000039a8  8fdffff8	lw	r31,-8(r30)
 3441  000039ac  001ee820	add	r29,r0,r30
 3442  000039b0  8fdefffc	lw	r30,-4(r30)
 3443  000039b4  4be00000	jr	r31
 3444  000039b8  54000000	nop
 3445  000039bc          	.endproc _dstrcpy
 3446  000039bc          	.align 2
 3447  000039bc          	.proc _dstrncpy
 3448  000039bc          	.global _dstrncpy
 3449  000039bc          	_dstrncpy:
 3450                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
 3451  000039bc  afbefffc	sw	-4(r29),r30; push fp
 3452  000039c0  001df020	add	r30,r0,r29; fp = sp
 3453  000039c4  afbffff8	sw	-8(r29),r31; push ret addr
 3454  000039c8  2fbd0018	subui	r29,r29,#24; alloc local storage
 3455  000039cc  afa20000	sw	0(r29),r2
 3456  000039d0  afa30004	sw	4(r29),r3
 3457  000039d4  afa40008	sw	8(r29),r4
 3458  000039d8  8fc20000	lw	r2,(r30)
 3459  000039dc  8fc30004	lw	r3,4(r30)
 3460  000039e0  8fdf0008	lw	r31,8(r30)
 3461  000039e4  00022020	add	r4,r0,r2
 3462  000039e8  08000024	j	L37_LF4
 3463  000039ec  54000000	nop; not filled.
 3464  000039f0          	L34_LF4:
 3465  000039f0  80610000	lb	r1,(r3)
 3466  000039f4  a0410000	sb	(r2),r1
 3467  000039f8  20630001	addi	r3,r3,#1
 3468  000039fc  20420001	addi	r2,r2,#1
 3469  00003a00  302100ff	andi	r1,r1,#0x00ff
 3470  00003a04  64210000	snei	r1,r1,#0
 3471  00003a08  10200018	beqz	r1,L32_LF4
 3472  00003a0c  54000000	nop; not filled.
 3473  00003a10          	L37_LF4:
 3474  00003a10  001f0820	add	r1,r0,r31
 3475  00003a14  23ffffff	addi	r31,r31,#-1
 3476  00003a18  70210000	slei	r1,r1,#0
 3477  00003a1c  1020ffd0	beqz	r1,L34_LF4
 3478  00003a20  54000000	nop; not filled.
 3479  00003a24          	L32_LF4:
 3480  00003a24  00040820	add	r1,r0,r4
 3481  00003a28  8fa20000	lw	r2,0(r29)
 3482  00003a2c  8fa30004	lw	r3,4(r29)
 3483  00003a30  8fa40008	lw	r4,8(r29)
 3484  00003a34  8fdffff8	lw	r31,-8(r30)
 3485  00003a38  001ee820	add	r29,r0,r30
 3486  00003a3c  8fdefffc	lw	r30,-4(r30)
 3487  00003a40  4be00000	jr	r31
 3488  00003a44  54000000	nop
 3489  00003a48          	.endproc _dstrncpy
 3490  00003a48          	.align 2
 3491  00003a48          	.proc _dstrcat
 3492  00003a48          	.global _dstrcat
 3493  00003a48          	_dstrcat:
 3494                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
 3495  00003a48  afbefffc	sw	-4(r29),r30; push fp
 3496  00003a4c  001df020	add	r30,r0,r29; fp = sp
 3497  00003a50  afbffff8	sw	-8(r29),r31; push ret addr
 3498  00003a54  2fbd0010	subui	r29,r29,#16; alloc local storage
 3499  00003a58  afa20000	sw	0(r29),r2
 3500  00003a5c  afa30004	sw	4(r29),r3
 3501  00003a60  8fdf0000	lw	r31,(r30)
 3502  00003a64  001f1820	add	r3,r0,r31
 3503  00003a68  90610000	lbu	r1,(r3)
 3504  00003a6c  64210000	snei	r1,r1,#0
 3505  00003a70  10200018	beqz	r1,L50_LF4
 3506  00003a74  54000000	nop; not filled.
 3507  00003a78          	L51_LF4:
 3508  00003a78  23ff0001	addi	r31,r31,#1
 3509  00003a7c  93e10000	lbu	r1,(r31)
 3510  00003a80  64210000	snei	r1,r1,#0
 3511  00003a84  1420fff0	bnez	r1,L51_LF4
 3512  00003a88  54000000	nop; not filled.
 3513  00003a8c          	L50_LF4:
 3514  00003a8c  001f1020	add	r2,r0,r31
 3515  00003a90  8fdf0004	lw	r31,4(r30)
 3516  00003a94          	L54_LF4:
 3517  00003a94  83e10000	lb	r1,(r31)
 3518  00003a98  a0410000	sb	(r2),r1
 3519  00003a9c  23ff0001	addi	r31,r31,#1
 3520  00003aa0  20420001	addi	r2,r2,#1
 3521  00003aa4  302100ff	andi	r1,r1,#0x00ff
 3522  00003aa8  64210000	snei	r1,r1,#0
 3523  00003aac  1420ffe4	bnez	r1,L54_LF4
 3524  00003ab0  54000000	nop; not filled.
 3525  00003ab4  00030820	add	r1,r0,r3
 3526  00003ab8  8fa20000	lw	r2,0(r29)
 3527  00003abc  8fa30004	lw	r3,4(r29)
 3528  00003ac0  8fdffff8	lw	r31,-8(r30)
 3529  00003ac4  001ee820	add	r29,r0,r30
 3530  00003ac8  8fdefffc	lw	r30,-4(r30)
 3531  00003acc  4be00000	jr	r31
 3532  00003ad0  54000000	nop
 3533  00003ad4          	.endproc _dstrcat
 3534  00003ad4          	.align 2
 3535  00003ad4          	.proc _dstrncmp
 3536  00003ad4          	.global _dstrncmp
 3537  00003ad4          	_dstrncmp:
 3538                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
 3539  00003ad4  afbefffc	sw	-4(r29),r30; push fp
 3540  00003ad8  001df020	add	r30,r0,r29; fp = sp
 3541  00003adc  afbffff8	sw	-8(r29),r31; push ret addr
 3542  00003ae0  2fbd0018	subui	r29,r29,#24; alloc local storage
 3543  00003ae4  afa20000	sw	0(r29),r2
 3544  00003ae8  afa30004	sw	4(r29),r3
 3545  00003aec  afa40008	sw	8(r29),r4
 3546  00003af0  afa5000c	sw	12(r29),r5
 3547  00003af4  8fc30000	lw	r3,(r30)
 3548  00003af8  8fc40004	lw	r4,4(r30)
 3549  00003afc  8fc50008	lw	r5,8(r30)
 3550  00003b00  20020000	addi	r2,r0,#0
 3551  00003b04  0045082a	slt	r1,r2,r5
 3552  00003b08  1020003c	beqz	r1,L73_LF4
 3553  00003b0c  54000000	nop; not filled.
 3554  00003b10          	L75_LF4:
 3555  00003b10  909f0000	lbu	r31,(r4)
 3556  00003b14  67e10000	snei	r1,r31,#0
 3557  00003b18  10200038	beqz	r1,L86_LF4
 3558  00003b1c  54000000	nop; not filled.
 3559  00003b20  90610000	lbu	r1,(r3)
 3560  00003b24  003f0829	sne	r1,r1,r31
 3561  00003b28  1420001c	bnez	r1,L73_LF4
 3562  00003b2c  54000000	nop; not filled.
 3563  00003b30  20630001	addi	r3,r3,#1
 3564  00003b34  20840001	addi	r4,r4,#1
 3565  00003b38  20420001	addi	r2,r2,#1
 3566  00003b3c  0045082a	slt	r1,r2,r5
 3567  00003b40  1420ffcc	bnez	r1,L75_LF4
 3568  00003b44  54000000	nop; not filled.
 3569  00003b48          	L73_LF4:
 3570  00003b48  00450828	seq	r1,r2,r5
 3571  00003b4c  10200010	beqz	r1,L80_LF4
 3572  00003b50  54000000	nop; not filled.
 3573  00003b54          	L86_LF4:
 3574  00003b54  20010000	addi	r1,r0,#0
 3575  00003b58  08000028	j	L84_LF4
 3576  00003b5c  54000000	nop; not filled.
 3577  00003b60          	L80_LF4:
 3578  00003b60  907f0000	lbu	r31,(r3)
 3579  00003b64  90830000	lbu	r3,(r4)
 3580  00003b68  03e30822	sub	r1,r31,r3
 3581  00003b6c  74210000	sgei	r1,r1,#0
 3582  00003b70  2002ffff	addi	r2,r0,#-1
 3583  00003b74  10200008	beqz	r1,L82_LF4
 3584  00003b78  54000000	nop; not filled.
 3585  00003b7c  03e31029	sne	r2,r31,r3
 3586  00003b80          	L82_LF4:
 3587  00003b80  00020820	add	r1,r0,r2
 3588  00003b84          	L84_LF4:
 3589  00003b84  8fa20000	lw	r2,0(r29)
 3590  00003b88  8fa30004	lw	r3,4(r29)
 3591  00003b8c  8fa40008	lw	r4,8(r29)
 3592  00003b90  8fa5000c	lw	r5,12(r29)
 3593  00003b94  8fdffff8	lw	r31,-8(r30)
 3594  00003b98  001ee820	add	r29,r0,r30
 3595  00003b9c  8fdefffc	lw	r30,-4(r30)
 3596  00003ba0  4be00000	jr	r31
 3597  00003ba4  54000000	nop
 3598  00003ba8          	.endproc _dstrncmp
 3599  00003ba8          	.align 2
 3600  00003ba8          	.proc _dstrlen
 3601  00003ba8          	.global _dstrlen
 3602  00003ba8          	_dstrlen:
 3603                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
 3604  00003ba8  afbefffc	sw	-4(r29),r30; push fp
 3605  00003bac  001df020	add	r30,r0,r29; fp = sp
 3606  00003bb0  afbffff8	sw	-8(r29),r31; push ret addr
 3607  00003bb4  2fbd0010	subui	r29,r29,#16; alloc local storage
 3608  00003bb8  afa20000	sw	0(r29),r2
 3609  00003bbc  8fdf0000	lw	r31,(r30)
 3610  00003bc0  20020000	addi	r2,r0,#0
 3611  00003bc4  08000008	j	L97_LF4
 3612  00003bc8  54000000	nop; not filled.
 3613  00003bcc          	L95_LF4:
 3614  00003bcc  20420001	addi	r2,r2,#1
 3615  00003bd0          	L97_LF4:
 3616  00003bd0  93e10000	lbu	r1,(r31)
 3617  00003bd4  23ff0001	addi	r31,r31,#1
 3618  00003bd8  64210000	snei	r1,r1,#0
 3619  00003bdc  1420ffec	bnez	r1,L95_LF4
 3620  00003be0  54000000	nop; not filled.
 3621  00003be4  00020820	add	r1,r0,r2
 3622  00003be8  8fa20000	lw	r2,0(r29)
 3623  00003bec  8fdffff8	lw	r31,-8(r30)
 3624  00003bf0  001ee820	add	r29,r0,r30
 3625  00003bf4  8fdefffc	lw	r30,-4(r30)
 3626  00003bf8  4be00000	jr	r31
 3627  00003bfc  54000000	nop
 3628  00003c00          	.endproc _dstrlen
 3629  00003c00          	.align 2
 3630  00003c00          	.proc _dstrstr
 3631  00003c00          	.global _dstrstr
 3632  00003c00          	_dstrstr:
 3633                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
 3634  00003c00  afbefffc	sw	-4(r29),r30; push fp
 3635  00003c04  001df020	add	r30,r0,r29; fp = sp
 3636  00003c08  afbffff8	sw	-8(r29),r31; push ret addr
 3637  00003c0c  2fbd0020	subui	r29,r29,#32; alloc local storage
 3638  00003c10  afa20000	sw	0(r29),r2
 3639  00003c14  afa30004	sw	4(r29),r3
 3640  00003c18  afa40008	sw	8(r29),r4
 3641  00003c1c  afa5000c	sw	12(r29),r5
 3642  00003c20  afa60010	sw	16(r29),r6
 3643  00003c24  afa70014	sw	20(r29),r7
 3644  00003c28  8fc50000	lw	r5,(r30)
 3645  00003c2c  8fc70004	lw	r7,4(r30)
 3646  00003c30  20030000	addi	r3,r0,#0
 3647  00003c34  90e10000	lbu	r1,(r7)
 3648  00003c38  20e20001	addi	r2,r7,#1
 3649  00003c3c  64210000	snei	r1,r1,#0
 3650  00003c40  1020001c	beqz	r1,L125_LF4
 3651  00003c44  54000000	nop; not filled.
 3652  00003c48          	L126_LF4:
 3653  00003c48  20630001	addi	r3,r3,#1
 3654  00003c4c  90410000	lbu	r1,(r2)
 3655  00003c50  20420001	addi	r2,r2,#1
 3656  00003c54  64210000	snei	r1,r1,#0
 3657  00003c58  1420ffec	bnez	r1,L126_LF4
 3658  00003c5c  54000000	nop; not filled.
 3659  00003c60          	L125_LF4:
 3660  00003c60  00033020	add	r6,r0,r3
 3661  00003c64  080000ac	j	L149_LF4
 3662  00003c68  54000000	nop; not filled.
 3663  00003c6c          	L130_LF4:
 3664  00003c6c  00051820	add	r3,r0,r5
 3665  00003c70  00072020	add	r4,r0,r7
 3666  00003c74  20020000	addi	r2,r0,#0
 3667  00003c78  0046082a	slt	r1,r2,r6
 3668  00003c7c  1020003c	beqz	r1,L134_LF4
 3669  00003c80  54000000	nop; not filled.
 3670  00003c84          	L136_LF4:
 3671  00003c84  909f0000	lbu	r31,(r4)
 3672  00003c88  67e10000	snei	r1,r31,#0
 3673  00003c8c  10200038	beqz	r1,L150_LF4
 3674  00003c90  54000000	nop; not filled.
 3675  00003c94  90610000	lbu	r1,(r3)
 3676  00003c98  003f0829	sne	r1,r1,r31
 3677  00003c9c  1420001c	bnez	r1,L134_LF4
 3678  00003ca0  54000000	nop; not filled.
 3679  00003ca4  20630001	addi	r3,r3,#1
 3680  00003ca8  20840001	addi	r4,r4,#1
 3681  00003cac  20420001	addi	r2,r2,#1
 3682  00003cb0  0046082a	slt	r1,r2,r6
 3683  00003cb4  1420ffcc	bnez	r1,L136_LF4
 3684  00003cb8  54000000	nop; not filled.
 3685  00003cbc          	L134_LF4:
 3686  00003cbc  00460828	seq	r1,r2,r6
 3687  00003cc0  10200010	beqz	r1,L141_LF4
 3688  00003cc4  54000000	nop; not filled.
 3689  00003cc8          	L150_LF4:
 3690  00003cc8  20010000	addi	r1,r0,#0
 3691  00003ccc  08000028	j	L132_LF4
 3692  00003cd0  54000000	nop; not filled.
 3693  00003cd4          	L141_LF4:
 3694  00003cd4  90630000	lbu	r3,(r3)
 3695  00003cd8  90820000	lbu	r2,(r4)
 3696  00003cdc  00620822	sub	r1,r3,r2
 3697  00003ce0  74210000	sgei	r1,r1,#0
 3698  00003ce4  201fffff	addi	r31,r0,#-1
 3699  00003ce8  10200008	beqz	r1,L143_LF4
 3700  00003cec  54000000	nop; not filled.
 3701  00003cf0  0062f829	sne	r31,r3,r2
 3702  00003cf4          	L143_LF4:
 3703  00003cf4  001f0820	add	r1,r0,r31
 3704  00003cf8          	L132_LF4:
 3705  00003cf8  64210000	snei	r1,r1,#0
 3706  00003cfc  14200010	bnez	r1,L131_LF4
 3707  00003d00  54000000	nop; not filled.
 3708  00003d04  00050820	add	r1,r0,r5
 3709  00003d08  0800001c	j	L146_LF4
 3710  00003d0c  54000000	nop; not filled.
 3711  00003d10          	L131_LF4:
 3712  00003d10  20a50001	addi	r5,r5,#1
 3713  00003d14          	L149_LF4:
 3714  00003d14  90a10000	lbu	r1,(r5)
 3715  00003d18  64210000	snei	r1,r1,#0
 3716  00003d1c  1420ff4c	bnez	r1,L130_LF4
 3717  00003d20  54000000	nop; not filled.
 3718  00003d24  20010000	addi	r1,r0,#0
 3719  00003d28          	L146_LF4:
 3720  00003d28  8fa20000	lw	r2,0(r29)
 3721  00003d2c  8fa30004	lw	r3,4(r29)
 3722  00003d30  8fa40008	lw	r4,8(r29)
 3723  00003d34  8fa5000c	lw	r5,12(r29)
 3724  00003d38  8fa60010	lw	r6,16(r29)
 3725  00003d3c  8fa70014	lw	r7,20(r29)
 3726  00003d40  8fdffff8	lw	r31,-8(r30)
 3727  00003d44  001ee820	add	r29,r0,r30
 3728  00003d48  8fdefffc	lw	r30,-4(r30)
 3729  00003d4c  4be00000	jr	r31
 3730  00003d50  54000000	nop
 3731  00003d54          	.endproc _dstrstr
 3732  00003d54          	.align 2
 3733  00003d54          	.proc _dmindex
 3734  00003d54          	.global _dmindex
 3735  00003d54          	_dmindex:
 3736                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
 3737  00003d54  afbefffc	sw	-4(r29),r30; push fp
 3738  00003d58  001df020	add	r30,r0,r29; fp = sp
 3739  00003d5c  afbffff8	sw	-8(r29),r31; push ret addr
 3740  00003d60  2fbd0020	subui	r29,r29,#32; alloc local storage
 3741  00003d64  afa20000	sw	0(r29),r2
 3742  00003d68  afa30004	sw	4(r29),r3
 3743  00003d6c  afa40008	sw	8(r29),r4
 3744  00003d70  afa5000c	sw	12(r29),r5
 3745  00003d74  afa60010	sw	16(r29),r6
 3746  00003d78  8fc40000	lw	r4,(r30)
 3747  00003d7c  8fc60004	lw	r6,4(r30)
 3748  00003d80  90810000	lbu	r1,(r4)
 3749  00003d84  64210000	snei	r1,r1,#0
 3750  00003d88  10200060	beqz	r1,L164_LF4
 3751  00003d8c  54000000	nop; not filled.
 3752  00003d90  00012820	add	r5,r0,r1
 3753  00003d94          	L165_LF4:
 3754  00003d94  00061020	add	r2,r0,r6
 3755  00003d98  80df0000	lb	r31,(r6)
 3756  00003d9c  33e100ff	andi	r1,r31,#0x00ff
 3757  00003da0  64210000	snei	r1,r1,#0
 3758  00003da4  1020003c	beqz	r1,L163_LF4
 3759  00003da8  54000000	nop; not filled.
 3760  00003dac  90830000	lbu	r3,(r4)
 3761  00003db0          	L169_LF4:
 3762  00003db0  33e100ff	andi	r1,r31,#0x00ff
 3763  00003db4  00610828	seq	r1,r3,r1
 3764  00003db8  10200010	beqz	r1,L168_LF4
 3765  00003dbc  54000000	nop; not filled.
 3766  00003dc0  00040820	add	r1,r0,r4
 3767  00003dc4  08000028	j	L173_LF4
 3768  00003dc8  54000000	nop; not filled.
 3769  00003dcc          	L168_LF4:
 3770  00003dcc  20420001	addi	r2,r2,#1
 3771  00003dd0  805f0000	lb	r31,(r2)
 3772  00003dd4  33e100ff	andi	r1,r31,#0x00ff
 3773  00003dd8  64210000	snei	r1,r1,#0
 3774  00003ddc  1420ffd0	bnez	r1,L169_LF4
 3775  00003de0  54000000	nop; not filled.
 3776  00003de4          	L163_LF4:
 3777  00003de4  14a0ffac	bnez	r5,L165_LF4
 3778  00003de8  54000000	nop; not filled.
 3779  00003dec          	L164_LF4:
 3780  00003dec  20010000	addi	r1,r0,#0
 3781  00003df0          	L173_LF4:
 3782  00003df0  8fa20000	lw	r2,0(r29)
 3783  00003df4  8fa30004	lw	r3,4(r29)
 3784  00003df8  8fa40008	lw	r4,8(r29)
 3785  00003dfc  8fa5000c	lw	r5,12(r29)
 3786  00003e00  8fa60010	lw	r6,16(r29)
 3787  00003e04  8fdffff8	lw	r31,-8(r30)
 3788  00003e08  001ee820	add	r29,r0,r30
 3789  00003e0c  8fdefffc	lw	r30,-4(r30)
 3790  00003e10  4be00000	jr	r31
 3791  00003e14  54000000	nop
 3792  00003e18          	.endproc _dmindex
 3793  00003e18          	.align 2
 3794  00003e18          	.proc _dindex
 3795  00003e18          	.global _dindex
 3796  00003e18          	_dindex:
 3797                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
 3798  00003e18  afbefffc	sw	-4(r29),r30; push fp
 3799  00003e1c  001df020	add	r30,r0,r29; fp = sp
 3800  00003e20  afbffff8	sw	-8(r29),r31; push ret addr
 3801  00003e24  2fbd0010	subui	r29,r29,#16; alloc local storage
 3802  00003e28  afa20000	sw	0(r29),r2
 3803  00003e2c  afa30004	sw	4(r29),r3
 3804  00003e30  8fc20000	lw	r2,(r30)
 3805  00003e34  8fc30004	lw	r3,4(r30)
 3806  00003e38  08000024	j	L187_LF4
 3807  00003e3c  54000000	nop; not filled.
 3808  00003e40          	L183_LF4:
 3809  00003e40  33e100ff	andi	r1,r31,#0x00ff
 3810  00003e44  00230828	seq	r1,r1,r3
 3811  00003e48  10200010	beqz	r1,L184_LF4
 3812  00003e4c  54000000	nop; not filled.
 3813  00003e50  00020820	add	r1,r0,r2
 3814  00003e54  08000020	j	L186_LF4
 3815  00003e58  54000000	nop; not filled.
 3816  00003e5c          	L184_LF4:
 3817  00003e5c  20420001	addi	r2,r2,#1
 3818  00003e60          	L187_LF4:
 3819  00003e60  805f0000	lb	r31,(r2)
 3820  00003e64  33e100ff	andi	r1,r31,#0x00ff
 3821  00003e68  64210000	snei	r1,r1,#0
 3822  00003e6c  1420ffd0	bnez	r1,L183_LF4
 3823  00003e70  54000000	nop; not filled.
 3824  00003e74  20010000	addi	r1,r0,#0
 3825  00003e78          	L186_LF4:
 3826  00003e78  8fa20000	lw	r2,0(r29)
 3827  00003e7c  8fa30004	lw	r3,4(r29)
 3828  00003e80  8fdffff8	lw	r31,-8(r30)
 3829  00003e84  001ee820	add	r29,r0,r30
 3830  00003e88  8fdefffc	lw	r30,-4(r30)
 3831  00003e8c  4be00000	jr	r31
 3832  00003e90  54000000	nop
 3833  00003e94          	.endproc _dindex
 3834  00003e94          	.align 2
 3835  00003e94          	.proc _ditoa
 3836  00003e94          	.global _ditoa
 3837  00003e94          	_ditoa:
 3838                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
 3839  00003e94  afbefffc	sw	-4(r29),r30; push fp
 3840  00003e98  001df020	add	r30,r0,r29; fp = sp
 3841  00003e9c  afbffff8	sw	-8(r29),r31; push ret addr
 3842  00003ea0  2fbd0020	subui	r29,r29,#32; alloc local storage
 3843  00003ea4  afa20000	sw	0(r29),r2
 3844  00003ea8  afa30004	sw	4(r29),r3
 3845  00003eac  afa40008	sw	8(r29),r4
 3846  00003eb0  afa5000c	sw	12(r29),r5
 3847  00003eb4  afa60010	sw	16(r29),r6
 3848  00003eb8  8fc30000	lw	r3,(r30)
 3849  00003ebc  8fc40004	lw	r4,4(r30)
 3850  00003ec0  68610000	slti	r1,r3,#0
 3851  00003ec4  10200010	beqz	r1,L203_LF4
 3852  00003ec8  54000000	nop; not filled.
 3853  00003ecc  2006002d	addi	r6,r0,(#0x2d)&0xff
 3854  00003ed0  08000014	j	L216_LF4
 3855  00003ed4  54000000	nop; not filled.
 3856  00003ed8          	L203_LF4:
 3857  00003ed8  64610000	snei	r1,r3,#0
 3858  00003edc  14200018	bnez	r1,L205_LF4
 3859  00003ee0  54000000	nop; not filled.
 3860  00003ee4  20060030	addi	r6,r0,(#0x30)&0xff
 3861  00003ee8          	L216_LF4:
 3862  00003ee8  a0860000	sb	(r4),r6
 3863  00003eec  20840001	addi	r4,r4,#1
 3864  00003ef0  0800007c	j	L204_LF4
 3865  00003ef4  54000000	nop; not filled.
 3866  00003ef8          	L205_LF4:
 3867  00003ef8  201f0001	addi	r31,r0,#1
 3868  00003efc  03e3082c	sle	r1,r31,r3
 3869  00003f00  1020001c	beqz	r1,L208_LF4
 3870  00003f04  54000000	nop; not filled.
 3871  00003f08          	L209_LF4:
 3872  00003f08  53e10002	slli	r1,r31,#0x2
 3873  00003f0c  003f0820	add	r1,r1,r31
 3874  00003f10  503f0001	slli	r31,r1,#0x1
 3875  00003f14  03e3082c	sle	r1,r31,r3
 3876  00003f18  1420ffec	bnez	r1,L209_LF4
 3877  00003f1c  54000000	nop; not filled.
 3878  00003f20          	L208_LF4:
 3879  00003f20  2005000a	addi	r5,r0,#10
 3880  00003f24          	L212_LF4:
 3881  00003f24  03e00035	movi2fp	f0,r31
 3882  00003f28  00a00835	movi2fp	f1,r5
 3883  00003f2c  0401000f	div	f0,f0,f1
 3884  00003f30  0000f834	movfp2i	r31,f0
 3885  00003f34  00600035	movi2fp	f0,r3
 3886  00003f38  03e00835	movi2fp	f1,r31
 3887  00003f3c  0401000f	div	f0,f0,f1
 3888  00003f40  00001034	movfp2i	r2,f0
 3889  00003f44  20410030	addi	r1,r2,#48
 3890  00003f48  a0810000	sb	(r4),r1
 3891  00003f4c  20840001	addi	r4,r4,#1
 3892  00003f50  00400035	movi2fp	f0,r2
 3893  00003f54  03e00835	movi2fp	f1,r31
 3894  00003f58  0401000e	mult	f0,f0,f1
 3895  00003f5c  00000834	movfp2i	r1,f0
 3896  00003f60  00611822	sub	r3,r3,r1
 3897  00003f64  6fe10001	sgti	r1,r31,#1
 3898  00003f68  1420ffb8	bnez	r1,L212_LF4
 3899  00003f6c  54000000	nop; not filled.
 3900  00003f70          	L204_LF4:
 3901  00003f70  20060000	addi	r6,r0,(#0x0)&0xff
 3902  00003f74  a0860000	sb	(r4),r6
 3903  00003f78  8fa20000	lw	r2,0(r29)
 3904  00003f7c  8fa30004	lw	r3,4(r29)
 3905  00003f80  8fa40008	lw	r4,8(r29)
 3906  00003f84  8fa5000c	lw	r5,12(r29)
 3907  00003f88  8fa60010	lw	r6,16(r29)
 3908  00003f8c  8fdffff8	lw	r31,-8(r30)
 3909  00003f90  001ee820	add	r29,r0,r30
 3910  00003f94  8fdefffc	lw	r30,-4(r30)
 3911  00003f98  4be00000	jr	r31
 3912  00003f9c  54000000	nop
 3913  00003fa0          	.endproc _ditoa
 3914  00003fa0          	.align 2
 3915  00003fa0          	.proc _dstrtol
 3916  00003fa0          	.global _dstrtol
 3917  00003fa0          	_dstrtol:
 3918                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
 3919  00003fa0  afbefffc	sw	-4(r29),r30; push fp
 3920  00003fa4  001df020	add	r30,r0,r29; fp = sp
 3921  00003fa8  afbffff8	sw	-8(r29),r31; push ret addr
 3922  00003fac  2fbd0020	subui	r29,r29,#32; alloc local storage
 3923  00003fb0  afa20000	sw	0(r29),r2
 3924  00003fb4  afa30004	sw	4(r29),r3
 3925  00003fb8  afa40008	sw	8(r29),r4
 3926  00003fbc  afa5000c	sw	12(r29),r5
 3927  00003fc0  afa60010	sw	16(r29),r6
 3928  00003fc4  8fc20000	lw	r2,(r30)
 3929  00003fc8  8fc50004	lw	r5,4(r30)
 3930  00003fcc  8fc40008	lw	r4,8(r30)
 3931  00003fd0  20030000	addi	r3,r0,#0
 3932  00003fd4  08000008	j	L247_LF4
 3933  00003fd8  54000000	nop; not filled.
 3934  00003fdc          	L220_LF4:
 3935  00003fdc  20420001	addi	r2,r2,#1
 3936  00003fe0          	L247_LF4:
 3937  00003fe0  805f0000	lb	r31,(r2)
 3938  00003fe4  33e100ff	andi	r1,r31,#0x00ff
 3939  00003fe8  60210020	seqi	r1,r1,#32
 3940  00003fec  1420ffec	bnez	r1,L220_LF4
 3941  00003ff0  54000000	nop; not filled.
 3942  00003ff4  23e1fff7	addi	r1,r31,#-9
 3943  00003ff8  302100ff	andi	r1,r1,#0x00ff
 3944  00003ffc  70210001	sleui	r1,r1,#1
 3945  00004000  1420ffd8	bnez	r1,L220_LF4
 3946  00004004  54000000	nop; not filled.
 3947  00004008  64a10000	snei	r1,r5,#0
 3948  0000400c  10200008	beqz	r1,L222_LF4
 3949  00004010  54000000	nop; not filled.
 3950  00004014  aca20000	sw	(r5),r2
 3951  00004018          	L222_LF4:
 3952  00004018  905f0000	lbu	r31,(r2)
 3953  0000401c  67e10000	snei	r1,r31,#0
 3954  00004020  10200090	beqz	r1,L248_LF4
 3955  00004024  54000000	nop; not filled.
 3956  00004028  63e1002d	seqi	r1,r31,#45
 3957  0000402c  10200014	beqz	r1,L224_LF4
 3958  00004030  54000000	nop; not filled.
 3959  00004034  2006ffff	addi	r6,r0,#-1
 3960  00004038  20420001	addi	r2,r2,#1
 3961  0000403c  08000008	j	L225_LF4
 3962  00004040  54000000	nop; not filled.
 3963  00004044          	L224_LF4:
 3964  00004044  20060001	addi	r6,r0,#1
 3965  00004048          	L225_LF4:
 3966  00004048  64810000	snei	r1,r4,#0
 3967  0000404c  14200054	bnez	r1,L226_LF4
 3968  00004050  54000000	nop; not filled.
 3969  00004054  90410000	lbu	r1,(r2)
 3970  00004058  60210030	seqi	r1,r1,#48
 3971  0000405c  10200040	beqz	r1,L227_LF4
 3972  00004060  54000000	nop; not filled.
 3973  00004064  20420001	addi	r2,r2,#1
 3974  00004068  905f0000	lbu	r31,(r2)
 3975  0000406c  63e10078	seqi	r1,r31,#120
 3976  00004070  14200010	bnez	r1,L229_LF4
 3977  00004074  54000000	nop; not filled.
 3978  00004078  63e10058	seqi	r1,r31,#88
 3979  0000407c  10200014	beqz	r1,L228_LF4
 3980  00004080  54000000	nop; not filled.
 3981  00004084          	L229_LF4:
 3982  00004084  20040010	addi	r4,r0,#16
 3983  00004088  20420001	addi	r2,r2,#1
 3984  0000408c  08000014	j	L226_LF4
 3985  00004090  54000000	nop; not filled.
 3986  00004094          	L228_LF4:
 3987  00004094  20040008	addi	r4,r0,#8
 3988  00004098  08000008	j	L226_LF4
 3989  0000409c  54000000	nop; not filled.
 3990  000040a0          	L227_LF4:
 3991  000040a0  2004000a	addi	r4,r0,#10
 3992  000040a4          	L226_LF4:
 3993  000040a4  2081ffff	addi	r1,r4,#-1
 3994  000040a8  6c21000f	sgtui	r1,r1,#15
 3995  000040ac  10200010	beqz	r1,L233_LF4
 3996  000040b0  54000000	nop; not filled.
 3997  000040b4          	L248_LF4:
 3998  000040b4  00030820	add	r1,r0,r3
 3999  000040b8  080000c4	j	L245_LF4
 4000  000040bc  54000000	nop; not filled.
 4001  000040c0          	L233_LF4:
 4002  000040c0  805f0000	lb	r31,(r2)
 4003  000040c4  23e1ffd0	addi	r1,r31,#-48
 4004  000040c8  302100ff	andi	r1,r1,#0x00ff
 4005  000040cc  70210009	sleui	r1,r1,#9
 4006  000040d0  10200014	beqz	r1,L236_LF4
 4007  000040d4  54000000	nop; not filled.
 4008  000040d8  33e100ff	andi	r1,r31,#0x00ff
 4009  000040dc  2021ffd0	addi	r1,r1,#-48
 4010  000040e0  08000050	j	L237_LF4
 4011  000040e4  54000000	nop; not filled.
 4012  000040e8          	L236_LF4:
 4013  000040e8  23e1ff9f	addi	r1,r31,#-97
 4014  000040ec  302100ff	andi	r1,r1,#0x00ff
 4015  000040f0  70210019	sleui	r1,r1,#25
 4016  000040f4  10200014	beqz	r1,L238_LF4
 4017  000040f8  54000000	nop; not filled.
 4018  000040fc  33e100ff	andi	r1,r31,#0x00ff
 4019  00004100  2021ffa9	addi	r1,r1,#-87
 4020  00004104  0800002c	j	L237_LF4
 4021  00004108  54000000	nop; not filled.
 4022  0000410c          	L238_LF4:
 4023  0000410c  23e1ffbf	addi	r1,r31,#-65
 4024  00004110  302100ff	andi	r1,r1,#0x00ff
 4025  00004114  70210019	sleui	r1,r1,#25
 4026  00004118  10200014	beqz	r1,L240_LF4
 4027  0000411c  54000000	nop; not filled.
 4028  00004120  33e100ff	andi	r1,r31,#0x00ff
 4029  00004124  2021ffc9	addi	r1,r1,#-55
 4030  00004128  08000008	j	L237_LF4
 4031  0000412c  54000000	nop; not filled.
 4032  00004130          	L240_LF4:
 4033  00004130  200103e8	addi	r1,r0,#1000
 4034  00004134          	L237_LF4:
 4035  00004134  0024f82a	slt	r31,r1,r4
 4036  00004138  13e00024	beqz	r31,L246_LF4
 4037  0000413c  54000000	nop; not filled.
 4038  00004140  00600035	movi2fp	f0,r3
 4039  00004144  00800835	movi2fp	f1,r4
 4040  00004148  0401000e	mult	f0,f0,f1
 4041  0000414c  00001834	movfp2i	r3,f0
 4042  00004150  00611820	add	r3,r3,r1
 4043  00004154  20420001	addi	r2,r2,#1
 4044  00004158  17e0ff64	bnez	r31,L233_LF4
 4045  0000415c  54000000	nop; not filled.
 4046  00004160          	L246_LF4:
 4047  00004160  64a10000	snei	r1,r5,#0
 4048  00004164  10200008	beqz	r1,L244_LF4
 4049  00004168  54000000	nop; not filled.
 4050  0000416c  aca20000	sw	(r5),r2
 4051  00004170          	L244_LF4:
 4052  00004170  00600035	movi2fp	f0,r3
 4053  00004174  00c00835	movi2fp	f1,r6
 4054  00004178  0401000e	mult	f0,f0,f1
 4055  0000417c  00000834	movfp2i	r1,f0
 4056  00004180          	L245_LF4:
 4057  00004180  8fa20000	lw	r2,0(r29)
 4058  00004184  8fa30004	lw	r3,4(r29)
 4059  00004188  8fa40008	lw	r4,8(r29)
 4060  0000418c  8fa5000c	lw	r5,12(r29)
 4061  00004190  8fa60010	lw	r6,16(r29)
 4062  00004194  8fdffff8	lw	r31,-8(r30)
 4063  00004198  001ee820	add	r29,r0,r30
 4064  0000419c  8fdefffc	lw	r30,-4(r30)
 4065  000041a0  4be00000	jr	r31
 4066  000041a4  54000000	nop
 4067  000041a8          	.endproc _dstrtol
 4068  000041a8          	.align 2
 4069  000041a8          	.proc _bcopy
 4070  000041a8          	.global _bcopy
 4071  000041a8          	_bcopy:
 4072                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 4073  000041a8  afbefffc	sw	-4(r29),r30; push fp
 4074  000041ac  001df020	add	r30,r0,r29; fp = sp
 4075  000041b0  afbffff8	sw	-8(r29),r31; push ret addr
 4076  000041b4  2fbd0018	subui	r29,r29,#24; alloc local storage
 4077  000041b8  afa20000	sw	0(r29),r2
 4078  000041bc  afa30004	sw	4(r29),r3
 4079  000041c0  afa40008	sw	8(r29),r4
 4080  000041c4  8fc30000	lw	r3,(r30)
 4081  000041c8  8fc20004	lw	r2,4(r30)
 4082  000041cc  8fdf0008	lw	r31,8(r30)
 4083  000041d0  08000014	j	L259_LF4
 4084  000041d4  54000000	nop; not filled.
 4085  000041d8          	L257_LF4:
 4086  000041d8  80640000	lb	r4,(r3)
 4087  000041dc  a0440000	sb	(r2),r4
 4088  000041e0  20630001	addi	r3,r3,#1
 4089  000041e4  20420001	addi	r2,r2,#1
 4090  000041e8          	L259_LF4:
 4091  000041e8  001f0820	add	r1,r0,r31
 4092  000041ec  23ffffff	addi	r31,r31,#-1
 4093  000041f0  6c210000	sgti	r1,r1,#0
 4094  000041f4  1420ffe0	bnez	r1,L257_LF4
 4095  000041f8  54000000	nop; not filled.
 4096  000041fc  8fa20000	lw	r2,0(r29)
 4097  00004200  8fa30004	lw	r3,4(r29)
 4098  00004204  8fa40008	lw	r4,8(r29)
 4099  00004208  8fdffff8	lw	r31,-8(r30)
 4100  0000420c  001ee820	add	r29,r0,r30
 4101  00004210  8fdefffc	lw	r30,-4(r30)
 4102  00004214  4be00000	jr	r31
 4103  00004218  54000000	nop
 4104  0000421c          	.endproc _bcopy
 4105  0000421c          	.align 2
 4106  0000421c          	.proc _bzero
 4107  0000421c          	.global _bzero
 4108  0000421c          	_bzero:
 4109                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 4110  0000421c  afbefffc	sw	-4(r29),r30; push fp
 4111  00004220  001df020	add	r30,r0,r29; fp = sp
 4112  00004224  afbffff8	sw	-8(r29),r31; push ret addr
 4113  00004228  2fbd0010	subui	r29,r29,#16; alloc local storage
 4114  0000422c  afa20000	sw	0(r29),r2
 4115  00004230  afa30004	sw	4(r29),r3
 4116  00004234  8fc20000	lw	r2,(r30)
 4117  00004238  8fdf0004	lw	r31,4(r30)
 4118  0000423c  08000010	j	L270_LF4
 4119  00004240  54000000	nop; not filled.
 4120  00004244          	L268_LF4:
 4121  00004244  20030000	addi	r3,r0,(#0x0)&0xff
 4122  00004248  a0430000	sb	(r2),r3
 4123  0000424c  20420001	addi	r2,r2,#1
 4124  00004250          	L270_LF4:
 4125  00004250  001f0820	add	r1,r0,r31
 4126  00004254  23ffffff	addi	r31,r31,#-1
 4127  00004258  6c210000	sgti	r1,r1,#0
 4128  0000425c  1420ffe4	bnez	r1,L268_LF4
 4129  00004260  54000000	nop; not filled.
 4130  00004264  8fa20000	lw	r2,0(r29)
 4131  00004268  8fa30004	lw	r3,4(r29)
 4132  0000426c  8fdffff8	lw	r31,-8(r30)
 4133  00004270  001ee820	add	r29,r0,r30
 4134  00004274  8fdefffc	lw	r30,-4(r30)
 4135  00004278  4be00000	jr	r31
 4136  0000427c  54000000	nop
 4137  00004280          	.endproc _bzero
 4138                      ; Compiled by GCC
 4140  00004280          	.align 2
 4141  00004280          	.proc _isspace
 4142  00004280          	.global _isspace
 4143  00004280          	_isspace:
 4144                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 4145  00004280  afbefffc	sw	-4(r29),r30; push fp
 4146  00004284  001df020	add	r30,r0,r29; fp = sp
 4147  00004288  afbffff8	sw	-8(r29),r31; push ret addr
 4148  0000428c  2fbd0010	subui	r29,r29,#16; alloc local storage
 4149  00004290  afa20000	sw	0(r29),r2
 4150  00004294  83c20003	lb	r2,3(r30)
 4151  00004298  201f0000	addi	r31,r0,#0
 4152  0000429c  304100ff	andi	r1,r2,#0x00ff
 4153  000042a0  60210020	seqi	r1,r1,#32
 4154  000042a4  14200018	bnez	r1,L6_LF5
 4155  000042a8  54000000	nop; not filled.
 4156  000042ac  2041fff7	addi	r1,r2,#-9
 4157  000042b0  302100ff	andi	r1,r1,#0x00ff
 4158  000042b4  70210001	sleui	r1,r1,#1
 4159  000042b8  10200008	beqz	r1,L5_LF5
 4160  000042bc  54000000	nop; not filled.
 4161  000042c0          	L6_LF5:
 4162  000042c0  201f0001	addi	r31,r0,#1
 4163  000042c4          	L5_LF5:
 4164  000042c4  001f0820	add	r1,r0,r31
 4165  000042c8  8fa20000	lw	r2,0(r29)
 4166  000042cc  8fdffff8	lw	r31,-8(r30)
 4167  000042d0  001ee820	add	r29,r0,r30
 4168  000042d4  8fdefffc	lw	r30,-4(r30)
 4169  000042d8  4be00000	jr	r31
 4170  000042dc  54000000	nop
 4171  000042e0          	.endproc _isspace
 4172  000042e0          	.align 2
 4173  000042e0          	.proc _isxdigit
 4174  000042e0          	.global _isxdigit
 4175  000042e0          	_isxdigit:
 4176                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 4177  000042e0  afbefffc	sw	-4(r29),r30; push fp
 4178  000042e4  001df020	add	r30,r0,r29; fp = sp
 4179  000042e8  afbffff8	sw	-8(r29),r31; push ret addr
 4180  000042ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 4181  000042f0  afa20000	sw	0(r29),r2
 4182  000042f4  83df0003	lb	r31,3(r30)
 4183  000042f8  20020000	addi	r2,r0,#0
 4184  000042fc  23e1ffd0	addi	r1,r31,#-48
 4185  00004300  302100ff	andi	r1,r1,#0x00ff
 4186  00004304  70210009	sleui	r1,r1,#9
 4187  00004308  14200028	bnez	r1,L12_LF5
 4188  0000430c  54000000	nop; not filled.
 4189  00004310  23e1ff9f	addi	r1,r31,#-97
 4190  00004314  302100ff	andi	r1,r1,#0x00ff
 4191  00004318  70210005	sleui	r1,r1,#5
 4192  0000431c  14200014	bnez	r1,L12_LF5
 4193  00004320  54000000	nop; not filled.
 4194  00004324  33e100ff	andi	r1,r31,#0x00ff
 4195  00004328  64210041	snei	r1,r1,#65
 4196  0000432c  14200008	bnez	r1,L11_LF5
 4197  00004330  54000000	nop; not filled.
 4198  00004334          	L12_LF5:
 4199  00004334  20020001	addi	r2,r0,#1
 4200  00004338          	L11_LF5:
 4201  00004338  00020820	add	r1,r0,r2
 4202  0000433c  8fa20000	lw	r2,0(r29)
 4203  00004340  8fdffff8	lw	r31,-8(r30)
 4204  00004344  001ee820	add	r29,r0,r30
 4205  00004348  8fdefffc	lw	r30,-4(r30)
 4206  0000434c  4be00000	jr	r31
 4207  00004350  54000000	nop
 4208  00004354          	.endproc _isxdigit
 4209  00004354          	.align 2
 4210  00004354          	.proc _DisableIntrs
 4211  00004354          	.global _DisableIntrs
 4212  00004354          	_DisableIntrs:
 4213                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 4214  00004354  afbefffc	sw	-4(r29),r30; push fp
 4215  00004358  001df020	add	r30,r0,r29; fp = sp
 4216  0000435c  afbffff8	sw	-8(r29),r31; push ret addr
 4217  00004360  2fbd0010	subui	r29,r29,#16; alloc local storage
 4218  00004364  afa20000	sw	0(r29),r2
 4219  00004368  23bdfff8	addi	r29,r29,#-8
 4220  0000436c  2002000f	addi	r2,r0,#15
 4221  00004370  afa20000	sw	(r29),r2
 4222  00004374  0fffcf10	jal	_SetIntrs
 4223  00004378  54000000	nop; not filled.
 4224  0000437c  23bd0008	addi	r29,r29,#8
 4225  00004380  8fa20000	lw	r2,0(r29)
 4226  00004384  8fdffff8	lw	r31,-8(r30)
 4227  00004388  001ee820	add	r29,r0,r30
 4228  0000438c  8fdefffc	lw	r30,-4(r30)
 4229  00004390  4be00000	jr	r31
 4230  00004394  54000000	nop
 4231  00004398          	.endproc _DisableIntrs
 4232  00004398          	.align 2
 4233  00004398          	.proc _EnableIntrs
 4234  00004398          	.global _EnableIntrs
 4235  00004398          	_EnableIntrs:
 4236                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 4237  00004398  afbefffc	sw	-4(r29),r30; push fp
 4238  0000439c  001df020	add	r30,r0,r29; fp = sp
 4239  000043a0  afbffff8	sw	-8(r29),r31; push ret addr
 4240  000043a4  2fbd0010	subui	r29,r29,#16; alloc local storage
 4241  000043a8  afa20000	sw	0(r29),r2
 4242  000043ac  23bdfff8	addi	r29,r29,#-8
 4243  000043b0  20020000	addi	r2,r0,#0
 4244  000043b4  afa20000	sw	(r29),r2
 4245  000043b8  0fffcecc	jal	_SetIntrs
 4246  000043bc  54000000	nop; not filled.
 4247  000043c0  23bd0008	addi	r29,r29,#8
 4248  000043c4  8fa20000	lw	r2,0(r29)
 4249  000043c8  8fdffff8	lw	r31,-8(r30)
 4250  000043cc  001ee820	add	r29,r0,r30
 4251  000043d0  8fdefffc	lw	r30,-4(r30)
 4252  000043d4  4be00000	jr	r31
 4253  000043d8  54000000	nop
 4254  000043dc          	.endproc _EnableIntrs
 4255  000043dc          	.align 2
 4256  000043dc          	.proc _RestoreIntrs
 4257  000043dc          	.global _RestoreIntrs
 4258  000043dc          	_RestoreIntrs:
 4259                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 4260  000043dc  afbefffc	sw	-4(r29),r30; push fp
 4261  000043e0  001df020	add	r30,r0,r29; fp = sp
 4262  000043e4  afbffff8	sw	-8(r29),r31; push ret addr
 4263  000043e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 4264  000043ec  afa20000	sw	0(r29),r2
 4265  000043f0  23bdfff8	addi	r29,r29,#-8
 4266  000043f4  8fc20000	lw	r2,(r30)
 4267  000043f8  afa20000	sw	(r29),r2
 4268  000043fc  0fffce88	jal	_SetIntrs
 4269  00004400  54000000	nop; not filled.
 4270  00004404  23bd0008	addi	r29,r29,#8
 4271  00004408  8fa20000	lw	r2,0(r29)
 4272  0000440c  8fdffff8	lw	r31,-8(r30)
 4273  00004410  001ee820	add	r29,r0,r30
 4274  00004414  8fdefffc	lw	r30,-4(r30)
 4275  00004418  4be00000	jr	r31
 4276  0000441c  54000000	nop
 4277  00004420          	.endproc _RestoreIntrs
 4278  00004420          	.align 2
 4279  00004420          	.proc _QueueLinkInit
 4280  00004420          	.global _QueueLinkInit
 4281  00004420          	_QueueLinkInit:
 4282                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 4283  00004420  afbefffc	sw	-4(r29),r30; push fp
 4284  00004424  001df020	add	r30,r0,r29; fp = sp
 4285  00004428  afbffff8	sw	-8(r29),r31; push ret addr
 4286  0000442c  2fbd0010	subui	r29,r29,#16; alloc local storage
 4287  00004430  afa20000	sw	0(r29),r2
 4288  00004434  8fc10000	lw	r1,(r30)
 4289  00004438  8fc20004	lw	r2,4(r30)
 4290  0000443c  201f0000	addi	r31,r0,#0
 4291  00004440  ac3f0000	sw	(r1),r31
 4292  00004444  ac22000c	sw	12(r1),r2
 4293  00004448  8fa20000	lw	r2,0(r29)
 4294  0000444c  8fdffff8	lw	r31,-8(r30)
 4295  00004450  001ee820	add	r29,r0,r30
 4296  00004454  8fdefffc	lw	r30,-4(r30)
 4297  00004458  4be00000	jr	r31
 4298  0000445c  54000000	nop
 4299  00004460          	.endproc _QueueLinkInit
 4300  00004460          	.align 2
 4301  00004460          	.proc _QueueNext
 4302  00004460          	.global _QueueNext
 4303  00004460          	_QueueNext:
 4304                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 4305  00004460  afbefffc	sw	-4(r29),r30; push fp
 4306  00004464  001df020	add	r30,r0,r29; fp = sp
 4307  00004468  afbffff8	sw	-8(r29),r31; push ret addr
 4308  0000446c  2fbd0008	subui	r29,r29,#8; alloc local storage
 4309  00004470  8fc10000	lw	r1,(r30)
 4310  00004474  8c210000	lw	r1,(r1)
 4311  00004478  8fdffff8	lw	r31,-8(r30)
 4312  0000447c  001ee820	add	r29,r0,r30
 4313  00004480  8fdefffc	lw	r30,-4(r30)
 4314  00004484  4be00000	jr	r31
 4315  00004488  54000000	nop
 4316  0000448c          	.endproc _QueueNext
 4317  0000448c          	.align 2
 4318  0000448c          	.proc _QueuePrev
 4319  0000448c          	.global _QueuePrev
 4320  0000448c          	_QueuePrev:
 4321                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 4322  0000448c  afbefffc	sw	-4(r29),r30; push fp
 4323  00004490  001df020	add	r30,r0,r29; fp = sp
 4324  00004494  afbffff8	sw	-8(r29),r31; push ret addr
 4325  00004498  2fbd0008	subui	r29,r29,#8; alloc local storage
 4326  0000449c  8fc10000	lw	r1,(r30)
 4327  000044a0  8c210004	lw	r1,4(r1)
 4328  000044a4  8fdffff8	lw	r31,-8(r30)
 4329  000044a8  001ee820	add	r29,r0,r30
 4330  000044ac  8fdefffc	lw	r30,-4(r30)
 4331  000044b0  4be00000	jr	r31
 4332  000044b4  54000000	nop
 4333  000044b8          	.endproc _QueuePrev
 4334  000044b8          	.align 2
 4335  000044b8          	.proc _QueueFirst
 4336  000044b8          	.global _QueueFirst
 4337  000044b8          	_QueueFirst:
 4338                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 4339  000044b8  afbefffc	sw	-4(r29),r30; push fp
 4340  000044bc  001df020	add	r30,r0,r29; fp = sp
 4341  000044c0  afbffff8	sw	-8(r29),r31; push ret addr
 4342  000044c4  2fbd0008	subui	r29,r29,#8; alloc local storage
 4343  000044c8  8fc10000	lw	r1,(r30)
 4344  000044cc  8c210000	lw	r1,(r1)
 4345  000044d0  8fdffff8	lw	r31,-8(r30)
 4346  000044d4  001ee820	add	r29,r0,r30
 4347  000044d8  8fdefffc	lw	r30,-4(r30)
 4348  000044dc  4be00000	jr	r31
 4349  000044e0  54000000	nop
 4350  000044e4          	.endproc _QueueFirst
 4351  000044e4          	.align 2
 4352  000044e4          	.proc _QueueLast
 4353  000044e4          	.global _QueueLast
 4354  000044e4          	_QueueLast:
 4355                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 4356  000044e4  afbefffc	sw	-4(r29),r30; push fp
 4357  000044e8  001df020	add	r30,r0,r29; fp = sp
 4358  000044ec  afbffff8	sw	-8(r29),r31; push ret addr
 4359  000044f0  2fbd0008	subui	r29,r29,#8; alloc local storage
 4360  000044f4  8fc10000	lw	r1,(r30)
 4361  000044f8  8c210004	lw	r1,4(r1)
 4362  000044fc  8fdffff8	lw	r31,-8(r30)
 4363  00004500  001ee820	add	r29,r0,r30
 4364  00004504  8fdefffc	lw	r30,-4(r30)
 4365  00004508  4be00000	jr	r31
 4366  0000450c  54000000	nop
 4367  00004510          	.endproc _QueueLast
 4368  00004510          	.align 2
 4369  00004510          	.proc _QueueInsertAfter
 4370  00004510          	.global _QueueInsertAfter
 4371  00004510          	_QueueInsertAfter:
 4372                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 4373  00004510  afbefffc	sw	-4(r29),r30; push fp
 4374  00004514  001df020	add	r30,r0,r29; fp = sp
 4375  00004518  afbffff8	sw	-8(r29),r31; push ret addr
 4376  0000451c  2fbd0010	subui	r29,r29,#16; alloc local storage
 4377  00004520  afa20000	sw	0(r29),r2
 4378  00004524  afa30004	sw	4(r29),r3
 4379  00004528  8fc30000	lw	r3,(r30)
 4380  0000452c  8fc20004	lw	r2,4(r30)
 4381  00004530  8fc10008	lw	r1,8(r30)
 4382  00004534  ac230008	sw	8(r1),r3
 4383  00004538  ac220004	sw	4(r1),r2
 4384  0000453c  8c5f0000	lw	r31,(r2)
 4385  00004540  ac3f0000	sw	(r1),r31
 4386  00004544  ac410000	sw	(r2),r1
 4387  00004548  8c220000	lw	r2,(r1)
 4388  0000454c  ac410004	sw	4(r2),r1
 4389  00004550  8c610008	lw	r1,8(r3)
 4390  00004554  20210001	addi	r1,r1,#1
 4391  00004558  ac610008	sw	8(r3),r1
 4392  0000455c  8fa20000	lw	r2,0(r29)
 4393  00004560  8fa30004	lw	r3,4(r29)
 4394  00004564  8fdffff8	lw	r31,-8(r30)
 4395  00004568  001ee820	add	r29,r0,r30
 4396  0000456c  8fdefffc	lw	r30,-4(r30)
 4397  00004570  4be00000	jr	r31
 4398  00004574  54000000	nop
 4399  00004578          	.endproc _QueueInsertAfter
 4400  00004578          	.align 2
 4401  00004578          	.proc _QueueInsertFirst
 4402  00004578          	.global _QueueInsertFirst
 4403  00004578          	_QueueInsertFirst:
 4404                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 4405  00004578  afbefffc	sw	-4(r29),r30; push fp
 4406  0000457c  001df020	add	r30,r0,r29; fp = sp
 4407  00004580  afbffff8	sw	-8(r29),r31; push ret addr
 4408  00004584  2fbd0010	subui	r29,r29,#16; alloc local storage
 4409  00004588  afa20000	sw	0(r29),r2
 4410  0000458c  afa30004	sw	4(r29),r3
 4411  00004590  8fc30000	lw	r3,(r30)
 4412  00004594  8fc10004	lw	r1,4(r30)
 4413  00004598  ac230008	sw	8(r1),r3
 4414  0000459c  ac230004	sw	4(r1),r3
 4415  000045a0  8c7f0000	lw	r31,(r3)
 4416  000045a4  ac3f0000	sw	(r1),r31
 4417  000045a8  ac610000	sw	(r3),r1
 4418  000045ac  8c220000	lw	r2,(r1)
 4419  000045b0  ac410004	sw	4(r2),r1
 4420  000045b4  8c610008	lw	r1,8(r3)
 4421  000045b8  20210001	addi	r1,r1,#1
 4422  000045bc  ac610008	sw	8(r3),r1
 4423  000045c0  8fa20000	lw	r2,0(r29)
 4424  000045c4  8fa30004	lw	r3,4(r29)
 4425  000045c8  8fdffff8	lw	r31,-8(r30)
 4426  000045cc  001ee820	add	r29,r0,r30
 4427  000045d0  8fdefffc	lw	r30,-4(r30)
 4428  000045d4  4be00000	jr	r31
 4429  000045d8  54000000	nop
 4430  000045dc          	.endproc _QueueInsertFirst
 4431  000045dc          	.align 2
 4432  000045dc          	.proc _QueueInsertLast
 4433  000045dc          	.global _QueueInsertLast
 4434  000045dc          	_QueueInsertLast:
 4435                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 4436  000045dc  afbefffc	sw	-4(r29),r30; push fp
 4437  000045e0  001df020	add	r30,r0,r29; fp = sp
 4438  000045e4  afbffff8	sw	-8(r29),r31; push ret addr
 4439  000045e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 4440  000045ec  afa20000	sw	0(r29),r2
 4441  000045f0  afa30004	sw	4(r29),r3
 4442  000045f4  8fc30000	lw	r3,(r30)
 4443  000045f8  8fc10004	lw	r1,4(r30)
 4444  000045fc  8c620004	lw	r2,4(r3)
 4445  00004600  ac230008	sw	8(r1),r3
 4446  00004604  ac220004	sw	4(r1),r2
 4447  00004608  8c5f0000	lw	r31,(r2)
 4448  0000460c  ac3f0000	sw	(r1),r31
 4449  00004610  ac410000	sw	(r2),r1
 4450  00004614  8c220000	lw	r2,(r1)
 4451  00004618  ac410004	sw	4(r2),r1
 4452  0000461c  8c610008	lw	r1,8(r3)
 4453  00004620  20210001	addi	r1,r1,#1
 4454  00004624  ac610008	sw	8(r3),r1
 4455  00004628  8fa20000	lw	r2,0(r29)
 4456  0000462c  8fa30004	lw	r3,4(r29)
 4457  00004630  8fdffff8	lw	r31,-8(r30)
 4458  00004634  001ee820	add	r29,r0,r30
 4459  00004638  8fdefffc	lw	r30,-4(r30)
 4460  0000463c  4be00000	jr	r31
 4461  00004640  54000000	nop
 4462  00004644          	.endproc _QueueInsertLast
 4463  00004644          	.align 2
 4464  00004644          	.proc _QueueRemove
 4465  00004644          	.global _QueueRemove
 4466  00004644          	_QueueRemove:
 4467                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 4468  00004644  afbefffc	sw	-4(r29),r30; push fp
 4469  00004648  001df020	add	r30,r0,r29; fp = sp
 4470  0000464c  afbffff8	sw	-8(r29),r31; push ret addr
 4471  00004650  2fbd0010	subui	r29,r29,#16; alloc local storage
 4472  00004654  afa20000	sw	0(r29),r2
 4473  00004658  afa30004	sw	4(r29),r3
 4474  0000465c  8fdf0000	lw	r31,(r30)
 4475  00004660  8fe10008	lw	r1,8(r31)
 4476  00004664  8c210008	lw	r1,8(r1)
 4477  00004668  6c210000	sgti	r1,r1,#0
 4478  0000466c  1020002c	beqz	r1,L44_LF5
 4479  00004670  54000000	nop; not filled.
 4480  00004674  8fe10004	lw	r1,4(r31)
 4481  00004678  8fe30000	lw	r3,(r31)
 4482  0000467c  ac230000	sw	(r1),r3
 4483  00004680  8fe10000	lw	r1,(r31)
 4484  00004684  8fe30004	lw	r3,4(r31)
 4485  00004688  ac230004	sw	4(r1),r3
 4486  0000468c  8fe20008	lw	r2,8(r31)
 4487  00004690  8c410008	lw	r1,8(r2)
 4488  00004694  2021ffff	addi	r1,r1,#-1
 4489  00004698  ac410008	sw	8(r2),r1
 4490  0000469c          	L44_LF5:
 4491  0000469c  20030000	addi	r3,r0,#0
 4492  000046a0  afe30000	sw	(r31),r3
 4493  000046a4  8fa20000	lw	r2,0(r29)
 4494  000046a8  8fa30004	lw	r3,4(r29)
 4495  000046ac  8fdffff8	lw	r31,-8(r30)
 4496  000046b0  001ee820	add	r29,r0,r30
 4497  000046b4  8fdefffc	lw	r30,-4(r30)
 4498  000046b8  4be00000	jr	r31
 4499  000046bc  54000000	nop
 4500  000046c0          	.endproc _QueueRemove
 4501  000046c0          	.align 2
 4502  000046c0          	.proc _QueueLength
 4503  000046c0          	.global _QueueLength
 4504  000046c0          	_QueueLength:
 4505                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 4506  000046c0  afbefffc	sw	-4(r29),r30; push fp
 4507  000046c4  001df020	add	r30,r0,r29; fp = sp
 4508  000046c8  afbffff8	sw	-8(r29),r31; push ret addr
 4509  000046cc  2fbd0008	subui	r29,r29,#8; alloc local storage
 4510  000046d0  8fc10000	lw	r1,(r30)
 4511  000046d4  8c210008	lw	r1,8(r1)
 4512  000046d8  8fdffff8	lw	r31,-8(r30)
 4513  000046dc  001ee820	add	r29,r0,r30
 4514  000046e0  8fdefffc	lw	r30,-4(r30)
 4515  000046e4  4be00000	jr	r31
 4516  000046e8  54000000	nop
 4517  000046ec          	.endproc _QueueLength
 4518  000046ec          	.align 2
 4519  000046ec          	.proc _QueueEmpty
 4520  000046ec          	.global _QueueEmpty
 4521  000046ec          	_QueueEmpty:
 4522                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 4523  000046ec  afbefffc	sw	-4(r29),r30; push fp
 4524  000046f0  001df020	add	r30,r0,r29; fp = sp
 4525  000046f4  afbffff8	sw	-8(r29),r31; push ret addr
 4526  000046f8  2fbd0008	subui	r29,r29,#8; alloc local storage
 4527  000046fc  8fc10000	lw	r1,(r30)
 4528  00004700  8c210008	lw	r1,8(r1)
 4529  00004704  60210000	seqi	r1,r1,#0
 4530  00004708  8fdffff8	lw	r31,-8(r30)
 4531  0000470c  001ee820	add	r29,r0,r30
 4532  00004710  8fdefffc	lw	r30,-4(r30)
 4533  00004714  4be00000	jr	r31
 4534  00004718  54000000	nop
 4535  0000471c          	.endproc _QueueEmpty
 4536  0000471c          	.data
 4537  0000f420          	.align 2
 4538  0000f420          	_processQuantum_LF5:
 4539  0000f420  00002710	.word 10000
 4540  0000f424          	.align 2
 4541  0000f424          	LC0_LF5:
 4542  0000f424  456e7465	.ascii "Entering ProcessModuleInit\n\000"
 4542  0000f428  72696e67	
 4542  0000f42c  2050726f	
 4542  0000f430  63657373	
 4542  0000f434  4d6f6475	
 4542  0000f438  6c65496e	
 4542  0000f43c  69740a00	
 4543  0000f440          	.align 2
 4544  0000f440          	LC1_LF5:
 4545  0000f440  496e6974	.ascii "Initializing PCB %d @ 0x%x.\n\000"
 4545  0000f444  69616c69	
 4545  0000f448  7a696e67	
 4545  0000f44c  20504342	
 4545  0000f450  20256420	
 4545  0000f454  40203078	
 4545  0000f458  25782e0a	
 4545  0000f45c  00      	
 4546  0000f45d          	.align 2
 4547  0000f460          	LC2_LF5:
 4548  0000f460  4c656176	.ascii "Leaving ProcessModuleInit\n\000"
 4548  0000f464  696e6720	
 4548  0000f468  50726f63	
 4548  0000f46c  6573734d	
 4548  0000f470  6f64756c	
 4548  0000f474  65496e69	
 4548  0000f478  740a00  	
 4549  0000f47b          	.text
 4550  0000471c          	.align 2
 4551  0000471c          	.proc _ProcessModuleInit
 4552  0000471c          	.global _ProcessModuleInit
 4553  0000471c          	_ProcessModuleInit:
 4554                      ;  Function 'ProcessModuleInit'; 0 bytes of locals, 7 regs to save.
 4555  0000471c  afbefffc	sw	-4(r29),r30; push fp
 4556  00004720  001df020	add	r30,r0,r29; fp = sp
 4557  00004724  afbffff8	sw	-8(r29),r31; push ret addr
 4558  00004728  2fbd0028	subui	r29,r29,#40; alloc local storage
 4559  0000472c  afa20000	sw	0(r29),r2
 4560  00004730  afa30004	sw	4(r29),r3
 4561  00004734  afa40008	sw	8(r29),r4
 4562  00004738  afa5000c	sw	12(r29),r5
 4563  0000473c  afa60010	sw	16(r29),r6
 4564  00004740  afa70014	sw	20(r29),r7
 4565  00004744  afa80018	sw	24(r29),r8
 4566  00004748  23bdfff8	addi	r29,r29,#-8
 4567  0000474c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4568  00004750  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 4569  00004754  afa20000	sw	(r29),r2
 4570  00004758  20080070	addi	r8,r0,#112
 4571  0000475c  afa80004	sw	4(r29),r8
 4572  00004760  0ffff6b4	jal	_dindex
 4573  00004764  54000000	nop; not filled.
 4574  00004768  23bd0008	addi	r29,r29,#8
 4575  0000476c  64210000	snei	r1,r1,#0
 4576  00004770  1420002c	bnez	r1,L53_LF5
 4577  00004774  54000000	nop; not filled.
 4578  00004778  23bdfff8	addi	r29,r29,#-8
 4579  0000477c  afa20000	sw	(r29),r2
 4580  00004780  2008002b	addi	r8,r0,#43
 4581  00004784  afa80004	sw	4(r29),r8
 4582  00004788  0ffff68c	jal	_dindex
 4583  0000478c  54000000	nop; not filled.
 4584  00004790  23bd0008	addi	r29,r29,#8
 4585  00004794  64210000	snei	r1,r1,#0
 4586  00004798  10200020	beqz	r1,L52_LF5
 4587  0000479c  54000000	nop; not filled.
 4588  000047a0          	L53_LF5:
 4589  000047a0  23bdfff8	addi	r29,r29,#-8
 4590  000047a4  3c080000	lhi	r8,((LC0_LF5)>>16)&0xffff
 4591  000047a8  2508f424	addui	r8,r8,(LC0_LF5)&0xffff
 4592  000047ac  afa80000	sw	(r29),r8
 4593  000047b0  0c0059f4	jal	_printf
 4594  000047b4  54000000	nop; not filled.
 4595  000047b8  23bd0008	addi	r29,r29,#8
 4596  000047bc          	L52_LF5:
 4597  000047bc  23bdfff8	addi	r29,r29,#-8
 4598  000047c0  3c020000	lhi	r2,((_freepcbs_LF5)>>16)&0xffff
 4599  000047c4  2442fe14	addui	r2,r2,(_freepcbs_LF5)&0xffff
 4600  000047c8  afa20000	sw	(r29),r2
 4601  000047cc  0c003274	jal	_QueueInit
 4602  000047d0  54000000	nop; not filled.
 4603  000047d4  3c080000	lhi	r8,((_runQueue_LF5)>>16)&0xffff
 4604  000047d8  2508fe20	addui	r8,r8,(_runQueue_LF5)&0xffff
 4605  000047dc  afa80000	sw	(r29),r8
 4606  000047e0  0c003260	jal	_QueueInit
 4607  000047e4  54000000	nop; not filled.
 4608  000047e8  3c080000	lhi	r8,((_waitQueue_LF5)>>16)&0xffff
 4609  000047ec  2508fe2c	addui	r8,r8,(_waitQueue_LF5)&0xffff
 4610  000047f0  afa80000	sw	(r29),r8
 4611  000047f4  0c00324c	jal	_QueueInit
 4612  000047f8  54000000	nop; not filled.
 4613  000047fc  3c080000	lhi	r8,((_zombieQueue_LF5)>>16)&0xffff
 4614  00004800  2508fe38	addui	r8,r8,(_zombieQueue_LF5)&0xffff
 4615  00004804  afa80000	sw	(r29),r8
 4616  00004808  0c003238	jal	_QueueInit
 4617  0000480c  54000000	nop; not filled.
 4618  00004810  20040000	addi	r4,r0,#0
 4619  00004814  23bd0008	addi	r29,r29,#8
 4620  00004818  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 4621  0000481c  24e7fd46	addui	r7,r7,(_debugstr)&0xffff
 4622  00004820  3c010000	lhi	r1,((_pcbs_LF5)>>16)&0xffff
 4623  00004824  2421fe44	addui	r1,r1,(_pcbs_LF5)&0xffff
 4624  00004828  00022820	add	r5,r0,r2
 4625  0000482c  202200a4	addi	r2,r1,#164
 4626  00004830  00011820	add	r3,r0,r1
 4627  00004834  00033020	add	r6,r0,r3
 4628  00004838          	L57_LF5:
 4629  00004838  23bdfff8	addi	r29,r29,#-8
 4630  0000483c  afa70000	sw	(r29),r7
 4631  00004840  20080070	addi	r8,r0,#112
 4632  00004844  afa80004	sw	4(r29),r8
 4633  00004848  0ffff5cc	jal	_dindex
 4634  0000484c  54000000	nop; not filled.
 4635  00004850  23bd0008	addi	r29,r29,#8
 4636  00004854  64210000	snei	r1,r1,#0
 4637  00004858  1420002c	bnez	r1,L59_LF5
 4638  0000485c  54000000	nop; not filled.
 4639  00004860  23bdfff8	addi	r29,r29,#-8
 4640  00004864  afa70000	sw	(r29),r7
 4641  00004868  2008002b	addi	r8,r0,#43
 4642  0000486c  afa80004	sw	4(r29),r8
 4643  00004870  0ffff5a4	jal	_dindex
 4644  00004874  54000000	nop; not filled.
 4645  00004878  23bd0008	addi	r29,r29,#8
 4646  0000487c  64210000	snei	r1,r1,#0
 4647  00004880  10200028	beqz	r1,L58_LF5
 4648  00004884  54000000	nop; not filled.
 4649  00004888          	L59_LF5:
 4650  00004888  23bdfff0	addi	r29,r29,#-16
 4651  0000488c  3c080000	lhi	r8,((LC1_LF5)>>16)&0xffff
 4652  00004890  2508f440	addui	r8,r8,(LC1_LF5)&0xffff
 4653  00004894  afa80000	sw	(r29),r8
 4654  00004898  afa40004	sw	4(r29),r4
 4655  0000489c  afa60008	sw	8(r29),r6
 4656  000048a0  0c005904	jal	_printf
 4657  000048a4  54000000	nop; not filled.
 4658  000048a8  23bd0010	addi	r29,r29,#16
 4659  000048ac          	L58_LF5:
 4660  000048ac  20080001	addi	r8,r0,#1
 4661  000048b0  ac68000c	sw	12(r3),r8
 4662  000048b4  20080000	addi	r8,r0,#0
 4663  000048b8  ac480000	sw	(r2),r8
 4664  000048bc  ac43000c	sw	12(r2),r3
 4665  000048c0  ac450008	sw	8(r2),r5
 4666  000048c4  ac450004	sw	4(r2),r5
 4667  000048c8  8ca80000	lw	r8,(r5)
 4668  000048cc  ac480000	sw	(r2),r8
 4669  000048d0  aca20000	sw	(r5),r2
 4670  000048d4  8c410000	lw	r1,(r2)
 4671  000048d8  ac220004	sw	4(r1),r2
 4672  000048dc  8ca10008	lw	r1,8(r5)
 4673  000048e0  20210001	addi	r1,r1,#1
 4674  000048e4  aca10008	sw	8(r5),r1
 4675  000048e8  204200b4	addi	r2,r2,#180
 4676  000048ec  206300b4	addi	r3,r3,#180
 4677  000048f0  20c600b4	addi	r6,r6,#180
 4678  000048f4  20840001	addi	r4,r4,#1
 4679  000048f8  7081001f	slei	r1,r4,#31
 4680  000048fc  1420ff38	bnez	r1,L57_LF5
 4681  00004900  54000000	nop; not filled.
 4682  00004904  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4683  00004908  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 4684  0000490c  20080000	addi	r8,r0,#0
 4685  00004910  ac280000	sw	(r1),r8
 4686  00004914  23bdfff8	addi	r29,r29,#-8
 4687  00004918  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4688  0000491c  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 4689  00004920  afa20000	sw	(r29),r2
 4690  00004924  20080070	addi	r8,r0,#112
 4691  00004928  afa80004	sw	4(r29),r8
 4692  0000492c  0ffff4e8	jal	_dindex
 4693  00004930  54000000	nop; not filled.
 4694  00004934  23bd0008	addi	r29,r29,#8
 4695  00004938  64210000	snei	r1,r1,#0
 4696  0000493c  1420002c	bnez	r1,L65_LF5
 4697  00004940  54000000	nop; not filled.
 4698  00004944  23bdfff8	addi	r29,r29,#-8
 4699  00004948  afa20000	sw	(r29),r2
 4700  0000494c  2008002b	addi	r8,r0,#43
 4701  00004950  afa80004	sw	4(r29),r8
 4702  00004954  0ffff4c0	jal	_dindex
 4703  00004958  54000000	nop; not filled.
 4704  0000495c  23bd0008	addi	r29,r29,#8
 4705  00004960  64210000	snei	r1,r1,#0
 4706  00004964  10200020	beqz	r1,L64_LF5
 4707  00004968  54000000	nop; not filled.
 4708  0000496c          	L65_LF5:
 4709  0000496c  23bdfff8	addi	r29,r29,#-8
 4710  00004970  3c080000	lhi	r8,((LC2_LF5)>>16)&0xffff
 4711  00004974  2508f460	addui	r8,r8,(LC2_LF5)&0xffff
 4712  00004978  afa80000	sw	(r29),r8
 4713  0000497c  0c005828	jal	_printf
 4714  00004980  54000000	nop; not filled.
 4715  00004984  23bd0008	addi	r29,r29,#8
 4716  00004988          	L64_LF5:
 4717  00004988  8fa20000	lw	r2,0(r29)
 4718  0000498c  8fa30004	lw	r3,4(r29)
 4719  00004990  8fa40008	lw	r4,8(r29)
 4720  00004994  8fa5000c	lw	r5,12(r29)
 4721  00004998  8fa60010	lw	r6,16(r29)
 4722  0000499c  8fa70014	lw	r7,20(r29)
 4723  000049a0  8fa80018	lw	r8,24(r29)
 4724  000049a4  8fdffff8	lw	r31,-8(r30)
 4725  000049a8  001ee820	add	r29,r0,r30
 4726  000049ac  8fdefffc	lw	r30,-4(r30)
 4727  000049b0  4be00000	jr	r31
 4728  000049b4  54000000	nop
 4729  000049b8          	.endproc _ProcessModuleInit
 4730  000049b8          	.align 2
 4731  000049b8          	.proc _ProcessSetStatus
 4732  000049b8          	.global _ProcessSetStatus
 4733  000049b8          	_ProcessSetStatus:
 4734                      ;  Function 'ProcessSetStatus'; 0 bytes of locals, 2 regs to save.
 4735  000049b8  afbefffc	sw	-4(r29),r30; push fp
 4736  000049bc  001df020	add	r30,r0,r29; fp = sp
 4737  000049c0  afbffff8	sw	-8(r29),r31; push ret addr
 4738  000049c4  2fbd0010	subui	r29,r29,#16; alloc local storage
 4739  000049c8  afa20000	sw	0(r29),r2
 4740  000049cc  afa30004	sw	4(r29),r3
 4741  000049d0  8fc30000	lw	r3,(r30)
 4742  000049d4  8fc20004	lw	r2,4(r30)
 4743  000049d8  8c61000c	lw	r1,12(r3)
 4744  000049dc  201fffc0	addi	r31,r0,#-64
 4745  000049e0  003f0824	and	r1,r1,r31
 4746  000049e4  00220825	or	r1,r1,r2
 4747  000049e8  ac61000c	sw	12(r3),r1
 4748  000049ec  8fa20000	lw	r2,0(r29)
 4749  000049f0  8fa30004	lw	r3,4(r29)
 4750  000049f4  8fdffff8	lw	r31,-8(r30)
 4751  000049f8  001ee820	add	r29,r0,r30
 4752  000049fc  8fdefffc	lw	r30,-4(r30)
 4753  00004a00  4be00000	jr	r31
 4754  00004a04  54000000	nop
 4755  00004a08          	.endproc _ProcessSetStatus
 4756  00004a08          	.align 2
 4757  00004a08          	.proc _ProcessFreeResources
 4758  00004a08          	.global _ProcessFreeResources
 4759  00004a08          	_ProcessFreeResources:
 4760                      ;  Function 'ProcessFreeResources'; 0 bytes of locals, 4 regs to save.
 4761  00004a08  afbefffc	sw	-4(r29),r30; push fp
 4762  00004a0c  001df020	add	r30,r0,r29; fp = sp
 4763  00004a10  afbffff8	sw	-8(r29),r31; push ret addr
 4764  00004a14  2fbd0018	subui	r29,r29,#24; alloc local storage
 4765  00004a18  afa20000	sw	0(r29),r2
 4766  00004a1c  afa30004	sw	4(r29),r3
 4767  00004a20  afa40008	sw	8(r29),r4
 4768  00004a24  afa5000c	sw	12(r29),r5
 4769  00004a28  8fc40000	lw	r4,(r30)
 4770  00004a2c  3c030000	lhi	r3,((_freepcbs_LF5)>>16)&0xffff
 4771  00004a30  2463fe14	addui	r3,r3,(_freepcbs_LF5)&0xffff
 4772  00004a34  208200a4	addi	r2,r4,#164
 4773  00004a38  8c610004	lw	r1,4(r3)
 4774  00004a3c  ac8300ac	sw	172(r4),r3
 4775  00004a40  ac8100a8	sw	168(r4),r1
 4776  00004a44  8c250000	lw	r5,(r1)
 4777  00004a48  ac450000	sw	(r2),r5
 4778  00004a4c  ac220000	sw	(r1),r2
 4779  00004a50  8c410000	lw	r1,(r2)
 4780  00004a54  ac220004	sw	4(r1),r2
 4781  00004a58  8c610008	lw	r1,8(r3)
 4782  00004a5c  20210001	addi	r1,r1,#1
 4783  00004a60  ac610008	sw	8(r3),r1
 4784  00004a64  20020000	addi	r2,r0,#0
 4785  00004a68  8c8100a0	lw	r1,160(r4)
 4786  00004a6c  0041082a	slt	r1,r2,r1
 4787  00004a70  10200038	beqz	r1,L83_LF5
 4788  00004a74  54000000	nop; not filled.
 4789  00004a78  00041820	add	r3,r0,r4
 4790  00004a7c          	L85_LF5:
 4791  00004a7c  23bdfff8	addi	r29,r29,#-8
 4792  00004a80  8c650060	lw	r5,96(r3)
 4793  00004a84  afa50000	sw	(r29),r5
 4794  00004a88  0fffec34	jal	_MemoryFreePte
 4795  00004a8c  54000000	nop; not filled.
 4796  00004a90  23bd0008	addi	r29,r29,#8
 4797  00004a94  20630004	addi	r3,r3,#4
 4798  00004a98  20420001	addi	r2,r2,#1
 4799  00004a9c  8c8100a0	lw	r1,160(r4)
 4800  00004aa0  0041082a	slt	r1,r2,r1
 4801  00004aa4  1420ffd4	bnez	r1,L85_LF5
 4802  00004aa8  54000000	nop; not filled.
 4803  00004aac          	L83_LF5:
 4804  00004aac  23bdfff8	addi	r29,r29,#-8
 4805  00004ab0  94810008	lhu	r1,8(r4)
 4806  00004ab4  afa10000	sw	(r29),r1
 4807  00004ab8  0fffe738	jal	_MemoryFreePage
 4808  00004abc  54000000	nop; not filled.
 4809  00004ac0  23bd0008	addi	r29,r29,#8
 4810  00004ac4  8c81000c	lw	r1,12(r4)
 4811  00004ac8  2005ffc0	addi	r5,r0,#-64
 4812  00004acc  00250824	and	r1,r1,r5
 4813  00004ad0  34210001	ori	r1,r1,#1
 4814  00004ad4  ac81000c	sw	12(r4),r1
 4815  00004ad8  8fa20000	lw	r2,0(r29)
 4816  00004adc  8fa30004	lw	r3,4(r29)
 4817  00004ae0  8fa40008	lw	r4,8(r29)
 4818  00004ae4  8fa5000c	lw	r5,12(r29)
 4819  00004ae8  8fdffff8	lw	r31,-8(r30)
 4820  00004aec  001ee820	add	r29,r0,r30
 4821  00004af0  8fdefffc	lw	r30,-4(r30)
 4822  00004af4  4be00000	jr	r31
 4823  00004af8  54000000	nop
 4824  00004afc          	.endproc _ProcessFreeResources
 4825  00004afc          	.align 2
 4826  00004afc          	.proc _ProcessSetResult
 4827  00004afc          	.global _ProcessSetResult
 4828  00004afc          	_ProcessSetResult:
 4829                      ;  Function 'ProcessSetResult'; 0 bytes of locals, 0 regs to save.
 4830  00004afc  afbefffc	sw	-4(r29),r30; push fp
 4831  00004b00  001df020	add	r30,r0,r29; fp = sp
 4832  00004b04  afbffff8	sw	-8(r29),r31; push ret addr
 4833  00004b08  2fbd0008	subui	r29,r29,#8; alloc local storage
 4834  00004b0c  8fc10000	lw	r1,(r30)
 4835  00004b10  8c210000	lw	r1,(r1)
 4836  00004b14  8fdf0004	lw	r31,4(r30)
 4837  00004b18  ac3f002c	sw	44(r1),r31
 4838  00004b1c  8fdffff8	lw	r31,-8(r30)
 4839  00004b20  001ee820	add	r29,r0,r30
 4840  00004b24  8fdefffc	lw	r30,-4(r30)
 4841  00004b28  4be00000	jr	r31
 4842  00004b2c  54000000	nop
 4843  00004b30          	.endproc _ProcessSetResult
 4844  00004b30          	.data
 4845  0000f47b          	.align 2
 4846  0000f47c          	LC3_LF5:
 4847  0000f47c  4e6f7720	.ascii "Now entering ProcessSchedule (cur=0x%x, %d ready)\n\000"
 4847  0000f480  656e7465	
 4847  0000f484  72696e67	
 4847  0000f488  2050726f	
 4847  0000f48c  63657373	
 4847  0000f490  53636865	
 4847  0000f494  64756c65	
 4847  0000f498  20286375	
 4847  0000f49c  723d3078	
 4847  0000f4a0  25782c20	
 4847  0000f4a4  25642072	
 4847  0000f4a8  65616479	
 4847  0000f4ac  290a00  	
 4848  0000f4af          	.align 2
 4849  0000f4b0          	LC4_LF5:
 4850  0000f4b0  4e6f2072	.ascii "No runnable processes - exiting!\n\000"
 4850  0000f4b4  756e6e61	
 4850  0000f4b8  626c6520	
 4850  0000f4bc  70726f63	
 4850  0000f4c0  65737365	
 4850  0000f4c4  73202d20	
 4850  0000f4c8  65786974	
 4850  0000f4cc  696e6721	
 4850  0000f4d0  0a00    	
 4851  0000f4d2          	.align 2
 4852  0000f4d4          	LC5_LF5:
 4853  0000f4d4  41626f75	.ascii "About to switch to PCB 0x%x,flags=0x%x @ 0x%x\n\000"
 4853  0000f4d8  7420746f	
 4853  0000f4dc  20737769	
 4853  0000f4e0  74636820	
 4853  0000f4e4  746f2050	
 4853  0000f4e8  43422030	
 4853  0000f4ec  7825782c	
 4853  0000f4f0  666c6167	
 4853  0000f4f4  733d3078	
 4853  0000f4f8  25782040	
 4853  0000f4fc  20307825	
 4853  0000f500  780a00  	
 4854  0000f503          	.align 2
 4855  0000f504          	LC6_LF5:
 4856  0000f504  46726565	.ascii "Freeing zombie PCB 0x%x.\n\000"
 4856  0000f508  696e6720	
 4856  0000f50c  7a6f6d62	
 4856  0000f510  69652050	
 4856  0000f514  43422030	
 4856  0000f518  7825782e	
 4856  0000f51c  0a00    	
 4857  0000f51e          	.align 2
 4858  0000f520          	LC7_LF5:
 4859  0000f520  4c656176	.ascii "Leaving ProcessSchedule (cur=0x%x)\n\000"
 4859  0000f524  696e6720	
 4859  0000f528  50726f63	
 4859  0000f52c  65737353	
 4859  0000f530  63686564	
 4859  0000f534  756c6520	
 4859  0000f538  28637572	
 4859  0000f53c  3d307825	
 4859  0000f540  78290a00	
 4860  0000f544          	.text
 4861  00004b30          	.align 2
 4862  00004b30          	.proc _ProcessSchedule
 4863  00004b30          	.global _ProcessSchedule
 4864  00004b30          	_ProcessSchedule:
 4865                      ;  Function 'ProcessSchedule'; 0 bytes of locals, 7 regs to save.
 4866  00004b30  afbefffc	sw	-4(r29),r30; push fp
 4867  00004b34  001df020	add	r30,r0,r29; fp = sp
 4868  00004b38  afbffff8	sw	-8(r29),r31; push ret addr
 4869  00004b3c  2fbd0028	subui	r29,r29,#40; alloc local storage
 4870  00004b40  afa20000	sw	0(r29),r2
 4871  00004b44  afa30004	sw	4(r29),r3
 4872  00004b48  afa40008	sw	8(r29),r4
 4873  00004b4c  afa5000c	sw	12(r29),r5
 4874  00004b50  afa60010	sw	16(r29),r6
 4875  00004b54  afa70014	sw	20(r29),r7
 4876  00004b58  afa80018	sw	24(r29),r8
 4877  00004b5c  23bdfff8	addi	r29,r29,#-8
 4878  00004b60  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4879  00004b64  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 4880  00004b68  afa20000	sw	(r29),r2
 4881  00004b6c  20080070	addi	r8,r0,#112
 4882  00004b70  afa80004	sw	4(r29),r8
 4883  00004b74  0ffff2a0	jal	_dindex
 4884  00004b78  54000000	nop; not filled.
 4885  00004b7c  23bd0008	addi	r29,r29,#8
 4886  00004b80  64210000	snei	r1,r1,#0
 4887  00004b84  1420002c	bnez	r1,L92_LF5
 4888  00004b88  54000000	nop; not filled.
 4889  00004b8c  23bdfff8	addi	r29,r29,#-8
 4890  00004b90  afa20000	sw	(r29),r2
 4891  00004b94  2008002b	addi	r8,r0,#43
 4892  00004b98  afa80004	sw	4(r29),r8
 4893  00004b9c  0ffff278	jal	_dindex
 4894  00004ba0  54000000	nop; not filled.
 4895  00004ba4  23bd0008	addi	r29,r29,#8
 4896  00004ba8  64210000	snei	r1,r1,#0
 4897  00004bac  10200040	beqz	r1,L91_LF5
 4898  00004bb0  54000000	nop; not filled.
 4899  00004bb4          	L92_LF5:
 4900  00004bb4  3c010000	lhi	r1,((_runQueue_LF5)>>16)&0xffff
 4901  00004bb8  2421fe20	addui	r1,r1,(_runQueue_LF5)&0xffff
 4902  00004bbc  8c220008	lw	r2,8(r1)
 4903  00004bc0  23bdfff0	addi	r29,r29,#-16
 4904  00004bc4  3c080000	lhi	r8,((LC3_LF5)>>16)&0xffff
 4905  00004bc8  2508f47c	addui	r8,r8,(LC3_LF5)&0xffff
 4906  00004bcc  afa80000	sw	(r29),r8
 4907  00004bd0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4908  00004bd4  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 4909  00004bd8  8c210000	lw	r1,(r1)
 4910  00004bdc  afa10004	sw	4(r29),r1
 4911  00004be0  afa20008	sw	8(r29),r2
 4912  00004be4  0c0055c0	jal	_printf
 4913  00004be8  54000000	nop; not filled.
 4914  00004bec  23bd0010	addi	r29,r29,#16
 4915  00004bf0          	L91_LF5:
 4916  00004bf0  3c050000	lhi	r5,((_runQueue_LF5)>>16)&0xffff
 4917  00004bf4  24a5fe20	addui	r5,r5,(_runQueue_LF5)&0xffff
 4918  00004bf8  8ca10008	lw	r1,8(r5)
 4919  00004bfc  60210000	seqi	r1,r1,#0
 4920  00004c00  10200028	beqz	r1,L94_LF5
 4921  00004c04  54000000	nop; not filled.
 4922  00004c08  23bdfff8	addi	r29,r29,#-8
 4923  00004c0c  3c080000	lhi	r8,((LC4_LF5)>>16)&0xffff
 4924  00004c10  2508f4b0	addui	r8,r8,(LC4_LF5)&0xffff
 4925  00004c14  afa80000	sw	(r29),r8
 4926  00004c18  0c00558c	jal	_printf
 4927  00004c1c  54000000	nop; not filled.
 4928  00004c20  0c00556c	jal	_exitsim
 4929  00004c24  54000000	nop; not filled.
 4930  00004c28  23bd0008	addi	r29,r29,#8
 4931  00004c2c          	L94_LF5:
 4932  00004c2c  8ca10000	lw	r1,(r5)
 4933  00004c30  8c24000c	lw	r4,12(r1)
 4934  00004c34  208300a4	addi	r3,r4,#164
 4935  00004c38  8c8100ac	lw	r1,172(r4)
 4936  00004c3c  8c210008	lw	r1,8(r1)
 4937  00004c40  6c210000	sgti	r1,r1,#0
 4938  00004c44  1020002c	beqz	r1,L99_LF5
 4939  00004c48  54000000	nop; not filled.
 4940  00004c4c  8c8100a8	lw	r1,168(r4)
 4941  00004c50  8c680000	lw	r8,(r3)
 4942  00004c54  ac280000	sw	(r1),r8
 4943  00004c58  8c610000	lw	r1,(r3)
 4944  00004c5c  8c8800a8	lw	r8,168(r4)
 4945  00004c60  ac280004	sw	4(r1),r8
 4946  00004c64  8c8200ac	lw	r2,172(r4)
 4947  00004c68  8c410008	lw	r1,8(r2)
 4948  00004c6c  2021ffff	addi	r1,r1,#-1
 4949  00004c70  ac410008	sw	8(r2),r1
 4950  00004c74          	L99_LF5:
 4951  00004c74  20080000	addi	r8,r0,#0
 4952  00004c78  ac680000	sw	(r3),r8
 4953  00004c7c  8ca10004	lw	r1,4(r5)
 4954  00004c80  ac8500ac	sw	172(r4),r5
 4955  00004c84  ac8100a8	sw	168(r4),r1
 4956  00004c88  8c280000	lw	r8,(r1)
 4957  00004c8c  ac680000	sw	(r3),r8
 4958  00004c90  ac230000	sw	(r1),r3
 4959  00004c94  8c610000	lw	r1,(r3)
 4960  00004c98  ac230004	sw	4(r1),r3
 4961  00004c9c  8ca10008	lw	r1,8(r5)
 4962  00004ca0  20210001	addi	r1,r1,#1
 4963  00004ca4  aca10008	sw	8(r5),r1
 4964  00004ca8  8ca10000	lw	r1,(r5)
 4965  00004cac  8c24000c	lw	r4,12(r1)
 4966  00004cb0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4967  00004cb4  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 4968  00004cb8  ac240000	sw	(r1),r4
 4969  00004cbc  23bdfff8	addi	r29,r29,#-8
 4970  00004cc0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4971  00004cc4  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 4972  00004cc8  afa20000	sw	(r29),r2
 4973  00004ccc  20080070	addi	r8,r0,#112
 4974  00004cd0  afa80004	sw	4(r29),r8
 4975  00004cd4  0ffff140	jal	_dindex
 4976  00004cd8  54000000	nop; not filled.
 4977  00004cdc  23bd0008	addi	r29,r29,#8
 4978  00004ce0  64210000	snei	r1,r1,#0
 4979  00004ce4  1420002c	bnez	r1,L105_LF5
 4980  00004ce8  54000000	nop; not filled.
 4981  00004cec  23bdfff8	addi	r29,r29,#-8
 4982  00004cf0  afa20000	sw	(r29),r2
 4983  00004cf4  2008002b	addi	r8,r0,#43
 4984  00004cf8  afa80004	sw	4(r29),r8
 4985  00004cfc  0ffff118	jal	_dindex
 4986  00004d00  54000000	nop; not filled.
 4987  00004d04  23bd0008	addi	r29,r29,#8
 4988  00004d08  64210000	snei	r1,r1,#0
 4989  00004d0c  10200038	beqz	r1,L104_LF5
 4990  00004d10  54000000	nop; not filled.
 4991  00004d14          	L105_LF5:
 4992  00004d14  23bdfff0	addi	r29,r29,#-16
 4993  00004d18  3c080000	lhi	r8,((LC5_LF5)>>16)&0xffff
 4994  00004d1c  2508f4d4	addui	r8,r8,(LC5_LF5)&0xffff
 4995  00004d20  afa80000	sw	(r29),r8
 4996  00004d24  afa40004	sw	4(r29),r4
 4997  00004d28  8c88000c	lw	r8,12(r4)
 4998  00004d2c  afa80008	sw	8(r29),r8
 4999  00004d30  8c810004	lw	r1,4(r4)
 5000  00004d34  8c210128	lw	r1,296(r1)
 5001  00004d38  afa1000c	sw	12(r29),r1
 5002  00004d3c  0c005468	jal	_printf
 5003  00004d40  54000000	nop; not filled.
 5004  00004d44  23bd0010	addi	r29,r29,#16
 5005  00004d48          	L104_LF5:
 5006  00004d48  3c070000	lhi	r7,((_zombieQueue_LF5)>>16)&0xffff
 5007  00004d4c  24e7fe38	addui	r7,r7,(_zombieQueue_LF5)&0xffff
 5008  00004d50  3c060000	lhi	r6,((_debugstr)>>16)&0xffff
 5009  00004d54  24c6fd46	addui	r6,r6,(_debugstr)&0xffff
 5010  00004d58  3c050000	lhi	r5,((_freepcbs_LF5)>>16)&0xffff
 5011  00004d5c  24a5fe14	addui	r5,r5,(_freepcbs_LF5)&0xffff
 5012  00004d60          	L106_LF5:
 5013  00004d60  8ce10008	lw	r1,8(r7)
 5014  00004d64  60210000	seqi	r1,r1,#0
 5015  00004d68  1420016c	bnez	r1,L107_LF5
 5016  00004d6c  54000000	nop; not filled.
 5017  00004d70  8ce10000	lw	r1,(r7)
 5018  00004d74  8c24000c	lw	r4,12(r1)
 5019  00004d78  23bdfff8	addi	r29,r29,#-8
 5020  00004d7c  afa60000	sw	(r29),r6
 5021  00004d80  20080070	addi	r8,r0,#112
 5022  00004d84  afa80004	sw	4(r29),r8
 5023  00004d88  0ffff08c	jal	_dindex
 5024  00004d8c  54000000	nop; not filled.
 5025  00004d90  23bd0008	addi	r29,r29,#8
 5026  00004d94  64210000	snei	r1,r1,#0
 5027  00004d98  1420002c	bnez	r1,L113_LF5
 5028  00004d9c  54000000	nop; not filled.
 5029  00004da0  23bdfff8	addi	r29,r29,#-8
 5030  00004da4  afa60000	sw	(r29),r6
 5031  00004da8  2008002b	addi	r8,r0,#43
 5032  00004dac  afa80004	sw	4(r29),r8
 5033  00004db0  0ffff064	jal	_dindex
 5034  00004db4  54000000	nop; not filled.
 5035  00004db8  23bd0008	addi	r29,r29,#8
 5036  00004dbc  64210000	snei	r1,r1,#0
 5037  00004dc0  10200024	beqz	r1,L112_LF5
 5038  00004dc4  54000000	nop; not filled.
 5039  00004dc8          	L113_LF5:
 5040  00004dc8  23bdfff8	addi	r29,r29,#-8
 5041  00004dcc  3c080000	lhi	r8,((LC6_LF5)>>16)&0xffff
 5042  00004dd0  2508f504	addui	r8,r8,(LC6_LF5)&0xffff
 5043  00004dd4  afa80000	sw	(r29),r8
 5044  00004dd8  afa40004	sw	4(r29),r4
 5045  00004ddc  0c0053c8	jal	_printf
 5046  00004de0  54000000	nop; not filled.
 5047  00004de4  23bd0008	addi	r29,r29,#8
 5048  00004de8          	L112_LF5:
 5049  00004de8  209f00a4	addi	r31,r4,#164
 5050  00004dec  8c8100ac	lw	r1,172(r4)
 5051  00004df0  8c210008	lw	r1,8(r1)
 5052  00004df4  6c210000	sgti	r1,r1,#0
 5053  00004df8  1020002c	beqz	r1,L115_LF5
 5054  00004dfc  54000000	nop; not filled.
 5055  00004e00  8c8100a8	lw	r1,168(r4)
 5056  00004e04  8fe80000	lw	r8,(r31)
 5057  00004e08  ac280000	sw	(r1),r8
 5058  00004e0c  8fe10000	lw	r1,(r31)
 5059  00004e10  8c8800a8	lw	r8,168(r4)
 5060  00004e14  ac280004	sw	4(r1),r8
 5061  00004e18  8c8200ac	lw	r2,172(r4)
 5062  00004e1c  8c410008	lw	r1,8(r2)
 5063  00004e20  2021ffff	addi	r1,r1,#-1
 5064  00004e24  ac410008	sw	8(r2),r1
 5065  00004e28          	L115_LF5:
 5066  00004e28  20080000	addi	r8,r0,#0
 5067  00004e2c  afe80000	sw	(r31),r8
 5068  00004e30  8ca10004	lw	r1,4(r5)
 5069  00004e34  ac8500ac	sw	172(r4),r5
 5070  00004e38  ac8100a8	sw	168(r4),r1
 5071  00004e3c  8c280000	lw	r8,(r1)
 5072  00004e40  afe80000	sw	(r31),r8
 5073  00004e44  ac3f0000	sw	(r1),r31
 5074  00004e48  8fe10000	lw	r1,(r31)
 5075  00004e4c  ac3f0004	sw	4(r1),r31
 5076  00004e50  8ca10008	lw	r1,8(r5)
 5077  00004e54  20210001	addi	r1,r1,#1
 5078  00004e58  aca10008	sw	8(r5),r1
 5079  00004e5c  20030000	addi	r3,r0,#0
 5080  00004e60  8c8100a0	lw	r1,160(r4)
 5081  00004e64  0061082a	slt	r1,r3,r1
 5082  00004e68  10200038	beqz	r1,L121_LF5
 5083  00004e6c  54000000	nop; not filled.
 5084  00004e70  00041020	add	r2,r0,r4
 5085  00004e74          	L123_LF5:
 5086  00004e74  23bdfff8	addi	r29,r29,#-8
 5087  00004e78  8c480060	lw	r8,96(r2)
 5088  00004e7c  afa80000	sw	(r29),r8
 5089  00004e80  0fffe83c	jal	_MemoryFreePte
 5090  00004e84  54000000	nop; not filled.
 5091  00004e88  23bd0008	addi	r29,r29,#8
 5092  00004e8c  20420004	addi	r2,r2,#4
 5093  00004e90  20630001	addi	r3,r3,#1
 5094  00004e94  8c8100a0	lw	r1,160(r4)
 5095  00004e98  0061082a	slt	r1,r3,r1
 5096  00004e9c  1420ffd4	bnez	r1,L123_LF5
 5097  00004ea0  54000000	nop; not filled.
 5098  00004ea4          	L121_LF5:
 5099  00004ea4  23bdfff8	addi	r29,r29,#-8
 5100  00004ea8  94810008	lhu	r1,8(r4)
 5101  00004eac  afa10000	sw	(r29),r1
 5102  00004eb0  0fffe340	jal	_MemoryFreePage
 5103  00004eb4  54000000	nop; not filled.
 5104  00004eb8  23bd0008	addi	r29,r29,#8
 5105  00004ebc  8c81000c	lw	r1,12(r4)
 5106  00004ec0  2008ffc0	addi	r8,r0,#-64
 5107  00004ec4  00280824	and	r1,r1,r8
 5108  00004ec8  34210001	ori	r1,r1,#1
 5109  00004ecc  ac81000c	sw	12(r4),r1
 5110  00004ed0  0bfffe8c	j	L106_LF5
 5111  00004ed4  54000000	nop; not filled.
 5112  00004ed8          	L107_LF5:
 5113  00004ed8  23bdfff8	addi	r29,r29,#-8
 5114  00004edc  3c010000	lhi	r1,((_processQuantum_LF5)>>16)&0xffff
 5115  00004ee0  2421f420	addui	r1,r1,(_processQuantum_LF5)&0xffff
 5116  00004ee4  8c210000	lw	r1,(r1)
 5117  00004ee8  afa10000	sw	(r29),r1
 5118  00004eec  0c003c2c	jal	_TimerSet
 5119  00004ef0  54000000	nop; not filled.
 5120  00004ef4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5121  00004ef8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5122  00004efc  afa20000	sw	(r29),r2
 5123  00004f00  20080070	addi	r8,r0,#112
 5124  00004f04  afa80004	sw	4(r29),r8
 5125  00004f08  0fffef0c	jal	_dindex
 5126  00004f0c  54000000	nop; not filled.
 5127  00004f10  23bd0008	addi	r29,r29,#8
 5128  00004f14  64210000	snei	r1,r1,#0
 5129  00004f18  1420002c	bnez	r1,L127_LF5
 5130  00004f1c  54000000	nop; not filled.
 5131  00004f20  23bdfff8	addi	r29,r29,#-8
 5132  00004f24  afa20000	sw	(r29),r2
 5133  00004f28  2008002b	addi	r8,r0,#43
 5134  00004f2c  afa80004	sw	4(r29),r8
 5135  00004f30  0fffeee4	jal	_dindex
 5136  00004f34  54000000	nop; not filled.
 5137  00004f38  23bd0008	addi	r29,r29,#8
 5138  00004f3c  64210000	snei	r1,r1,#0
 5139  00004f40  10200030	beqz	r1,L126_LF5
 5140  00004f44  54000000	nop; not filled.
 5141  00004f48          	L127_LF5:
 5142  00004f48  23bdfff8	addi	r29,r29,#-8
 5143  00004f4c  3c080000	lhi	r8,((LC7_LF5)>>16)&0xffff
 5144  00004f50  2508f520	addui	r8,r8,(LC7_LF5)&0xffff
 5145  00004f54  afa80000	sw	(r29),r8
 5146  00004f58  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 5147  00004f5c  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 5148  00004f60  8c210000	lw	r1,(r1)
 5149  00004f64  afa10004	sw	4(r29),r1
 5150  00004f68  0c00523c	jal	_printf
 5151  00004f6c  54000000	nop; not filled.
 5152  00004f70  23bd0008	addi	r29,r29,#8
 5153  00004f74          	L126_LF5:
 5154  00004f74  8fa20000	lw	r2,0(r29)
 5155  00004f78  8fa30004	lw	r3,4(r29)
 5156  00004f7c  8fa40008	lw	r4,8(r29)
 5157  00004f80  8fa5000c	lw	r5,12(r29)
 5158  00004f84  8fa60010	lw	r6,16(r29)
 5159  00004f88  8fa70014	lw	r7,20(r29)
 5160  00004f8c  8fa80018	lw	r8,24(r29)
 5161  00004f90  8fdffff8	lw	r31,-8(r30)
 5162  00004f94  001ee820	add	r29,r0,r30
 5163  00004f98  8fdefffc	lw	r30,-4(r30)
 5164  00004f9c  4be00000	jr	r31
 5165  00004fa0  54000000	nop
 5166  00004fa4          	.endproc _ProcessSchedule
 5167  00004fa4          	.data
 5168  0000f544          	.align 2
 5169  0000f544          	LC8_LF5:
 5170  0000f544  53757370	.ascii "Suspending PCB 0x%x (%s).\n\000"
 5170  0000f548  656e6469	
 5170  0000f54c  6e672050	
 5170  0000f550  43422030	
 5170  0000f554  78257820	
 5170  0000f558  28257329	
 5170  0000f55c  2e0a00  	
 5171  0000f55f          	.align 2
 5172  0000f560          	LC9_LF5:
 5173  0000f560  25733a20	.ascii "%s: %s\n\000"
 5173  0000f564  25730a00	
 5174  0000f568          	.align 2
 5175  0000f568          	LC10_LF5:
 5176  0000f568  50726f63	.ascii "ProcessSuspend\000"
 5176  0000f56c  65737353	
 5176  0000f570  75737065	
 5176  0000f574  6e6400  	
 5177  0000f577          	.align 2
 5178  0000f578          	LC11_LF5:
 5179  0000f578  54727969	.ascii "Trying to suspend a non-running process!\n\000"
 5179  0000f57c  6e672074	
 5179  0000f580  6f207375	
 5179  0000f584  7370656e	
 5179  0000f588  64206120	
 5179  0000f58c  6e6f6e2d	
 5179  0000f590  72756e6e	
 5179  0000f594  696e6720	
 5179  0000f598  70726f63	
 5179  0000f59c  65737321	
 5179  0000f5a0  0a00    	
 5180  0000f5a2          	.text
 5181  00004fa4          	.align 2
 5182  00004fa4          	.proc _ProcessSuspend
 5183  00004fa4          	.global _ProcessSuspend
 5184  00004fa4          	_ProcessSuspend:
 5185                      ;  Function 'ProcessSuspend'; 0 bytes of locals, 3 regs to save.
 5186  00004fa4  afbefffc	sw	-4(r29),r30; push fp
 5187  00004fa8  001df020	add	r30,r0,r29; fp = sp
 5188  00004fac  afbffff8	sw	-8(r29),r31; push ret addr
 5189  00004fb0  2fbd0018	subui	r29,r29,#24; alloc local storage
 5190  00004fb4  afa20000	sw	0(r29),r2
 5191  00004fb8  afa30004	sw	4(r29),r3
 5192  00004fbc  afa40008	sw	8(r29),r4
 5193  00004fc0  8fc30000	lw	r3,(r30)
 5194  00004fc4  23bdfff8	addi	r29,r29,#-8
 5195  00004fc8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5196  00004fcc  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5197  00004fd0  afa20000	sw	(r29),r2
 5198  00004fd4  20040070	addi	r4,r0,#112
 5199  00004fd8  afa40004	sw	4(r29),r4
 5200  00004fdc  0fffee38	jal	_dindex
 5201  00004fe0  54000000	nop; not filled.
 5202  00004fe4  23bd0008	addi	r29,r29,#8
 5203  00004fe8  64210000	snei	r1,r1,#0
 5204  00004fec  1420002c	bnez	r1,L130_LF5
 5205  00004ff0  54000000	nop; not filled.
 5206  00004ff4  23bdfff8	addi	r29,r29,#-8
 5207  00004ff8  afa20000	sw	(r29),r2
 5208  00004ffc  2004002b	addi	r4,r0,#43
 5209  00005000  afa40004	sw	4(r29),r4
 5210  00005004  0fffee10	jal	_dindex
 5211  00005008  54000000	nop; not filled.
 5212  0000500c  23bd0008	addi	r29,r29,#8
 5213  00005010  64210000	snei	r1,r1,#0
 5214  00005014  1020002c	beqz	r1,L129_LF5
 5215  00005018  54000000	nop; not filled.
 5216  0000501c          	L130_LF5:
 5217  0000501c  23bdfff0	addi	r29,r29,#-16
 5218  00005020  3c040000	lhi	r4,((LC8_LF5)>>16)&0xffff
 5219  00005024  2484f544	addui	r4,r4,(LC8_LF5)&0xffff
 5220  00005028  afa40000	sw	(r29),r4
 5221  0000502c  afa30004	sw	4(r29),r3
 5222  00005030  20610010	addi	r1,r3,#16
 5223  00005034  afa10008	sw	8(r29),r1
 5224  00005038  0c00516c	jal	_printf
 5225  0000503c  54000000	nop; not filled.
 5226  00005040  23bd0010	addi	r29,r29,#16
 5227  00005044          	L129_LF5:
 5228  00005044  8064000f	lb	r4,15(r3)
 5229  00005048  58810001	srli	r1,r4,#0x1
 5230  0000504c  30210001	andi	r1,r1,#1
 5231  00005050  14200038	bnez	r1,L132_LF5
 5232  00005054  54000000	nop; not filled.
 5233  00005058  23bdfff0	addi	r29,r29,#-16
 5234  0000505c  3c040000	lhi	r4,((LC9_LF5)>>16)&0xffff
 5235  00005060  2484f560	addui	r4,r4,(LC9_LF5)&0xffff
 5236  00005064  afa40000	sw	(r29),r4
 5237  00005068  3c010000	lhi	r1,((LC10_LF5)>>16)&0xffff
 5238  0000506c  2421f568	addui	r1,r1,(LC10_LF5)&0xffff
 5239  00005070  afa10004	sw	4(r29),r1
 5240  00005074  3c040000	lhi	r4,((LC11_LF5)>>16)&0xffff
 5241  00005078  2484f578	addui	r4,r4,(LC11_LF5)&0xffff
 5242  0000507c  afa40008	sw	8(r29),r4
 5243  00005080  0c005124	jal	_printf
 5244  00005084  54000000	nop; not filled.
 5245  00005088  23bd0010	addi	r29,r29,#16
 5246  0000508c          	L132_LF5:
 5247  0000508c  8c61000c	lw	r1,12(r3)
 5248  00005090  2004ffc0	addi	r4,r0,#-64
 5249  00005094  00240824	and	r1,r1,r4
 5250  00005098  34210004	ori	r1,r1,#4
 5251  0000509c  ac61000c	sw	12(r3),r1
 5252  000050a0  207f00a4	addi	r31,r3,#164
 5253  000050a4  8c6100ac	lw	r1,172(r3)
 5254  000050a8  8c210008	lw	r1,8(r1)
 5255  000050ac  6c210000	sgti	r1,r1,#0
 5256  000050b0  1020002c	beqz	r1,L135_LF5
 5257  000050b4  54000000	nop; not filled.
 5258  000050b8  8c6100a8	lw	r1,168(r3)
 5259  000050bc  8fe40000	lw	r4,(r31)
 5260  000050c0  ac240000	sw	(r1),r4
 5261  000050c4  8fe10000	lw	r1,(r31)
 5262  000050c8  8c6400a8	lw	r4,168(r3)
 5263  000050cc  ac240004	sw	4(r1),r4
 5264  000050d0  8c6200ac	lw	r2,172(r3)
 5265  000050d4  8c410008	lw	r1,8(r2)
 5266  000050d8  2021ffff	addi	r1,r1,#-1
 5267  000050dc  ac410008	sw	8(r2),r1
 5268  000050e0          	L135_LF5:
 5269  000050e0  20040000	addi	r4,r0,#0
 5270  000050e4  afe40000	sw	(r31),r4
 5271  000050e8  3c020000	lhi	r2,((_waitQueue_LF5)>>16)&0xffff
 5272  000050ec  2442fe2c	addui	r2,r2,(_waitQueue_LF5)&0xffff
 5273  000050f0  8c410004	lw	r1,4(r2)
 5274  000050f4  ac6200ac	sw	172(r3),r2
 5275  000050f8  ac6100a8	sw	168(r3),r1
 5276  000050fc  8c240000	lw	r4,(r1)
 5277  00005100  afe40000	sw	(r31),r4
 5278  00005104  ac3f0000	sw	(r1),r31
 5279  00005108  8fe10000	lw	r1,(r31)
 5280  0000510c  ac3f0004	sw	4(r1),r31
 5281  00005110  8c410008	lw	r1,8(r2)
 5282  00005114  20210001	addi	r1,r1,#1
 5283  00005118  ac410008	sw	8(r2),r1
 5284  0000511c  8fa20000	lw	r2,0(r29)
 5285  00005120  8fa30004	lw	r3,4(r29)
 5286  00005124  8fa40008	lw	r4,8(r29)
 5287  00005128  8fdffff8	lw	r31,-8(r30)
 5288  0000512c  001ee820	add	r29,r0,r30
 5289  00005130  8fdefffc	lw	r30,-4(r30)
 5290  00005134  4be00000	jr	r31
 5291  00005138  54000000	nop
 5292  0000513c          	.endproc _ProcessSuspend
 5293  0000513c          	.data
 5294  0000f5a2          	.align 2
 5295  0000f5a4          	LC12_LF5:
 5296  0000f5a4  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 5296  0000f5a8  6e672075	
 5296  0000f5ac  70205043	
 5296  0000f5b0  42203078	
 5296  0000f5b4  25782e0a	
 5296  0000f5b8  00      	
 5297  0000f5b9          	.align 2
 5298  0000f5bc          	LC13_LF5:
 5299  0000f5bc  50726f63	.ascii "ProcessWakeup\000"
 5299  0000f5c0  65737357	
 5299  0000f5c4  616b6575	
 5299  0000f5c8  7000    	
 5300  0000f5ca          	.align 2
 5301  0000f5cc          	LC14_LF5:
 5302  0000f5cc  54727969	.ascii "Trying to wake up a non-sleeping process!\n\000"
 5302  0000f5d0  6e672074	
 5302  0000f5d4  6f207761	
 5302  0000f5d8  6b652075	
 5302  0000f5dc  70206120	
 5302  0000f5e0  6e6f6e2d	
 5302  0000f5e4  736c6565	
 5302  0000f5e8  70696e67	
 5302  0000f5ec  2070726f	
 5302  0000f5f0  63657373	
 5302  0000f5f4  210a00  	
 5303  0000f5f7          	.text
 5304  0000513c          	.align 2
 5305  0000513c          	.proc _ProcessWakeup
 5306  0000513c          	.global _ProcessWakeup
 5307  0000513c          	_ProcessWakeup:
 5308                      ;  Function 'ProcessWakeup'; 0 bytes of locals, 3 regs to save.
 5309  0000513c  afbefffc	sw	-4(r29),r30; push fp
 5310  00005140  001df020	add	r30,r0,r29; fp = sp
 5311  00005144  afbffff8	sw	-8(r29),r31; push ret addr
 5312  00005148  2fbd0018	subui	r29,r29,#24; alloc local storage
 5313  0000514c  afa20000	sw	0(r29),r2
 5314  00005150  afa30004	sw	4(r29),r3
 5315  00005154  afa40008	sw	8(r29),r4
 5316  00005158  8fc30000	lw	r3,(r30)
 5317  0000515c  23bdfff8	addi	r29,r29,#-8
 5318  00005160  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5319  00005164  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5320  00005168  afa20000	sw	(r29),r2
 5321  0000516c  20040070	addi	r4,r0,#112
 5322  00005170  afa40004	sw	4(r29),r4
 5323  00005174  0fffeca0	jal	_dindex
 5324  00005178  54000000	nop; not filled.
 5325  0000517c  23bd0008	addi	r29,r29,#8
 5326  00005180  64210000	snei	r1,r1,#0
 5327  00005184  1420002c	bnez	r1,L141_LF5
 5328  00005188  54000000	nop; not filled.
 5329  0000518c  23bdfff8	addi	r29,r29,#-8
 5330  00005190  afa20000	sw	(r29),r2
 5331  00005194  2004002b	addi	r4,r0,#43
 5332  00005198  afa40004	sw	4(r29),r4
 5333  0000519c  0fffec78	jal	_dindex
 5334  000051a0  54000000	nop; not filled.
 5335  000051a4  23bd0008	addi	r29,r29,#8
 5336  000051a8  64210000	snei	r1,r1,#0
 5337  000051ac  10200024	beqz	r1,L140_LF5
 5338  000051b0  54000000	nop; not filled.
 5339  000051b4          	L141_LF5:
 5340  000051b4  23bdfff8	addi	r29,r29,#-8
 5341  000051b8  3c040000	lhi	r4,((LC12_LF5)>>16)&0xffff
 5342  000051bc  2484f5a4	addui	r4,r4,(LC12_LF5)&0xffff
 5343  000051c0  afa40000	sw	(r29),r4
 5344  000051c4  afa30004	sw	4(r29),r3
 5345  000051c8  0c004fdc	jal	_printf
 5346  000051cc  54000000	nop; not filled.
 5347  000051d0  23bd0008	addi	r29,r29,#8
 5348  000051d4          	L140_LF5:
 5349  000051d4  8064000f	lb	r4,15(r3)
 5350  000051d8  58810002	srli	r1,r4,#0x2
 5351  000051dc  30210001	andi	r1,r1,#1
 5352  000051e0  14200038	bnez	r1,L143_LF5
 5353  000051e4  54000000	nop; not filled.
 5354  000051e8  23bdfff0	addi	r29,r29,#-16
 5355  000051ec  3c040000	lhi	r4,((LC9_LF5)>>16)&0xffff
 5356  000051f0  2484f560	addui	r4,r4,(LC9_LF5)&0xffff
 5357  000051f4  afa40000	sw	(r29),r4
 5358  000051f8  3c010000	lhi	r1,((LC13_LF5)>>16)&0xffff
 5359  000051fc  2421f5bc	addui	r1,r1,(LC13_LF5)&0xffff
 5360  00005200  afa10004	sw	4(r29),r1
 5361  00005204  3c040000	lhi	r4,((LC14_LF5)>>16)&0xffff
 5362  00005208  2484f5cc	addui	r4,r4,(LC14_LF5)&0xffff
 5363  0000520c  afa40008	sw	8(r29),r4
 5364  00005210  0c004f94	jal	_printf
 5365  00005214  54000000	nop; not filled.
 5366  00005218  23bd0010	addi	r29,r29,#16
 5367  0000521c          	L143_LF5:
 5368  0000521c  8c61000c	lw	r1,12(r3)
 5369  00005220  2004ffc0	addi	r4,r0,#-64
 5370  00005224  00240824	and	r1,r1,r4
 5371  00005228  34210002	ori	r1,r1,#2
 5372  0000522c  ac61000c	sw	12(r3),r1
 5373  00005230  207f00a4	addi	r31,r3,#164
 5374  00005234  8c6100ac	lw	r1,172(r3)
 5375  00005238  8c210008	lw	r1,8(r1)
 5376  0000523c  6c210000	sgti	r1,r1,#0
 5377  00005240  1020002c	beqz	r1,L146_LF5
 5378  00005244  54000000	nop; not filled.
 5379  00005248  8c6100a8	lw	r1,168(r3)
 5380  0000524c  8fe40000	lw	r4,(r31)
 5381  00005250  ac240000	sw	(r1),r4
 5382  00005254  8fe10000	lw	r1,(r31)
 5383  00005258  8c6400a8	lw	r4,168(r3)
 5384  0000525c  ac240004	sw	4(r1),r4
 5385  00005260  8c6200ac	lw	r2,172(r3)
 5386  00005264  8c410008	lw	r1,8(r2)
 5387  00005268  2021ffff	addi	r1,r1,#-1
 5388  0000526c  ac410008	sw	8(r2),r1
 5389  00005270          	L146_LF5:
 5390  00005270  20040000	addi	r4,r0,#0
 5391  00005274  afe40000	sw	(r31),r4
 5392  00005278  3c020000	lhi	r2,((_runQueue_LF5)>>16)&0xffff
 5393  0000527c  2442fe20	addui	r2,r2,(_runQueue_LF5)&0xffff
 5394  00005280  8c410004	lw	r1,4(r2)
 5395  00005284  ac6200ac	sw	172(r3),r2
 5396  00005288  ac6100a8	sw	168(r3),r1
 5397  0000528c  8c240000	lw	r4,(r1)
 5398  00005290  afe40000	sw	(r31),r4
 5399  00005294  ac3f0000	sw	(r1),r31
 5400  00005298  8fe10000	lw	r1,(r31)
 5401  0000529c  ac3f0004	sw	4(r1),r31
 5402  000052a0  8c410008	lw	r1,8(r2)
 5403  000052a4  20210001	addi	r1,r1,#1
 5404  000052a8  ac410008	sw	8(r2),r1
 5405  000052ac  8fa20000	lw	r2,0(r29)
 5406  000052b0  8fa30004	lw	r3,4(r29)
 5407  000052b4  8fa40008	lw	r4,8(r29)
 5408  000052b8  8fdffff8	lw	r31,-8(r30)
 5409  000052bc  001ee820	add	r29,r0,r30
 5410  000052c0  8fdefffc	lw	r30,-4(r30)
 5411  000052c4  4be00000	jr	r31
 5412  000052c8  54000000	nop
 5413  000052cc          	.endproc _ProcessWakeup
 5414  000052cc          	.data
 5415  0000f5f7          	.align 2
 5416  0000f5f8          	LC15_LF5:
 5417  0000f5f8  456e7465	.ascii "Entering ProcessDestroy for 0x%x.\n\000"
 5417  0000f5fc  72696e67	
 5417  0000f600  2050726f	
 5417  0000f604  63657373	
 5417  0000f608  44657374	
 5417  0000f60c  726f7920	
 5417  0000f610  666f7220	
 5417  0000f614  30782578	
 5417  0000f618  2e0a00  	
 5418  0000f61b          	.align 2
 5419  0000f61c          	LC16_LF5:
 5420  0000f61c  4c656176	.ascii "Leaving ProcessDestroy for 0x%x.\n\000"
 5420  0000f620  696e6720	
 5420  0000f624  50726f63	
 5420  0000f628  65737344	
 5420  0000f62c  65737472	
 5420  0000f630  6f792066	
 5420  0000f634  6f722030	
 5420  0000f638  7825782e	
 5420  0000f63c  0a00    	
 5421  0000f63e          	.text
 5422  000052cc          	.align 2
 5423  000052cc          	.proc _ProcessDestroy
 5424  000052cc          	.global _ProcessDestroy
 5425  000052cc          	_ProcessDestroy:
 5426                      ;  Function 'ProcessDestroy'; 0 bytes of locals, 3 regs to save.
 5427  000052cc  afbefffc	sw	-4(r29),r30; push fp
 5428  000052d0  001df020	add	r30,r0,r29; fp = sp
 5429  000052d4  afbffff8	sw	-8(r29),r31; push ret addr
 5430  000052d8  2fbd0018	subui	r29,r29,#24; alloc local storage
 5431  000052dc  afa20000	sw	0(r29),r2
 5432  000052e0  afa30004	sw	4(r29),r3
 5433  000052e4  afa40008	sw	8(r29),r4
 5434  000052e8  8fc30000	lw	r3,(r30)
 5435  000052ec  23bdfff8	addi	r29,r29,#-8
 5436  000052f0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5437  000052f4  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5438  000052f8  afa20000	sw	(r29),r2
 5439  000052fc  20040070	addi	r4,r0,#112
 5440  00005300  afa40004	sw	4(r29),r4
 5441  00005304  0fffeb10	jal	_dindex
 5442  00005308  54000000	nop; not filled.
 5443  0000530c  23bd0008	addi	r29,r29,#8
 5444  00005310  64210000	snei	r1,r1,#0
 5445  00005314  1420002c	bnez	r1,L152_LF5
 5446  00005318  54000000	nop; not filled.
 5447  0000531c  23bdfff8	addi	r29,r29,#-8
 5448  00005320  afa20000	sw	(r29),r2
 5449  00005324  2004002b	addi	r4,r0,#43
 5450  00005328  afa40004	sw	4(r29),r4
 5451  0000532c  0fffeae8	jal	_dindex
 5452  00005330  54000000	nop; not filled.
 5453  00005334  23bd0008	addi	r29,r29,#8
 5454  00005338  64210000	snei	r1,r1,#0
 5455  0000533c  10200024	beqz	r1,L151_LF5
 5456  00005340  54000000	nop; not filled.
 5457  00005344          	L152_LF5:
 5458  00005344  23bdfff8	addi	r29,r29,#-8
 5459  00005348  3c040000	lhi	r4,((LC15_LF5)>>16)&0xffff
 5460  0000534c  2484f5f8	addui	r4,r4,(LC15_LF5)&0xffff
 5461  00005350  afa40000	sw	(r29),r4
 5462  00005354  afa30004	sw	4(r29),r3
 5463  00005358  0c004e4c	jal	_printf
 5464  0000535c  54000000	nop; not filled.
 5465  00005360  23bd0008	addi	r29,r29,#8
 5466  00005364          	L151_LF5:
 5467  00005364  8c61000c	lw	r1,12(r3)
 5468  00005368  2004ffc0	addi	r4,r0,#-64
 5469  0000536c  00240824	and	r1,r1,r4
 5470  00005370  34210010	ori	r1,r1,#16
 5471  00005374  ac61000c	sw	12(r3),r1
 5472  00005378  207f00a4	addi	r31,r3,#164
 5473  0000537c  8c6100ac	lw	r1,172(r3)
 5474  00005380  8c210008	lw	r1,8(r1)
 5475  00005384  6c210000	sgti	r1,r1,#0
 5476  00005388  1020002c	beqz	r1,L155_LF5
 5477  0000538c  54000000	nop; not filled.
 5478  00005390  8c6100a8	lw	r1,168(r3)
 5479  00005394  8fe40000	lw	r4,(r31)
 5480  00005398  ac240000	sw	(r1),r4
 5481  0000539c  8fe10000	lw	r1,(r31)
 5482  000053a0  8c6400a8	lw	r4,168(r3)
 5483  000053a4  ac240004	sw	4(r1),r4
 5484  000053a8  8c6200ac	lw	r2,172(r3)
 5485  000053ac  8c410008	lw	r1,8(r2)
 5486  000053b0  2021ffff	addi	r1,r1,#-1
 5487  000053b4  ac410008	sw	8(r2),r1
 5488  000053b8          	L155_LF5:
 5489  000053b8  20040000	addi	r4,r0,#0
 5490  000053bc  afe40000	sw	(r31),r4
 5491  000053c0  3c020000	lhi	r2,((_zombieQueue_LF5)>>16)&0xffff
 5492  000053c4  2442fe38	addui	r2,r2,(_zombieQueue_LF5)&0xffff
 5493  000053c8  ac6200ac	sw	172(r3),r2
 5494  000053cc  ac6200a8	sw	168(r3),r2
 5495  000053d0  8c440000	lw	r4,(r2)
 5496  000053d4  afe40000	sw	(r31),r4
 5497  000053d8  ac5f0000	sw	(r2),r31
 5498  000053dc  8fe10000	lw	r1,(r31)
 5499  000053e0  ac3f0004	sw	4(r1),r31
 5500  000053e4  8c410008	lw	r1,8(r2)
 5501  000053e8  20210001	addi	r1,r1,#1
 5502  000053ec  ac410008	sw	8(r2),r1
 5503  000053f0  23bdfff8	addi	r29,r29,#-8
 5504  000053f4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5505  000053f8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5506  000053fc  afa20000	sw	(r29),r2
 5507  00005400  20040070	addi	r4,r0,#112
 5508  00005404  afa40004	sw	4(r29),r4
 5509  00005408  0fffea0c	jal	_dindex
 5510  0000540c  54000000	nop; not filled.
 5511  00005410  23bd0008	addi	r29,r29,#8
 5512  00005414  64210000	snei	r1,r1,#0
 5513  00005418  1420002c	bnez	r1,L159_LF5
 5514  0000541c  54000000	nop; not filled.
 5515  00005420  23bdfff8	addi	r29,r29,#-8
 5516  00005424  afa20000	sw	(r29),r2
 5517  00005428  2004002b	addi	r4,r0,#43
 5518  0000542c  afa40004	sw	4(r29),r4
 5519  00005430  0fffe9e4	jal	_dindex
 5520  00005434  54000000	nop; not filled.
 5521  00005438  23bd0008	addi	r29,r29,#8
 5522  0000543c  64210000	snei	r1,r1,#0
 5523  00005440  10200024	beqz	r1,L158_LF5
 5524  00005444  54000000	nop; not filled.
 5525  00005448          	L159_LF5:
 5526  00005448  23bdfff8	addi	r29,r29,#-8
 5527  0000544c  3c040000	lhi	r4,((LC16_LF5)>>16)&0xffff
 5528  00005450  2484f61c	addui	r4,r4,(LC16_LF5)&0xffff
 5529  00005454  afa40000	sw	(r29),r4
 5530  00005458  afa30004	sw	4(r29),r3
 5531  0000545c  0c004d48	jal	_printf
 5532  00005460  54000000	nop; not filled.
 5533  00005464  23bd0008	addi	r29,r29,#8
 5534  00005468          	L158_LF5:
 5535  00005468  8fa20000	lw	r2,0(r29)
 5536  0000546c  8fa30004	lw	r3,4(r29)
 5537  00005470  8fa40008	lw	r4,8(r29)
 5538  00005474  8fdffff8	lw	r31,-8(r30)
 5539  00005478  001ee820	add	r29,r0,r30
 5540  0000547c  8fdefffc	lw	r30,-4(r30)
 5541  00005480  4be00000	jr	r31
 5542  00005484  54000000	nop
 5543  00005488          	.endproc _ProcessDestroy
 5544  00005488          	.data
 5545  0000f63e          	.align 2
 5546  0000f640          	LC17_LF5:
 5547  0000f640  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 5547  0000f644  696e7465	
 5547  0000f648  72727570	
 5547  0000f64c  74207661	
 5547  0000f650  6c756520	
 5547  0000f654  77617320	
 5547  0000f658  30782578	
 5547  0000f65c  2e0a00  	
 5548  0000f65f          	.align 2
 5549  0000f660          	LC18_LF5:
 5550  0000f660  456e7465	.ascii "Entering ProcessFork args=0x%x 0x%x %s %d\n\000"
 5550  0000f664  72696e67	
 5550  0000f668  2050726f	
 5550  0000f66c  63657373	
 5550  0000f670  466f726b	
 5550  0000f674  20617267	
 5550  0000f678  733d3078	
 5550  0000f67c  25782030	
 5550  0000f680  78257820	
 5550  0000f684  25732025	
 5550  0000f688  640a00  	
 5551  0000f68b          	.align 2
 5552  0000f68c          	LC19_LF5:
 5553  0000f68c  46415441	.ascii "FATAL error: no free processes!\n\000"
 5553  0000f690  4c206572	
 5553  0000f694  726f723a	
 5553  0000f698  206e6f20	
 5553  0000f69c  66726565	
 5553  0000f6a0  2070726f	
 5553  0000f6a4  63657373	
 5553  0000f6a8  6573210a	
 5553  0000f6ac  00      	
 5554  0000f6ad          	.align 2
 5555  0000f6b0          	LC20_LF5:
 5556  0000f6b0  476f7420	.ascii "Got a link @ 0x%x\n\000"
 5556  0000f6b4  61206c69	
 5556  0000f6b8  6e6b2040	
 5556  0000f6bc  20307825	
 5556  0000f6c0  780a00  	
 5557  0000f6c3          	.align 2
 5558  0000f6c4          	LC21_LF5:
 5559  0000f6c4  4265666f	.ascii "Before restore interrupt value is 0x%x.\n\000"
 5559  0000f6c8  72652072	
 5559  0000f6cc  6573746f	
 5559  0000f6d0  72652069	
 5559  0000f6d4  6e746572	
 5559  0000f6d8  72757074	
 5559  0000f6dc  2076616c	
 5559  0000f6e0  75652069	
 5559  0000f6e4  73203078	
 5559  0000f6e8  25782e0a	
 5559  0000f6ec  00      	
 5560  0000f6ed          	.align 2
 5561  0000f6f0          	LC22_LF5:
 5562  0000f6f0  4e657720	.ascii "New interrupt value is 0x%x.\n\000"
 5562  0000f6f4  696e7465	
 5562  0000f6f8  72727570	
 5562  0000f6fc  74207661	
 5562  0000f700  6c756520	
 5562  0000f704  69732030	
 5562  0000f708  7825782e	
 5562  0000f70c  0a00    	
 5563  0000f70e          	.align 2
 5564  0000f710          	LC23_LF5:
 5565  0000f710  46415441	.ascii "FATAL: couldn\'t allocate memory - no free pages!\n\000"
 5565  0000f714  4c3a2063	
 5565  0000f718  6f756c64	
 5565  0000f71c  6e277420	
 5565  0000f720  616c6c6f	
 5565  0000f724  63617465	
 5565  0000f728  206d656d	
 5565  0000f72c  6f727920	
 5565  0000f730  2d206e6f	
 5565  0000f734  20667265	
 5565  0000f738  65207061	
 5565  0000f73c  67657321	
 5565  0000f740  0a00    	
 5566  0000f742          	.align 2
 5567  0000f744          	LC24_LF5:
 5568  0000f744  46415441	.ascii "FATAL: couldn\'t allocate system stack - no free pages!\n\000"
 5568  0000f748  4c3a2063	
 5568  0000f74c  6f756c64	
 5568  0000f750  6e277420	
 5568  0000f754  616c6c6f	
 5568  0000f758  63617465	
 5568  0000f75c  20737973	
 5568  0000f760  74656d20	
 5568  0000f764  73746163	
 5568  0000f768  6b202d20	
 5568  0000f76c  6e6f2066	
 5568  0000f770  72656520	
 5568  0000f774  70616765	
 5568  0000f778  73210a00	
 5569  0000f77c          	.align 2
 5570  0000f77c          	LC25_LF5:
 5571  0000f77c  53657474	.ascii "Setting up PCB @ 0x%x (sys stack=0x%x, mem=0x%x, size=0x%x)\n\000"
 5571  0000f780  696e6720	
 5571  0000f784  75702050	
 5571  0000f788  43422040	
 5571  0000f78c  20307825	
 5571  0000f790  78202873	
 5571  0000f794  79732073	
 5571  0000f798  7461636b	
 5571  0000f79c  3d307825	
 5571  0000f7a0  782c206d	
 5571  0000f7a4  656d3d30	
 5571  0000f7a8  7825782c	
 5571  0000f7ac  2073697a	
 5571  0000f7b0  653d3078	
 5571  0000f7b4  2578290a	
 5571  0000f7b8  00      	
 5572  0000f7b9          	.align 2
 5573  0000f7bc          	LC26_LF5:
 5574  0000f7bc  41626f75	.ascii "About to load %s\n\000"
 5574  0000f7c0  7420746f	
 5574  0000f7c4  206c6f61	
 5574  0000f7c8  64202573	
 5574  0000f7cc  0a00    	
 5575  0000f7ce          	.align 2
 5576  0000f7d0          	LC27_LF5:
 5577  0000f7d0  46696c65	.ascii "File %s -> start=0x%08x\n\000"
 5577  0000f7d4  20257320	
 5577  0000f7d8  2d3e2073	
 5577  0000f7dc  74617274	
 5577  0000f7e0  3d307825	
 5577  0000f7e4  3038780a	
 5577  0000f7e8  00      	
 5578  0000f7e9          	.align 2
 5579  0000f7ec          	LC28_LF5:
 5580  0000f7ec  46696c65	.ascii "File %s -> code @ 0x%08x (size=0x%08x)\n\000"
 5580  0000f7f0  20257320	
 5580  0000f7f4  2d3e2063	
 5580  0000f7f8  6f646520	
 5580  0000f7fc  40203078	
 5580  0000f800  25303878	
 5580  0000f804  20287369	
 5580  0000f808  7a653d30	
 5580  0000f80c  78253038	
 5580  0000f810  78290a00	
 5581  0000f814          	.align 2
 5582  0000f814          	LC29_LF5:
 5583  0000f814  46696c65	.ascii "File %s -> data @ 0x%08x (size=0x%08x)\n\000"
 5583  0000f818  20257320	
 5583  0000f81c  2d3e2064	
 5583  0000f820  61746120	
 5583  0000f824  40203078	
 5583  0000f828  25303878	
 5583  0000f82c  20287369	
 5583  0000f830  7a653d30	
 5583  0000f834  78253038	
 5583  0000f838  78290a00	
 5584  0000f83c          	.align 2
 5585  0000f83c          	LC30_LF5:
 5586  0000f83c  506c6163	.ascii "Placing %d bytes at vaddr %08x.\n\000"
 5586  0000f840  696e6720	
 5586  0000f844  25642062	
 5586  0000f848  79746573	
 5586  0000f84c  20617420	
 5586  0000f850  76616464	
 5586  0000f854  72202530	
 5586  0000f858  38782e0a	
 5586  0000f85c  00      	
 5587  0000f85d          	.align 2
 5588  0000f860          	LC31_LF5:
 5589  0000f860  53657474	.ascii "Setting currentPCB=0x%x, stackframe=0x%x\n\000"
 5589  0000f864  696e6720	
 5589  0000f868  63757272	
 5589  0000f86c  656e7450	
 5589  0000f870  43423d30	
 5589  0000f874  7825782c	
 5589  0000f878  20737461	
 5589  0000f87c  636b6672	
 5589  0000f880  616d653d	
 5589  0000f884  30782578	
 5589  0000f888  0a00    	
 5590  0000f88a          	.align 2
 5591  0000f88c          	LC32_LF5:
 5592  0000f88c  4c656176	.ascii "Leaving ProcessFork (%s)\n\000"
 5592  0000f890  696e6720	
 5592  0000f894  50726f63	
 5592  0000f898  65737346	
 5592  0000f89c  6f726b20	
 5592  0000f8a0  28257329	
 5592  0000f8a4  0a00    	
 5593  0000f8a6          	.text
 5594  00005488          	.align 2
 5595  00005488          	.proc _ProcessFork
 5596  00005488          	.global _ProcessFork
 5597  00005488          	_ProcessFork:
 5598                      ;  Function 'ProcessFork'; 128 bytes of locals, 10 regs to save.
 5599  00005488  afbefffc	sw	-4(r29),r30; push fp
 5600  0000548c  001df020	add	r30,r0,r29; fp = sp
 5601  00005490  afbffff8	sw	-8(r29),r31; push ret addr
 5602  00005494  2fbd00b0	subui	r29,r29,#176; alloc local storage
 5603  00005498  afa20000	sw	0(r29),r2
 5604  0000549c  afa30004	sw	4(r29),r3
 5605  000054a0  afa40008	sw	8(r29),r4
 5606  000054a4  afa5000c	sw	12(r29),r5
 5607  000054a8  afa60010	sw	16(r29),r6
 5608  000054ac  afa70014	sw	20(r29),r7
 5609  000054b0  afa80018	sw	24(r29),r8
 5610  000054b4  afa9001c	sw	28(r29),r9
 5611  000054b8  afaa0020	sw	32(r29),r10
 5612  000054bc  afab0024	sw	36(r29),r11
 5613  000054c0  8fc80000	lw	r8,(r30)
 5614  000054c4  8fca0008	lw	r10,8(r30)
 5615  000054c8  8fc7000c	lw	r7,12(r30)
 5616  000054cc  200b0000	addi	r11,r0,#0
 5617  000054d0  afcbff78	sw	-136(r30),r11
 5618  000054d4  23bdfff8	addi	r29,r29,#-8
 5619  000054d8  200b000f	addi	r11,r0,#15
 5620  000054dc  afab0000	sw	(r29),r11
 5621  000054e0  0fffbda4	jal	_SetIntrs
 5622  000054e4  54000000	nop; not filled.
 5623  000054e8  00011820	add	r3,r0,r1
 5624  000054ec  23bd0008	addi	r29,r29,#8
 5625  000054f0  23bdfff8	addi	r29,r29,#-8
 5626  000054f4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5627  000054f8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5628  000054fc  afa20000	sw	(r29),r2
 5629  00005500  200b0049	addi	r11,r0,#73
 5630  00005504  afab0004	sw	4(r29),r11
 5631  00005508  0fffe90c	jal	_dindex
 5632  0000550c  54000000	nop; not filled.
 5633  00005510  23bd0008	addi	r29,r29,#8
 5634  00005514  64210000	snei	r1,r1,#0
 5635  00005518  1420002c	bnez	r1,L164_LF5
 5636  0000551c  54000000	nop; not filled.
 5637  00005520  23bdfff8	addi	r29,r29,#-8
 5638  00005524  afa20000	sw	(r29),r2
 5639  00005528  200b002b	addi	r11,r0,#43
 5640  0000552c  afab0004	sw	4(r29),r11
 5641  00005530  0fffe8e4	jal	_dindex
 5642  00005534  54000000	nop; not filled.
 5643  00005538  23bd0008	addi	r29,r29,#8
 5644  0000553c  64210000	snei	r1,r1,#0
 5645  00005540  10200024	beqz	r1,L163_LF5
 5646  00005544  54000000	nop; not filled.
 5647  00005548          	L164_LF5:
 5648  00005548  23bdfff8	addi	r29,r29,#-8
 5649  0000554c  3c0b0000	lhi	r11,((LC17_LF5)>>16)&0xffff
 5650  00005550  256bf640	addui	r11,r11,(LC17_LF5)&0xffff
 5651  00005554  afab0000	sw	(r29),r11
 5652  00005558  afa30004	sw	4(r29),r3
 5653  0000555c  0c004c48	jal	_printf
 5654  00005560  54000000	nop; not filled.
 5655  00005564  23bd0008	addi	r29,r29,#8
 5656  00005568          	L163_LF5:
 5657  00005568  23bdfff8	addi	r29,r29,#-8
 5658  0000556c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5659  00005570  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5660  00005574  afa20000	sw	(r29),r2
 5661  00005578  200b0070	addi	r11,r0,#112
 5662  0000557c  afab0004	sw	4(r29),r11
 5663  00005580  0fffe894	jal	_dindex
 5664  00005584  54000000	nop; not filled.
 5665  00005588  23bd0008	addi	r29,r29,#8
 5666  0000558c  64210000	snei	r1,r1,#0
 5667  00005590  1420002c	bnez	r1,L166_LF5
 5668  00005594  54000000	nop; not filled.
 5669  00005598  23bdfff8	addi	r29,r29,#-8
 5670  0000559c  afa20000	sw	(r29),r2
 5671  000055a0  200b002b	addi	r11,r0,#43
 5672  000055a4  afab0004	sw	4(r29),r11
 5673  000055a8  0fffe86c	jal	_dindex
 5674  000055ac  54000000	nop; not filled.
 5675  000055b0  23bd0008	addi	r29,r29,#8
 5676  000055b4  64210000	snei	r1,r1,#0
 5677  000055b8  10200034	beqz	r1,L165_LF5
 5678  000055bc  54000000	nop; not filled.
 5679  000055c0          	L166_LF5:
 5680  000055c0  23bdffe8	addi	r29,r29,#-24
 5681  000055c4  3c0b0000	lhi	r11,((LC18_LF5)>>16)&0xffff
 5682  000055c8  256bf660	addui	r11,r11,(LC18_LF5)&0xffff
 5683  000055cc  afab0000	sw	(r29),r11
 5684  000055d0  afa80004	sw	4(r29),r8
 5685  000055d4  8fcb0004	lw	r11,4(r30)
 5686  000055d8  afab0008	sw	8(r29),r11
 5687  000055dc  afaa000c	sw	12(r29),r10
 5688  000055e0  afa70010	sw	16(r29),r7
 5689  000055e4  0c004bc0	jal	_printf
 5690  000055e8  54000000	nop; not filled.
 5691  000055ec  23bd0018	addi	r29,r29,#24
 5692  000055f0          	L165_LF5:
 5693  000055f0  3c020000	lhi	r2,((_freepcbs_LF5)>>16)&0xffff
 5694  000055f4  2442fe14	addui	r2,r2,(_freepcbs_LF5)&0xffff
 5695  000055f8  8c410008	lw	r1,8(r2)
 5696  000055fc  60210000	seqi	r1,r1,#0
 5697  00005600  10200028	beqz	r1,L167_LF5
 5698  00005604  54000000	nop; not filled.
 5699  00005608  23bdfff8	addi	r29,r29,#-8
 5700  0000560c  3c0b0000	lhi	r11,((LC19_LF5)>>16)&0xffff
 5701  00005610  256bf68c	addui	r11,r11,(LC19_LF5)&0xffff
 5702  00005614  afab0000	sw	(r29),r11
 5703  00005618  0c004b8c	jal	_printf
 5704  0000561c  54000000	nop; not filled.
 5705  00005620  0c004b6c	jal	_exitsim
 5706  00005624  54000000	nop; not filled.
 5707  00005628  23bd0008	addi	r29,r29,#8
 5708  0000562c          	L167_LF5:
 5709  0000562c  8c460000	lw	r6,(r2)
 5710  00005630  23bdfff8	addi	r29,r29,#-8
 5711  00005634  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5712  00005638  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5713  0000563c  afa20000	sw	(r29),r2
 5714  00005640  200b0070	addi	r11,r0,#112
 5715  00005644  afab0004	sw	4(r29),r11
 5716  00005648  0fffe7cc	jal	_dindex
 5717  0000564c  54000000	nop; not filled.
 5718  00005650  23bd0008	addi	r29,r29,#8
 5719  00005654  64210000	snei	r1,r1,#0
 5720  00005658  1420002c	bnez	r1,L172_LF5
 5721  0000565c  54000000	nop; not filled.
 5722  00005660  23bdfff8	addi	r29,r29,#-8
 5723  00005664  afa20000	sw	(r29),r2
 5724  00005668  200b002b	addi	r11,r0,#43
 5725  0000566c  afab0004	sw	4(r29),r11
 5726  00005670  0fffe7a4	jal	_dindex
 5727  00005674  54000000	nop; not filled.
 5728  00005678  23bd0008	addi	r29,r29,#8
 5729  0000567c  64210000	snei	r1,r1,#0
 5730  00005680  10200024	beqz	r1,L171_LF5
 5731  00005684  54000000	nop; not filled.
 5732  00005688          	L172_LF5:
 5733  00005688  23bdfff8	addi	r29,r29,#-8
 5734  0000568c  3c0b0000	lhi	r11,((LC20_LF5)>>16)&0xffff
 5735  00005690  256bf6b0	addui	r11,r11,(LC20_LF5)&0xffff
 5736  00005694  afab0000	sw	(r29),r11
 5737  00005698  afa60004	sw	4(r29),r6
 5738  0000569c  0c004b08	jal	_printf
 5739  000056a0  54000000	nop; not filled.
 5740  000056a4  23bd0008	addi	r29,r29,#8
 5741  000056a8          	L171_LF5:
 5742  000056a8  8cc10008	lw	r1,8(r6)
 5743  000056ac  8c210008	lw	r1,8(r1)
 5744  000056b0  6c210000	sgti	r1,r1,#0
 5745  000056b4  1020002c	beqz	r1,L174_LF5
 5746  000056b8  54000000	nop; not filled.
 5747  000056bc  8cc10004	lw	r1,4(r6)
 5748  000056c0  8ccb0000	lw	r11,(r6)
 5749  000056c4  ac2b0000	sw	(r1),r11
 5750  000056c8  8cc10000	lw	r1,(r6)
 5751  000056cc  8ccb0004	lw	r11,4(r6)
 5752  000056d0  ac2b0004	sw	4(r1),r11
 5753  000056d4  8cc20008	lw	r2,8(r6)
 5754  000056d8  8c410008	lw	r1,8(r2)
 5755  000056dc  2021ffff	addi	r1,r1,#-1
 5756  000056e0  ac410008	sw	8(r2),r1
 5757  000056e4          	L174_LF5:
 5758  000056e4  200b0000	addi	r11,r0,#0
 5759  000056e8  accb0000	sw	(r6),r11
 5760  000056ec  8cc4000c	lw	r4,12(r6)
 5761  000056f0  8c81000c	lw	r1,12(r4)
 5762  000056f4  200bffc0	addi	r11,r0,#-64
 5763  000056f8  002b0824	and	r1,r1,r11
 5764  000056fc  34210002	ori	r1,r1,#2
 5765  00005700  ac81000c	sw	12(r4),r1
 5766  00005704  23bdfff8	addi	r29,r29,#-8
 5767  00005708  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5768  0000570c  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5769  00005710  afa20000	sw	(r29),r2
 5770  00005714  200b0049	addi	r11,r0,#73
 5771  00005718  afab0004	sw	4(r29),r11
 5772  0000571c  0fffe6f8	jal	_dindex
 5773  00005720  54000000	nop; not filled.
 5774  00005724  23bd0008	addi	r29,r29,#8
 5775  00005728  64210000	snei	r1,r1,#0
 5776  0000572c  1420002c	bnez	r1,L177_LF5
 5777  00005730  54000000	nop; not filled.
 5778  00005734  23bdfff8	addi	r29,r29,#-8
 5779  00005738  afa20000	sw	(r29),r2
 5780  0000573c  200b002b	addi	r11,r0,#43
 5781  00005740  afab0004	sw	4(r29),r11
 5782  00005744  0fffe6d0	jal	_dindex
 5783  00005748  54000000	nop; not filled.
 5784  0000574c  23bd0008	addi	r29,r29,#8
 5785  00005750  64210000	snei	r1,r1,#0
 5786  00005754  1020002c	beqz	r1,L176_LF5
 5787  00005758  54000000	nop; not filled.
 5788  0000575c          	L177_LF5:
 5789  0000575c  0fffbb64	jal	_CurrentIntrs
 5790  00005760  54000000	nop; not filled.
 5791  00005764  23bdfff8	addi	r29,r29,#-8
 5792  00005768  3c0b0000	lhi	r11,((LC21_LF5)>>16)&0xffff
 5793  0000576c  256bf6c4	addui	r11,r11,(LC21_LF5)&0xffff
 5794  00005770  afab0000	sw	(r29),r11
 5795  00005774  afa10004	sw	4(r29),r1
 5796  00005778  0c004a2c	jal	_printf
 5797  0000577c  54000000	nop; not filled.
 5798  00005780  23bd0008	addi	r29,r29,#8
 5799  00005784          	L176_LF5:
 5800  00005784  23bdfff8	addi	r29,r29,#-8
 5801  00005788  afa30000	sw	(r29),r3
 5802  0000578c  0fffbaf8	jal	_SetIntrs
 5803  00005790  54000000	nop; not filled.
 5804  00005794  23bd0008	addi	r29,r29,#8
 5805  00005798  23bdfff8	addi	r29,r29,#-8
 5806  0000579c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5807  000057a0  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5808  000057a4  afa20000	sw	(r29),r2
 5809  000057a8  200b0049	addi	r11,r0,#73
 5810  000057ac  afab0004	sw	4(r29),r11
 5811  000057b0  0fffe664	jal	_dindex
 5812  000057b4  54000000	nop; not filled.
 5813  000057b8  23bd0008	addi	r29,r29,#8
 5814  000057bc  64210000	snei	r1,r1,#0
 5815  000057c0  1420002c	bnez	r1,L180_LF5
 5816  000057c4  54000000	nop; not filled.
 5817  000057c8  23bdfff8	addi	r29,r29,#-8
 5818  000057cc  afa20000	sw	(r29),r2
 5819  000057d0  200b002b	addi	r11,r0,#43
 5820  000057d4  afab0004	sw	4(r29),r11
 5821  000057d8  0fffe63c	jal	_dindex
 5822  000057dc  54000000	nop; not filled.
 5823  000057e0  23bd0008	addi	r29,r29,#8
 5824  000057e4  64210000	snei	r1,r1,#0
 5825  000057e8  1020002c	beqz	r1,L179_LF5
 5826  000057ec  54000000	nop; not filled.
 5827  000057f0          	L180_LF5:
 5828  000057f0  0fffbad0	jal	_CurrentIntrs
 5829  000057f4  54000000	nop; not filled.
 5830  000057f8  23bdfff8	addi	r29,r29,#-8
 5831  000057fc  3c0b0000	lhi	r11,((LC22_LF5)>>16)&0xffff
 5832  00005800  256bf6f0	addui	r11,r11,(LC22_LF5)&0xffff
 5833  00005804  afab0000	sw	(r29),r11
 5834  00005808  afa10004	sw	4(r29),r1
 5835  0000580c  0c004998	jal	_printf
 5836  00005810  54000000	nop; not filled.
 5837  00005814  23bd0008	addi	r29,r29,#8
 5838  00005818          	L179_LF5:
 5839  00005818  23bdfff8	addi	r29,r29,#-8
 5840  0000581c  20810010	addi	r1,r4,#16
 5841  00005820  afa10000	sw	(r29),r1
 5842  00005824  afaa0004	sw	4(r29),r10
 5843  00005828  0fffe12c	jal	_dstrcpy
 5844  0000582c  54000000	nop; not filled.
 5845  00005830  200b0001	addi	r11,r0,#1
 5846  00005834  ac8b00a0	sw	160(r4),r11
 5847  00005838  0fffd70c	jal	_MemoryAllocPage
 5848  0000583c  54000000	nop; not filled.
 5849  00005840  00011020	add	r2,r0,r1
 5850  00005844  23bd0008	addi	r29,r29,#8
 5851  00005848  64410000	snei	r1,r2,#0
 5852  0000584c  14200028	bnez	r1,L181_LF5
 5853  00005850  54000000	nop; not filled.
 5854  00005854  23bdfff8	addi	r29,r29,#-8
 5855  00005858  3c0b0000	lhi	r11,((LC23_LF5)>>16)&0xffff
 5856  0000585c  256bf710	addui	r11,r11,(LC23_LF5)&0xffff
 5857  00005860  afab0000	sw	(r29),r11
 5858  00005864  0c004940	jal	_printf
 5859  00005868  54000000	nop; not filled.
 5860  0000586c  0c004920	jal	_exitsim
 5861  00005870  54000000	nop; not filled.
 5862  00005874  23bd0008	addi	r29,r29,#8
 5863  00005878          	L181_LF5:
 5864  00005878  23bdfff8	addi	r29,r29,#-8
 5865  0000587c  afa20000	sw	(r29),r2
 5866  00005880  0fffde0c	jal	_MemorySetupPte
 5867  00005884  54000000	nop; not filled.
 5868  00005888  ac810060	sw	96(r4),r1
 5869  0000588c  0fffd6b8	jal	_MemoryAllocPage
 5870  00005890  54000000	nop; not filled.
 5871  00005894  00011020	add	r2,r0,r1
 5872  00005898  23bd0008	addi	r29,r29,#8
 5873  0000589c  64410000	snei	r1,r2,#0
 5874  000058a0  14200028	bnez	r1,L182_LF5
 5875  000058a4  54000000	nop; not filled.
 5876  000058a8  23bdfff8	addi	r29,r29,#-8
 5877  000058ac  3c0b0000	lhi	r11,((LC24_LF5)>>16)&0xffff
 5878  000058b0  256bf744	addui	r11,r11,(LC24_LF5)&0xffff
 5879  000058b4  afab0000	sw	(r29),r11
 5880  000058b8  0c0048ec	jal	_printf
 5881  000058bc  54000000	nop; not filled.
 5882  000058c0  0c0048cc	jal	_exitsim
 5883  000058c4  54000000	nop; not filled.
 5884  000058c8  23bd0008	addi	r29,r29,#8
 5885  000058cc          	L182_LF5:
 5886  000058cc  50410010	slli	r1,r2,#0x10
 5887  000058d0  ac810008	sw	8(r4),r1
 5888  000058d4  3425fe8c	ori	r5,r1,#65164
 5889  000058d8  ac850004	sw	4(r4),r5
 5890  000058dc  ac850000	sw	(r4),r5
 5891  000058e0  23bdfff8	addi	r29,r29,#-8
 5892  000058e4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5893  000058e8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5894  000058ec  afa20000	sw	(r29),r2
 5895  000058f0  200b0070	addi	r11,r0,#112
 5896  000058f4  afab0004	sw	4(r29),r11
 5897  000058f8  0fffe51c	jal	_dindex
 5898  000058fc  54000000	nop; not filled.
 5899  00005900  23bd0008	addi	r29,r29,#8
 5900  00005904  64210000	snei	r1,r1,#0
 5901  00005908  1420002c	bnez	r1,L184_LF5
 5902  0000590c  54000000	nop; not filled.
 5903  00005910  23bdfff8	addi	r29,r29,#-8
 5904  00005914  afa20000	sw	(r29),r2
 5905  00005918  200b002b	addi	r11,r0,#43
 5906  0000591c  afab0004	sw	4(r29),r11
 5907  00005920  0fffe4f4	jal	_dindex
 5908  00005924  54000000	nop; not filled.
 5909  00005928  23bd0008	addi	r29,r29,#8
 5910  0000592c  64210000	snei	r1,r1,#0
 5911  00005930  10200040	beqz	r1,L183_LF5
 5912  00005934  54000000	nop; not filled.
 5913  00005938          	L184_LF5:
 5914  00005938  23bdffe8	addi	r29,r29,#-24
 5915  0000593c  3c0b0000	lhi	r11,((LC25_LF5)>>16)&0xffff
 5916  00005940  256bf77c	addui	r11,r11,(LC25_LF5)&0xffff
 5917  00005944  afab0000	sw	(r29),r11
 5918  00005948  afa40004	sw	4(r29),r4
 5919  0000594c  8c8b0008	lw	r11,8(r4)
 5920  00005950  afab0008	sw	8(r29),r11
 5921  00005954  8c8b0060	lw	r11,96(r4)
 5922  00005958  afab000c	sw	12(r29),r11
 5923  0000595c  8c8100a0	lw	r1,160(r4)
 5924  00005960  50210010	slli	r1,r1,#0x10
 5925  00005964  afa10010	sw	16(r29),r1
 5926  00005968  0c00483c	jal	_printf
 5927  0000596c  54000000	nop; not filled.
 5928  00005970  23bd0018	addi	r29,r29,#24
 5929  00005974          	L183_LF5:
 5930  00005974  200b0000	addi	r11,r0,#0
 5931  00005978  acab0028	sw	40(r5),r11
 5932  0000597c  20810060	addi	r1,r4,#96
 5933  00005980  aca10138	sw	312(r5),r1
 5934  00005984  8c8b00a0	lw	r11,160(r4)
 5935  00005988  acab013c	sw	316(r5),r11
 5936  0000598c  3c010010	lhi	r1,#16
 5937  00005990  24210010	addui	r1,r1,#16
 5938  00005994  aca10140	sw	320(r5),r1
 5939  00005998  64e10000	snei	r1,r7,#0
 5940  0000599c  10200468	beqz	r1,L185_LF5
 5941  000059a0  54000000	nop; not filled.
 5942  000059a4  23bdfff8	addi	r29,r29,#-8
 5943  000059a8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5944  000059ac  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 5945  000059b0  afa20000	sw	(r29),r2
 5946  000059b4  200b0070	addi	r11,r0,#112
 5947  000059b8  afab0004	sw	4(r29),r11
 5948  000059bc  0fffe458	jal	_dindex
 5949  000059c0  54000000	nop; not filled.
 5950  000059c4  23bd0008	addi	r29,r29,#8
 5951  000059c8  64210000	snei	r1,r1,#0
 5952  000059cc  1420002c	bnez	r1,L187_LF5
 5953  000059d0  54000000	nop; not filled.
 5954  000059d4  23bdfff8	addi	r29,r29,#-8
 5955  000059d8  afa20000	sw	(r29),r2
 5956  000059dc  200b002b	addi	r11,r0,#43
 5957  000059e0  afab0004	sw	4(r29),r11
 5958  000059e4  0fffe430	jal	_dindex
 5959  000059e8  54000000	nop; not filled.
 5960  000059ec  23bd0008	addi	r29,r29,#8
 5961  000059f0  64210000	snei	r1,r1,#0
 5962  000059f4  10200024	beqz	r1,L186_LF5
 5963  000059f8  54000000	nop; not filled.
 5964  000059fc          	L187_LF5:
 5965  000059fc  23bdfff8	addi	r29,r29,#-8
 5966  00005a00  3c0b0000	lhi	r11,((LC26_LF5)>>16)&0xffff
 5967  00005a04  256bf7bc	addui	r11,r11,(LC26_LF5)&0xffff
 5968  00005a08  afab0000	sw	(r29),r11
 5969  00005a0c  afaa0004	sw	4(r29),r10
 5970  00005a10  0c004794	jal	_printf
 5971  00005a14  54000000	nop; not filled.
 5972  00005a18  23bd0008	addi	r29,r29,#8
 5973  00005a1c          	L186_LF5:
 5974  00005a1c  23bdffe8	addi	r29,r29,#-24
 5975  00005a20  afaa0000	sw	(r29),r10
 5976  00005a24  23c1ff8c	addi	r1,r30,#-116
 5977  00005a28  afa10004	sw	4(r29),r1
 5978  00005a2c  23c1ff88	addi	r1,r30,#-120
 5979  00005a30  afa10008	sw	8(r29),r1
 5980  00005a34  23c1ff84	addi	r1,r30,#-124
 5981  00005a38  afa1000c	sw	12(r29),r1
 5982  00005a3c  23c1ff80	addi	r1,r30,#-128
 5983  00005a40  afa10010	sw	16(r29),r1
 5984  00005a44  23c1ff7c	addi	r1,r30,#-132
 5985  00005a48  afa10014	sw	20(r29),r1
 5986  00005a4c  0c0005d0	jal	_ProcessGetCodeInfo
 5987  00005a50  54000000	nop; not filled.
 5988  00005a54  00014020	add	r8,r0,r1
 5989  00005a58  23bd0018	addi	r29,r29,#24
 5990  00005a5c  69010000	slti	r1,r8,#0
 5991  00005a60  102000bc	beqz	r1,L188_LF5
 5992  00005a64  54000000	nop; not filled.
 5993  00005a68  3c030000	lhi	r3,((_freepcbs_LF5)>>16)&0xffff
 5994  00005a6c  2463fe14	addui	r3,r3,(_freepcbs_LF5)&0xffff
 5995  00005a70  208200a4	addi	r2,r4,#164
 5996  00005a74  8c610004	lw	r1,4(r3)
 5997  00005a78  ac8300ac	sw	172(r4),r3
 5998  00005a7c  ac8100a8	sw	168(r4),r1
 5999  00005a80  8c2b0000	lw	r11,(r1)
 6000  00005a84  ac4b0000	sw	(r2),r11
 6001  00005a88  ac220000	sw	(r1),r2
 6002  00005a8c  8c410000	lw	r1,(r2)
 6003  00005a90  ac220004	sw	4(r1),r2
 6004  00005a94  8c610008	lw	r1,8(r3)
 6005  00005a98  20210001	addi	r1,r1,#1
 6006  00005a9c  ac610008	sw	8(r3),r1
 6007  00005aa0  20020000	addi	r2,r0,#0
 6008  00005aa4  8c8100a0	lw	r1,160(r4)
 6009  00005aa8  0041082a	slt	r1,r2,r1
 6010  00005aac  10200038	beqz	r1,L194_LF5
 6011  00005ab0  54000000	nop; not filled.
 6012  00005ab4  00041820	add	r3,r0,r4
 6013  00005ab8          	L196_LF5:
 6014  00005ab8  23bdfff8	addi	r29,r29,#-8
 6015  00005abc  8c6b0060	lw	r11,96(r3)
 6016  00005ac0  afab0000	sw	(r29),r11
 6017  00005ac4  0fffdbf8	jal	_MemoryFreePte
 6018  00005ac8  54000000	nop; not filled.
 6019  00005acc  23bd0008	addi	r29,r29,#8
 6020  00005ad0  20630004	addi	r3,r3,#4
 6021  00005ad4  20420001	addi	r2,r2,#1
 6022  00005ad8  8c8100a0	lw	r1,160(r4)
 6023  00005adc  0041082a	slt	r1,r2,r1
 6024  00005ae0  1420ffd4	bnez	r1,L196_LF5
 6025  00005ae4  54000000	nop; not filled.
 6026  00005ae8          	L194_LF5:
 6027  00005ae8  23bdfff8	addi	r29,r29,#-8
 6028  00005aec  94810008	lhu	r1,8(r4)
 6029  00005af0  afa10000	sw	(r29),r1
 6030  00005af4  0fffd6fc	jal	_MemoryFreePage
 6031  00005af8  54000000	nop; not filled.
 6032  00005afc  23bd0008	addi	r29,r29,#8
 6033  00005b00  8c81000c	lw	r1,12(r4)
 6034  00005b04  200bffc0	addi	r11,r0,#-64
 6035  00005b08  002b0824	and	r1,r1,r11
 6036  00005b0c  34210001	ori	r1,r1,#1
 6037  00005b10  ac81000c	sw	12(r4),r1
 6038  00005b14  2001ffff	addi	r1,r0,#-1
 6039  00005b18  080004c8	j	L221_LF5
 6040  00005b1c  54000000	nop; not filled.
 6041  00005b20          	L188_LF5:
 6042  00005b20  23bdfff8	addi	r29,r29,#-8
 6043  00005b24  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6044  00005b28  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6045  00005b2c  afa20000	sw	(r29),r2
 6046  00005b30  200b0070	addi	r11,r0,#112
 6047  00005b34  afab0004	sw	4(r29),r11
 6048  00005b38  0fffe2dc	jal	_dindex
 6049  00005b3c  54000000	nop; not filled.
 6050  00005b40  23bd0008	addi	r29,r29,#8
 6051  00005b44  64210000	snei	r1,r1,#0
 6052  00005b48  1420002c	bnez	r1,L200_LF5
 6053  00005b4c  54000000	nop; not filled.
 6054  00005b50  23bdfff8	addi	r29,r29,#-8
 6055  00005b54  afa20000	sw	(r29),r2
 6056  00005b58  200b002b	addi	r11,r0,#43
 6057  00005b5c  afab0004	sw	4(r29),r11
 6058  00005b60  0fffe2b4	jal	_dindex
 6059  00005b64  54000000	nop; not filled.
 6060  00005b68  23bd0008	addi	r29,r29,#8
 6061  00005b6c  64210000	snei	r1,r1,#0
 6062  00005b70  1020002c	beqz	r1,L199_LF5
 6063  00005b74  54000000	nop; not filled.
 6064  00005b78          	L200_LF5:
 6065  00005b78  23bdfff0	addi	r29,r29,#-16
 6066  00005b7c  3c0b0000	lhi	r11,((LC27_LF5)>>16)&0xffff
 6067  00005b80  256bf7d0	addui	r11,r11,(LC27_LF5)&0xffff
 6068  00005b84  afab0000	sw	(r29),r11
 6069  00005b88  afaa0004	sw	4(r29),r10
 6070  00005b8c  8fcbff8c	lw	r11,-116(r30)
 6071  00005b90  afab0008	sw	8(r29),r11
 6072  00005b94  0c004610	jal	_printf
 6073  00005b98  54000000	nop; not filled.
 6074  00005b9c  23bd0010	addi	r29,r29,#16
 6075  00005ba0          	L199_LF5:
 6076  00005ba0  23bdfff8	addi	r29,r29,#-8
 6077  00005ba4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6078  00005ba8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6079  00005bac  afa20000	sw	(r29),r2
 6080  00005bb0  200b0070	addi	r11,r0,#112
 6081  00005bb4  afab0004	sw	4(r29),r11
 6082  00005bb8  0fffe25c	jal	_dindex
 6083  00005bbc  54000000	nop; not filled.
 6084  00005bc0  23bd0008	addi	r29,r29,#8
 6085  00005bc4  64210000	snei	r1,r1,#0
 6086  00005bc8  1420002c	bnez	r1,L202_LF5
 6087  00005bcc  54000000	nop; not filled.
 6088  00005bd0  23bdfff8	addi	r29,r29,#-8
 6089  00005bd4  afa20000	sw	(r29),r2
 6090  00005bd8  200b002b	addi	r11,r0,#43
 6091  00005bdc  afab0004	sw	4(r29),r11
 6092  00005be0  0fffe234	jal	_dindex
 6093  00005be4  54000000	nop; not filled.
 6094  00005be8  23bd0008	addi	r29,r29,#8
 6095  00005bec  64210000	snei	r1,r1,#0
 6096  00005bf0  10200034	beqz	r1,L201_LF5
 6097  00005bf4  54000000	nop; not filled.
 6098  00005bf8          	L202_LF5:
 6099  00005bf8  23bdfff0	addi	r29,r29,#-16
 6100  00005bfc  3c0b0000	lhi	r11,((LC28_LF5)>>16)&0xffff
 6101  00005c00  256bf7ec	addui	r11,r11,(LC28_LF5)&0xffff
 6102  00005c04  afab0000	sw	(r29),r11
 6103  00005c08  afaa0004	sw	4(r29),r10
 6104  00005c0c  8fcbff88	lw	r11,-120(r30)
 6105  00005c10  afab0008	sw	8(r29),r11
 6106  00005c14  8fcbff84	lw	r11,-124(r30)
 6107  00005c18  afab000c	sw	12(r29),r11
 6108  00005c1c  0c004588	jal	_printf
 6109  00005c20  54000000	nop; not filled.
 6110  00005c24  23bd0010	addi	r29,r29,#16
 6111  00005c28          	L201_LF5:
 6112  00005c28  23bdfff8	addi	r29,r29,#-8
 6113  00005c2c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6114  00005c30  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6115  00005c34  afa20000	sw	(r29),r2
 6116  00005c38  200b0070	addi	r11,r0,#112
 6117  00005c3c  afab0004	sw	4(r29),r11
 6118  00005c40  0fffe1d4	jal	_dindex
 6119  00005c44  54000000	nop; not filled.
 6120  00005c48  23bd0008	addi	r29,r29,#8
 6121  00005c4c  64210000	snei	r1,r1,#0
 6122  00005c50  1420002c	bnez	r1,L204_LF5
 6123  00005c54  54000000	nop; not filled.
 6124  00005c58  23bdfff8	addi	r29,r29,#-8
 6125  00005c5c  afa20000	sw	(r29),r2
 6126  00005c60  200b002b	addi	r11,r0,#43
 6127  00005c64  afab0004	sw	4(r29),r11
 6128  00005c68  0fffe1ac	jal	_dindex
 6129  00005c6c  54000000	nop; not filled.
 6130  00005c70  23bd0008	addi	r29,r29,#8
 6131  00005c74  64210000	snei	r1,r1,#0
 6132  00005c78  10200034	beqz	r1,L203_LF5
 6133  00005c7c  54000000	nop; not filled.
 6134  00005c80          	L204_LF5:
 6135  00005c80  23bdfff0	addi	r29,r29,#-16
 6136  00005c84  3c0b0000	lhi	r11,((LC29_LF5)>>16)&0xffff
 6137  00005c88  256bf814	addui	r11,r11,(LC29_LF5)&0xffff
 6138  00005c8c  afab0000	sw	(r29),r11
 6139  00005c90  afaa0004	sw	4(r29),r10
 6140  00005c94  8fcbff80	lw	r11,-128(r30)
 6141  00005c98  afab0008	sw	8(r29),r11
 6142  00005c9c  8fcbff7c	lw	r11,-132(r30)
 6143  00005ca0  afab000c	sw	12(r29),r11
 6144  00005ca4  0c004500	jal	_printf
 6145  00005ca8  54000000	nop; not filled.
 6146  00005cac  23bd0010	addi	r29,r29,#16
 6147  00005cb0          	L203_LF5:
 6148  00005cb0  23c3ff90	addi	r3,r30,#-112
 6149  00005cb4  23c9ff78	addi	r9,r30,#-136
 6150  00005cb8  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 6151  00005cbc  24e7fd46	addui	r7,r7,(_debugstr)&0xffff
 6152  00005cc0          	L205_LF5:
 6153  00005cc0  23bdfff0	addi	r29,r29,#-16
 6154  00005cc4  afa80000	sw	(r29),r8
 6155  00005cc8  afa30004	sw	4(r29),r3
 6156  00005ccc  afa90008	sw	8(r29),r9
 6157  00005cd0  200b0064	addi	r11,r0,#100
 6158  00005cd4  afab000c	sw	12(r29),r11
 6159  00005cd8  0c0007a4	jal	_ProcessGetFromFile
 6160  00005cdc  54000000	nop; not filled.
 6161  00005ce0  00011020	add	r2,r0,r1
 6162  00005ce4  23bd0010	addi	r29,r29,#16
 6163  00005ce8  6c410000	sgti	r1,r2,#0
 6164  00005cec  102000b0	beqz	r1,L206_LF5
 6165  00005cf0  54000000	nop; not filled.
 6166  00005cf4  23bdfff8	addi	r29,r29,#-8
 6167  00005cf8  afa70000	sw	(r29),r7
 6168  00005cfc  200b0070	addi	r11,r0,#112
 6169  00005d00  afab0004	sw	4(r29),r11
 6170  00005d04  0fffe110	jal	_dindex
 6171  00005d08  54000000	nop; not filled.
 6172  00005d0c  23bd0008	addi	r29,r29,#8
 6173  00005d10  64210000	snei	r1,r1,#0
 6174  00005d14  1420002c	bnez	r1,L209_LF5
 6175  00005d18  54000000	nop; not filled.
 6176  00005d1c  23bdfff8	addi	r29,r29,#-8
 6177  00005d20  afa70000	sw	(r29),r7
 6178  00005d24  200b002b	addi	r11,r0,#43
 6179  00005d28  afab0004	sw	4(r29),r11
 6180  00005d2c  0fffe0e8	jal	_dindex
 6181  00005d30  54000000	nop; not filled.
 6182  00005d34  23bd0008	addi	r29,r29,#8
 6183  00005d38  64210000	snei	r1,r1,#0
 6184  00005d3c  10200030	beqz	r1,L208_LF5
 6185  00005d40  54000000	nop; not filled.
 6186  00005d44          	L209_LF5:
 6187  00005d44  23bdfff0	addi	r29,r29,#-16
 6188  00005d48  3c0b0000	lhi	r11,((LC30_LF5)>>16)&0xffff
 6189  00005d4c  256bf83c	addui	r11,r11,(LC30_LF5)&0xffff
 6190  00005d50  afab0000	sw	(r29),r11
 6191  00005d54  afa20004	sw	4(r29),r2
 6192  00005d58  8fc1ff78	lw	r1,-136(r30)
 6193  00005d5c  00220822	sub	r1,r1,r2
 6194  00005d60  afa10008	sw	8(r29),r1
 6195  00005d64  0c004440	jal	_printf
 6196  00005d68  54000000	nop; not filled.
 6197  00005d6c  23bd0010	addi	r29,r29,#16
 6198  00005d70          	L208_LF5:
 6199  00005d70  23bdfff0	addi	r29,r29,#-16
 6200  00005d74  afa40000	sw	(r29),r4
 6201  00005d78  afa30004	sw	4(r29),r3
 6202  00005d7c  8fc1ff78	lw	r1,-136(r30)
 6203  00005d80  00220822	sub	r1,r1,r2
 6204  00005d84  afa10008	sw	8(r29),r1
 6205  00005d88  afa2000c	sw	12(r29),r2
 6206  00005d8c  0fffd6b0	jal	_MemoryCopySystemToUser
 6207  00005d90  54000000	nop; not filled.
 6208  00005d94  23bd0010	addi	r29,r29,#16
 6209  00005d98  0bffff24	j	L205_LF5
 6210  00005d9c  54000000	nop; not filled.
 6211  00005da0          	L206_LF5:
 6212  00005da0  23bdfff8	addi	r29,r29,#-8
 6213  00005da4  afa80000	sw	(r29),r8
 6214  00005da8  0fffbd48	jal	_FsClose
 6215  00005dac  54000000	nop; not filled.
 6216  00005db0  200b0100	addi	r11,r0,#256
 6217  00005db4  acab012c	sw	300(r5),r11
 6218  00005db8  240bffe0	addui	r11,r0,#65504
 6219  00005dbc  acab009c	sw	156(r5),r11
 6220  00005dc0  23bdfff8	addi	r29,r29,#-8
 6221  00005dc4  afa40000	sw	(r29),r4
 6222  00005dc8  23c10004	addi	r1,r30,#4
 6223  00005dcc  afa10004	sw	4(r29),r1
 6224  00005dd0  8cab009c	lw	r11,156(r5)
 6225  00005dd4  afab0008	sw	8(r29),r11
 6226  00005dd8  200b0004	addi	r11,r0,#4
 6227  00005ddc  afab000c	sw	12(r29),r11
 6228  00005de0  0fffd65c	jal	_MemoryCopySystemToUser
 6229  00005de4  54000000	nop; not filled.
 6230  00005de8  8fcbff8c	lw	r11,-116(r30)
 6231  00005dec  acab0128	sw	296(r5),r11
 6232  00005df0  8c81000c	lw	r1,12(r4)
 6233  00005df4  34210200	ori	r1,r1,#512
 6234  00005df8  ac81000c	sw	12(r4),r1
 6235  00005dfc  23bd0010	addi	r29,r29,#16
 6236  00005e00  0800003c	j	L210_LF5
 6237  00005e04  54000000	nop; not filled.
 6238  00005e08          	L185_LF5:
 6239  00005e08  3c0b0000	lhi	r11,((_ProcessExit_LF5)>>16)&0xffff
 6240  00005e0c  256b7468	addui	r11,r11,(_ProcessExit_LF5)&0xffff
 6241  00005e10  acab00a4	sw	164(r5),r11
 6242  00005e14  8c810008	lw	r1,8(r4)
 6243  00005e18  2421ffe0	addui	r1,r1,#65504
 6244  00005e1c  aca1009c	sw	156(r5),r1
 6245  00005e20  8fcb0004	lw	r11,4(r30)
 6246  00005e24  ac2b0000	sw	(r1),r11
 6247  00005e28  aca80128	sw	296(r5),r8
 6248  00005e2c  200b0140	addi	r11,r0,#320
 6249  00005e30  acab012c	sw	300(r5),r11
 6250  00005e34  8c81000c	lw	r1,12(r4)
 6251  00005e38  34210100	ori	r1,r1,#256
 6252  00005e3c  ac81000c	sw	12(r4),r1
 6253  00005e40          	L210_LF5:
 6254  00005e40  23bdfff8	addi	r29,r29,#-8
 6255  00005e44  200b000f	addi	r11,r0,#15
 6256  00005e48  afab0000	sw	(r29),r11
 6257  00005e4c  0fffb438	jal	_SetIntrs
 6258  00005e50  54000000	nop; not filled.
 6259  00005e54  23bd0008	addi	r29,r29,#8
 6260  00005e58  3c030000	lhi	r3,((_runQueue_LF5)>>16)&0xffff
 6261  00005e5c  2463fe20	addui	r3,r3,(_runQueue_LF5)&0xffff
 6262  00005e60  8c620004	lw	r2,4(r3)
 6263  00005e64  acc30008	sw	8(r6),r3
 6264  00005e68  acc20004	sw	4(r6),r2
 6265  00005e6c  8c4b0000	lw	r11,(r2)
 6266  00005e70  accb0000	sw	(r6),r11
 6267  00005e74  ac460000	sw	(r2),r6
 6268  00005e78  8cc20000	lw	r2,(r6)
 6269  00005e7c  ac460004	sw	4(r2),r6
 6270  00005e80  8c620008	lw	r2,8(r3)
 6271  00005e84  20420001	addi	r2,r2,#1
 6272  00005e88  ac620008	sw	8(r3),r2
 6273  00005e8c  23bdfff8	addi	r29,r29,#-8
 6274  00005e90  afa10000	sw	(r29),r1
 6275  00005e94  0fffb3f0	jal	_SetIntrs
 6276  00005e98  54000000	nop; not filled.
 6277  00005e9c  23bd0008	addi	r29,r29,#8
 6278  00005ea0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 6279  00005ea4  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 6280  00005ea8  8c210000	lw	r1,(r1)
 6281  00005eac  64210000	snei	r1,r1,#0
 6282  00005eb0  14200090	bnez	r1,L216_LF5
 6283  00005eb4  54000000	nop; not filled.
 6284  00005eb8  23bdfff8	addi	r29,r29,#-8
 6285  00005ebc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6286  00005ec0  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6287  00005ec4  afa20000	sw	(r29),r2
 6288  00005ec8  200b0070	addi	r11,r0,#112
 6289  00005ecc  afab0004	sw	4(r29),r11
 6290  00005ed0  0fffdf44	jal	_dindex
 6291  00005ed4  54000000	nop; not filled.
 6292  00005ed8  23bd0008	addi	r29,r29,#8
 6293  00005edc  64210000	snei	r1,r1,#0
 6294  00005ee0  1420002c	bnez	r1,L218_LF5
 6295  00005ee4  54000000	nop; not filled.
 6296  00005ee8  23bdfff8	addi	r29,r29,#-8
 6297  00005eec  afa20000	sw	(r29),r2
 6298  00005ef0  200b002b	addi	r11,r0,#43
 6299  00005ef4  afab0004	sw	4(r29),r11
 6300  00005ef8  0fffdf1c	jal	_dindex
 6301  00005efc  54000000	nop; not filled.
 6302  00005f00  23bd0008	addi	r29,r29,#8
 6303  00005f04  64210000	snei	r1,r1,#0
 6304  00005f08  1020002c	beqz	r1,L217_LF5
 6305  00005f0c  54000000	nop; not filled.
 6306  00005f10          	L218_LF5:
 6307  00005f10  23bdfff0	addi	r29,r29,#-16
 6308  00005f14  3c0b0000	lhi	r11,((LC31_LF5)>>16)&0xffff
 6309  00005f18  256bf860	addui	r11,r11,(LC31_LF5)&0xffff
 6310  00005f1c  afab0000	sw	(r29),r11
 6311  00005f20  afa40004	sw	4(r29),r4
 6312  00005f24  8c8b0000	lw	r11,(r4)
 6313  00005f28  afab0008	sw	8(r29),r11
 6314  00005f2c  0c004278	jal	_printf
 6315  00005f30  54000000	nop; not filled.
 6316  00005f34  23bd0010	addi	r29,r29,#16
 6317  00005f38          	L217_LF5:
 6318  00005f38  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 6319  00005f3c  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 6320  00005f40  ac240000	sw	(r1),r4
 6321  00005f44          	L216_LF5:
 6322  00005f44  23bdfff8	addi	r29,r29,#-8
 6323  00005f48  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6324  00005f4c  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6325  00005f50  afa20000	sw	(r29),r2
 6326  00005f54  200b0070	addi	r11,r0,#112
 6327  00005f58  afab0004	sw	4(r29),r11
 6328  00005f5c  0fffdeb8	jal	_dindex
 6329  00005f60  54000000	nop; not filled.
 6330  00005f64  23bd0008	addi	r29,r29,#8
 6331  00005f68  64210000	snei	r1,r1,#0
 6332  00005f6c  1420002c	bnez	r1,L220_LF5
 6333  00005f70  54000000	nop; not filled.
 6334  00005f74  23bdfff8	addi	r29,r29,#-8
 6335  00005f78  afa20000	sw	(r29),r2
 6336  00005f7c  200b002b	addi	r11,r0,#43
 6337  00005f80  afab0004	sw	4(r29),r11
 6338  00005f84  0fffde90	jal	_dindex
 6339  00005f88  54000000	nop; not filled.
 6340  00005f8c  23bd0008	addi	r29,r29,#8
 6341  00005f90  64210000	snei	r1,r1,#0
 6342  00005f94  10200024	beqz	r1,L219_LF5
 6343  00005f98  54000000	nop; not filled.
 6344  00005f9c          	L220_LF5:
 6345  00005f9c  23bdfff8	addi	r29,r29,#-8
 6346  00005fa0  3c0b0000	lhi	r11,((LC32_LF5)>>16)&0xffff
 6347  00005fa4  256bf88c	addui	r11,r11,(LC32_LF5)&0xffff
 6348  00005fa8  afab0000	sw	(r29),r11
 6349  00005fac  afaa0004	sw	4(r29),r10
 6350  00005fb0  0c0041f4	jal	_printf
 6351  00005fb4  54000000	nop; not filled.
 6352  00005fb8  23bd0008	addi	r29,r29,#8
 6353  00005fbc          	L219_LF5:
 6354  00005fbc  3c0b0000	lhi	r11,((_pcbs_LF5)>>16)&0xffff
 6355  00005fc0  256bfe44	addui	r11,r11,(_pcbs_LF5)&0xffff
 6356  00005fc4  008b1022	sub	r2,r4,r11
 6357  00005fc8  3c01a4fa	lhi	r1,#-23302
 6358  00005fcc  24214fa5	addui	r1,r1,#20389
 6359  00005fd0  00400035	movi2fp	f0,r2
 6360  00005fd4  00200835	movi2fp	f1,r1
 6361  00005fd8  0401000e	mult	f0,f0,f1
 6362  00005fdc  00000834	movfp2i	r1,f0
 6363  00005fe0  5c210002	srai	r1,r1,#0x2
 6364  00005fe4          	L221_LF5:
 6365  00005fe4  8fa20000	lw	r2,0(r29)
 6366  00005fe8  8fa30004	lw	r3,4(r29)
 6367  00005fec  8fa40008	lw	r4,8(r29)
 6368  00005ff0  8fa5000c	lw	r5,12(r29)
 6369  00005ff4  8fa60010	lw	r6,16(r29)
 6370  00005ff8  8fa70014	lw	r7,20(r29)
 6371  00005ffc  8fa80018	lw	r8,24(r29)
 6372  00006000  8fa9001c	lw	r9,28(r29)
 6373  00006004  8faa0020	lw	r10,32(r29)
 6374  00006008  8fab0024	lw	r11,36(r29)
 6375  0000600c  8fdffff8	lw	r31,-8(r30)
 6376  00006010  001ee820	add	r29,r0,r30
 6377  00006014  8fdefffc	lw	r30,-4(r30)
 6378  00006018  4be00000	jr	r31
 6379  0000601c  54000000	nop
 6380  00006020          	.endproc _ProcessFork
 6381  00006020          	.data
 6382  0000f8a6          	.align 2
 6383  0000f8a8          	LC33_LF5:
 6384  0000f8a8  50726f63	.ascii "ProcessGetCodeInfo: open of %s failed (%d).\n\000"
 6384  0000f8ac  65737347	
 6384  0000f8b0  6574436f	
 6384  0000f8b4  6465496e	
 6384  0000f8b8  666f3a20	
 6384  0000f8bc  6f70656e	
 6384  0000f8c0  206f6620	
 6384  0000f8c4  25732066	
 6384  0000f8c8  61696c65	
 6384  0000f8cc  64202825	
 6384  0000f8d0  64292e0a	
 6384  0000f8d4  00      	
 6385  0000f8d5          	.align 2
 6386  0000f8d8          	LC34_LF5:
 6387  0000f8d8  46696c65	.ascii "File descriptor is now %d.\n\000"
 6387  0000f8dc  20646573	
 6387  0000f8e0  63726970	
 6387  0000f8e4  746f7220	
 6387  0000f8e8  6973206e	
 6387  0000f8ec  6f772025	
 6387  0000f8f0  642e0a00	
 6388  0000f8f4          	.align 2
 6389  0000f8f4          	LC35_LF5:
 6390  0000f8f4  50726f63	.ascii "ProcessGetCodeInfo: read got %d (not %d) bytes from %s\n\000"
 6390  0000f8f8  65737347	
 6390  0000f8fc  6574436f	
 6390  0000f900  6465496e	
 6390  0000f904  666f3a20	
 6390  0000f908  72656164	
 6390  0000f90c  20676f74	
 6390  0000f910  20256420	
 6390  0000f914  286e6f74	
 6390  0000f918  20256429	
 6390  0000f91c  20627974	
 6390  0000f920  65732066	
 6390  0000f924  726f6d20	
 6390  0000f928  25730a00	
 6391  0000f92c          	.align 2
 6392  0000f92c          	LC36_LF5:
 6393  0000f92c  73746172	.ascii "start:\000"
 6393  0000f930  743a00  	
 6394  0000f933          	.align 2
 6395  0000f934          	LC37_LF5:
 6396  0000f934  50726f63	.ascii "ProcessGetCodeInfo: %s missing start line (not a DLX executable?)\n\000"
 6396  0000f938  65737347	
 6396  0000f93c  6574436f	
 6396  0000f940  6465496e	
 6396  0000f944  666f3a20	
 6396  0000f948  2573206d	
 6396  0000f94c  69737369	
 6396  0000f950  6e672073	
 6396  0000f954  74617274	
 6396  0000f958  206c696e	
 6396  0000f95c  6520286e	
 6396  0000f960  6f742061	
 6396  0000f964  20444c58	
 6396  0000f968  20657865	
 6396  0000f96c  63757461	
 6396  0000f970  626c653f	
 6396  0000f974  290a00  	
 6397  0000f977          	.text
 6398  00006020          	.align 2
 6399  00006020          	.proc _ProcessGetCodeInfo
 6400  00006020          	.global _ProcessGetCodeInfo
 6401  00006020          	_ProcessGetCodeInfo:
 6402                      ;  Function 'ProcessGetCodeInfo'; 112 bytes of locals, 11 regs to save.
 6403  00006020  afbefffc	sw	-4(r29),r30; push fp
 6404  00006024  001df020	add	r30,r0,r29; fp = sp
 6405  00006028  afbffff8	sw	-8(r29),r31; push ret addr
 6406  0000602c  2fbd00a8	subui	r29,r29,#168; alloc local storage
 6407  00006030  afa20000	sw	0(r29),r2
 6408  00006034  afa30004	sw	4(r29),r3
 6409  00006038  afa40008	sw	8(r29),r4
 6410  0000603c  afa5000c	sw	12(r29),r5
 6411  00006040  afa60010	sw	16(r29),r6
 6412  00006044  afa70014	sw	20(r29),r7
 6413  00006048  afa80018	sw	24(r29),r8
 6414  0000604c  afa9001c	sw	28(r29),r9
 6415  00006050  afaa0020	sw	32(r29),r10
 6416  00006054  afab0024	sw	36(r29),r11
 6417  00006058  afac0028	sw	40(r29),r12
 6418  0000605c  8fc60000	lw	r6,(r30)
 6419  00006060  8fc70004	lw	r7,4(r30)
 6420  00006064  8fc80008	lw	r8,8(r30)
 6421  00006068  8fc9000c	lw	r9,12(r30)
 6422  0000606c  8fca0010	lw	r10,16(r30)
 6423  00006070  8fcb0014	lw	r11,20(r30)
 6424  00006074  23bdfff8	addi	r29,r29,#-8
 6425  00006078  afa60000	sw	(r29),r6
 6426  0000607c  200c0001	addi	r12,r0,#1
 6427  00006080  afac0004	sw	4(r29),r12
 6428  00006084  0fffb710	jal	_FsOpen
 6429  00006088  54000000	nop; not filled.
 6430  0000608c  00011820	add	r3,r0,r1
 6431  00006090  23bd0008	addi	r29,r29,#8
 6432  00006094  68610000	slti	r1,r3,#0
 6433  00006098  10200088	beqz	r1,L230_LF5
 6434  0000609c  54000000	nop; not filled.
 6435  000060a0  23bdfff8	addi	r29,r29,#-8
 6436  000060a4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6437  000060a8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6438  000060ac  afa20000	sw	(r29),r2
 6439  000060b0  200c0066	addi	r12,r0,#102
 6440  000060b4  afac0004	sw	4(r29),r12
 6441  000060b8  0fffdd5c	jal	_dindex
 6442  000060bc  54000000	nop; not filled.
 6443  000060c0  23bd0008	addi	r29,r29,#8
 6444  000060c4  64210000	snei	r1,r1,#0
 6445  000060c8  1420002c	bnez	r1,L232_LF5
 6446  000060cc  54000000	nop; not filled.
 6447  000060d0  23bdfff8	addi	r29,r29,#-8
 6448  000060d4  afa20000	sw	(r29),r2
 6449  000060d8  200c002b	addi	r12,r0,#43
 6450  000060dc  afac0004	sw	4(r29),r12
 6451  000060e0  0fffdd34	jal	_dindex
 6452  000060e4  54000000	nop; not filled.
 6453  000060e8  23bd0008	addi	r29,r29,#8
 6454  000060ec  64210000	snei	r1,r1,#0
 6455  000060f0  10200224	beqz	r1,L239_LF5
 6456  000060f4  54000000	nop; not filled.
 6457  000060f8          	L232_LF5:
 6458  000060f8  23bdfff0	addi	r29,r29,#-16
 6459  000060fc  3c0c0000	lhi	r12,((LC33_LF5)>>16)&0xffff
 6460  00006100  258cf8a8	addui	r12,r12,(LC33_LF5)&0xffff
 6461  00006104  afac0000	sw	(r29),r12
 6462  00006108  afa60004	sw	4(r29),r6
 6463  0000610c  afa30008	sw	8(r29),r3
 6464  00006110  0c004094	jal	_printf
 6465  00006114  54000000	nop; not filled.
 6466  00006118  23bd0010	addi	r29,r29,#16
 6467  0000611c  080001f8	j	L239_LF5
 6468  00006120  54000000	nop; not filled.
 6469  00006124          	L230_LF5:
 6470  00006124  23bdfff8	addi	r29,r29,#-8
 6471  00006128  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6472  0000612c  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6473  00006130  afa20000	sw	(r29),r2
 6474  00006134  200c0066	addi	r12,r0,#102
 6475  00006138  afac0004	sw	4(r29),r12
 6476  0000613c  0fffdcd8	jal	_dindex
 6477  00006140  54000000	nop; not filled.
 6478  00006144  23bd0008	addi	r29,r29,#8
 6479  00006148  64210000	snei	r1,r1,#0
 6480  0000614c  1420002c	bnez	r1,L234_LF5
 6481  00006150  54000000	nop; not filled.
 6482  00006154  23bdfff8	addi	r29,r29,#-8
 6483  00006158  afa20000	sw	(r29),r2
 6484  0000615c  200c002b	addi	r12,r0,#43
 6485  00006160  afac0004	sw	4(r29),r12
 6486  00006164  0fffdcb0	jal	_dindex
 6487  00006168  54000000	nop; not filled.
 6488  0000616c  23bd0008	addi	r29,r29,#8
 6489  00006170  64210000	snei	r1,r1,#0
 6490  00006174  10200024	beqz	r1,L233_LF5
 6491  00006178  54000000	nop; not filled.
 6492  0000617c          	L234_LF5:
 6493  0000617c  23bdfff8	addi	r29,r29,#-8
 6494  00006180  3c0c0000	lhi	r12,((LC34_LF5)>>16)&0xffff
 6495  00006184  258cf8d8	addui	r12,r12,(LC34_LF5)&0xffff
 6496  00006188  afac0000	sw	(r29),r12
 6497  0000618c  afa30004	sw	4(r29),r3
 6498  00006190  0c004014	jal	_printf
 6499  00006194  54000000	nop; not filled.
 6500  00006198  23bd0008	addi	r29,r29,#8
 6501  0000619c          	L233_LF5:
 6502  0000619c  23bdfff0	addi	r29,r29,#-16
 6503  000061a0  afa30000	sw	(r29),r3
 6504  000061a4  23c4ff90	addi	r4,r30,#-112
 6505  000061a8  afa40004	sw	4(r29),r4
 6506  000061ac  200c0064	addi	r12,r0,#100
 6507  000061b0  afac0008	sw	8(r29),r12
 6508  000061b4  0fffba44	jal	_FsRead
 6509  000061b8  54000000	nop; not filled.
 6510  000061bc  00012820	add	r5,r0,r1
 6511  000061c0  23bd0010	addi	r29,r29,#16
 6512  000061c4  64a10064	snei	r1,r5,#100
 6513  000061c8  102000a8	beqz	r1,L235_LF5
 6514  000061cc  54000000	nop; not filled.
 6515  000061d0  23bdfff8	addi	r29,r29,#-8
 6516  000061d4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6517  000061d8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6518  000061dc  afa20000	sw	(r29),r2
 6519  000061e0  200c0066	addi	r12,r0,#102
 6520  000061e4  afac0004	sw	4(r29),r12
 6521  000061e8  0fffdc2c	jal	_dindex
 6522  000061ec  54000000	nop; not filled.
 6523  000061f0  23bd0008	addi	r29,r29,#8
 6524  000061f4  64210000	snei	r1,r1,#0
 6525  000061f8  1420002c	bnez	r1,L237_LF5
 6526  000061fc  54000000	nop; not filled.
 6527  00006200  23bdfff8	addi	r29,r29,#-8
 6528  00006204  afa20000	sw	(r29),r2
 6529  00006208  200c002b	addi	r12,r0,#43
 6530  0000620c  afac0004	sw	4(r29),r12
 6531  00006210  0fffdc04	jal	_dindex
 6532  00006214  54000000	nop; not filled.
 6533  00006218  23bd0008	addi	r29,r29,#8
 6534  0000621c  64210000	snei	r1,r1,#0
 6535  00006220  10200030	beqz	r1,L236_LF5
 6536  00006224  54000000	nop; not filled.
 6537  00006228          	L237_LF5:
 6538  00006228  23bdfff0	addi	r29,r29,#-16
 6539  0000622c  3c0c0000	lhi	r12,((LC35_LF5)>>16)&0xffff
 6540  00006230  258cf8f4	addui	r12,r12,(LC35_LF5)&0xffff
 6541  00006234  afac0000	sw	(r29),r12
 6542  00006238  afa50004	sw	4(r29),r5
 6543  0000623c  200c0064	addi	r12,r0,#100
 6544  00006240  afac0008	sw	8(r29),r12
 6545  00006244  afa6000c	sw	12(r29),r6
 6546  00006248  0c003f5c	jal	_printf
 6547  0000624c  54000000	nop; not filled.
 6548  00006250  23bd0010	addi	r29,r29,#16
 6549  00006254          	L236_LF5:
 6550  00006254  23bdfff8	addi	r29,r29,#-8
 6551  00006258  afa30000	sw	(r29),r3
 6552  0000625c  0fffb894	jal	_FsClose
 6553  00006260  54000000	nop; not filled.
 6554  00006264  2001ffff	addi	r1,r0,#-1
 6555  00006268  23bd0008	addi	r29,r29,#8
 6556  0000626c  080001d0	j	L229_LF5
 6557  00006270  54000000	nop; not filled.
 6558  00006274          	L235_LF5:
 6559  00006274  23bdfff8	addi	r29,r29,#-8
 6560  00006278  afa40000	sw	(r29),r4
 6561  0000627c  3c010000	lhi	r1,((LC36_LF5)>>16)&0xffff
 6562  00006280  2421f92c	addui	r1,r1,(LC36_LF5)&0xffff
 6563  00006284  afa10004	sw	4(r29),r1
 6564  00006288  0fffd974	jal	_dstrstr
 6565  0000628c  54000000	nop; not filled.
 6566  00006290  23bd0008	addi	r29,r29,#8
 6567  00006294  64210000	snei	r1,r1,#0
 6568  00006298  14200088	bnez	r1,L238_LF5
 6569  0000629c  54000000	nop; not filled.
 6570  000062a0  23bdfff8	addi	r29,r29,#-8
 6571  000062a4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6572  000062a8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6573  000062ac  afa20000	sw	(r29),r2
 6574  000062b0  200c0066	addi	r12,r0,#102
 6575  000062b4  afac0004	sw	4(r29),r12
 6576  000062b8  0fffdb5c	jal	_dindex
 6577  000062bc  54000000	nop; not filled.
 6578  000062c0  23bd0008	addi	r29,r29,#8
 6579  000062c4  64210000	snei	r1,r1,#0
 6580  000062c8  1420002c	bnez	r1,L240_LF5
 6581  000062cc  54000000	nop; not filled.
 6582  000062d0  23bdfff8	addi	r29,r29,#-8
 6583  000062d4  afa20000	sw	(r29),r2
 6584  000062d8  200c002b	addi	r12,r0,#43
 6585  000062dc  afac0004	sw	4(r29),r12
 6586  000062e0  0fffdb34	jal	_dindex
 6587  000062e4  54000000	nop; not filled.
 6588  000062e8  23bd0008	addi	r29,r29,#8
 6589  000062ec  64210000	snei	r1,r1,#0
 6590  000062f0  10200024	beqz	r1,L239_LF5
 6591  000062f4  54000000	nop; not filled.
 6592  000062f8          	L240_LF5:
 6593  000062f8  23bdfff8	addi	r29,r29,#-8
 6594  000062fc  3c0c0000	lhi	r12,((LC37_LF5)>>16)&0xffff
 6595  00006300  258cf934	addui	r12,r12,(LC37_LF5)&0xffff
 6596  00006304  afac0000	sw	(r29),r12
 6597  00006308  afa60004	sw	4(r29),r6
 6598  0000630c  0c003e98	jal	_printf
 6599  00006310  54000000	nop; not filled.
 6600  00006314  23bd0008	addi	r29,r29,#8
 6601  00006318          	L239_LF5:
 6602  00006318  2001ffff	addi	r1,r0,#-1
 6603  0000631c  08000120	j	L229_LF5
 6604  00006320  54000000	nop; not filled.
 6605  00006324          	L238_LF5:
 6606  00006324  23bdfff8	addi	r29,r29,#-8
 6607  00006328  afa40000	sw	(r29),r4
 6608  0000632c  200c003a	addi	r12,r0,#58
 6609  00006330  afac0004	sw	4(r29),r12
 6610  00006334  0fffdae0	jal	_dindex
 6611  00006338  54000000	nop; not filled.
 6612  0000633c  20210001	addi	r1,r1,#1
 6613  00006340  afc1ff8c	sw	-116(r30),r1
 6614  00006344  23bdfff8	addi	r29,r29,#-8
 6615  00006348  afa10000	sw	(r29),r1
 6616  0000634c  23c2ff8c	addi	r2,r30,#-116
 6617  00006350  afa20004	sw	4(r29),r2
 6618  00006354  200c0010	addi	r12,r0,#16
 6619  00006358  afac0008	sw	8(r29),r12
 6620  0000635c  0fffdc40	jal	_dstrtol
 6621  00006360  54000000	nop; not filled.
 6622  00006364  ace10000	sw	(r7),r1
 6623  00006368  8fccff8c	lw	r12,-116(r30)
 6624  0000636c  afac0000	sw	(r29),r12
 6625  00006370  afa20004	sw	4(r29),r2
 6626  00006374  200c0010	addi	r12,r0,#16
 6627  00006378  afac0008	sw	8(r29),r12
 6628  0000637c  0fffdc20	jal	_dstrtol
 6629  00006380  54000000	nop; not filled.
 6630  00006384  8fccff8c	lw	r12,-116(r30)
 6631  00006388  afac0000	sw	(r29),r12
 6632  0000638c  afa20004	sw	4(r29),r2
 6633  00006390  200c0010	addi	r12,r0,#16
 6634  00006394  afac0008	sw	8(r29),r12
 6635  00006398  0fffdc04	jal	_dstrtol
 6636  0000639c  54000000	nop; not filled.
 6637  000063a0  ad010000	sw	(r8),r1
 6638  000063a4  8fccff8c	lw	r12,-116(r30)
 6639  000063a8  afac0000	sw	(r29),r12
 6640  000063ac  afa20004	sw	4(r29),r2
 6641  000063b0  200c0010	addi	r12,r0,#16
 6642  000063b4  afac0008	sw	8(r29),r12
 6643  000063b8  0fffdbe4	jal	_dstrtol
 6644  000063bc  54000000	nop; not filled.
 6645  000063c0  ad210000	sw	(r9),r1
 6646  000063c4  8fccff8c	lw	r12,-116(r30)
 6647  000063c8  afac0000	sw	(r29),r12
 6648  000063cc  afa20004	sw	4(r29),r2
 6649  000063d0  200c0010	addi	r12,r0,#16
 6650  000063d4  afac0008	sw	8(r29),r12
 6651  000063d8  0fffdbc4	jal	_dstrtol
 6652  000063dc  54000000	nop; not filled.
 6653  000063e0  ad410000	sw	(r10),r1
 6654  000063e4  8fccff8c	lw	r12,-116(r30)
 6655  000063e8  afac0000	sw	(r29),r12
 6656  000063ec  afa20004	sw	4(r29),r2
 6657  000063f0  200c0010	addi	r12,r0,#16
 6658  000063f4  afac0008	sw	8(r29),r12
 6659  000063f8  0fffdba4	jal	_dstrtol
 6660  000063fc  54000000	nop; not filled.
 6661  00006400  ad610000	sw	(r11),r1
 6662  00006404  afa40000	sw	(r29),r4
 6663  00006408  200c000a	addi	r12,r0,#10
 6664  0000640c  afac0004	sw	4(r29),r12
 6665  00006410  0fffda04	jal	_dindex
 6666  00006414  54000000	nop; not filled.
 6667  00006418  23c2ff8f	addi	r2,r30,#-113
 6668  0000641c  00220822	sub	r1,r1,r2
 6669  00006420  afa30000	sw	(r29),r3
 6670  00006424  afa10004	sw	4(r29),r1
 6671  00006428  200c0000	addi	r12,r0,#0
 6672  0000642c  afac0008	sw	8(r29),r12
 6673  00006430  0fffb9c0	jal	_FsSeek
 6674  00006434  54000000	nop; not filled.
 6675  00006438  00030820	add	r1,r0,r3
 6676  0000643c  23bd0010	addi	r29,r29,#16
 6677  00006440          	L229_LF5:
 6678  00006440  8fa20000	lw	r2,0(r29)
 6679  00006444  8fa30004	lw	r3,4(r29)
 6680  00006448  8fa40008	lw	r4,8(r29)
 6681  0000644c  8fa5000c	lw	r5,12(r29)
 6682  00006450  8fa60010	lw	r6,16(r29)
 6683  00006454  8fa70014	lw	r7,20(r29)
 6684  00006458  8fa80018	lw	r8,24(r29)
 6685  0000645c  8fa9001c	lw	r9,28(r29)
 6686  00006460  8faa0020	lw	r10,32(r29)
 6687  00006464  8fab0024	lw	r11,36(r29)
 6688  00006468  8fac0028	lw	r12,40(r29)
 6689  0000646c  8fdffff8	lw	r31,-8(r30)
 6690  00006470  001ee820	add	r29,r0,r30
 6691  00006474  8fdefffc	lw	r30,-4(r30)
 6692  00006478  4be00000	jr	r31
 6693  0000647c  54000000	nop
 6694  00006480          	.endproc _ProcessGetCodeInfo
 6695  00006480          	.data
 6696  0000f977          	.align 2
 6697  0000f978          	LC38_LF5:
 6698  0000f978  476f7420	.ascii "Got %d bytes at offset %d ...\000"
 6698  0000f97c  25642062	
 6698  0000f980  79746573	
 6698  0000f984  20617420	
 6698  0000f988  6f666673	
 6698  0000f98c  65742025	
 6698  0000f990  64202e2e	
 6698  0000f994  2e00    	
 6699  0000f996          	.align 2
 6700  0000f998          	LC39_LF5:
 6701  0000f998  20746572	.ascii " terminated at %d.\n\000"
 6701  0000f99c  6d696e61	
 6701  0000f9a0  74656420	
 6701  0000f9a4  61742025	
 6701  0000f9a8  642e0a00	
 6702  0000f9ac          	.align 2
 6703  0000f9ac          	LC40_LF5:
 6704  0000f9ac  42756666	.ascii "Buffer is \'%s\'\n\000"
 6704  0000f9b0  65722069	
 6704  0000f9b4  73202725	
 6704  0000f9b8  73270a00	
 6705  0000f9bc          	.align 2
 6706  0000f9bc          	LC41_LF5:
 6707  0000f9bc  4e657720	.ascii "New address is 0x%x.\n\000"
 6707  0000f9c0  61646472	
 6707  0000f9c4  65737320	
 6707  0000f9c8  69732030	
 6707  0000f9cc  7825782e	
 6707  0000f9d0  0a00    	
 6708  0000f9d2          	.align 2
 6709  0000f9d4          	LC42_LF5:
 6710  0000f9d4  5365656b	.ascii "Seeking to %d and returning %d bytes!\n\000"
 6710  0000f9d8  696e6720	
 6710  0000f9dc  746f2025	
 6710  0000f9e0  6420616e	
 6710  0000f9e4  64207265	
 6710  0000f9e8  7475726e	
 6710  0000f9ec  696e6720	
 6710  0000f9f0  25642062	
 6710  0000f9f4  79746573	
 6710  0000f9f8  210a00  	
 6711  0000f9fb          	.text
 6712  00006480          	.align 2
 6713  00006480          	.proc _ProcessGetFromFile
 6714  00006480          	.global _ProcessGetFromFile
 6715  00006480          	_ProcessGetFromFile:
 6716                      ;  Function 'ProcessGetFromFile'; 216 bytes of locals, 11 regs to save.
 6717  00006480  afbefffc	sw	-4(r29),r30; push fp
 6718  00006484  001df020	add	r30,r0,r29; fp = sp
 6719  00006488  afbffff8	sw	-8(r29),r31; push ret addr
 6720  0000648c  2fbd0110	subui	r29,r29,#272; alloc local storage
 6721  00006490  afa20000	sw	0(r29),r2
 6722  00006494  afa30004	sw	4(r29),r3
 6723  00006498  afa40008	sw	8(r29),r4
 6724  0000649c  afa5000c	sw	12(r29),r5
 6725  000064a0  afa60010	sw	16(r29),r6
 6726  000064a4  afa70014	sw	20(r29),r7
 6727  000064a8  afa80018	sw	24(r29),r8
 6728  000064ac  afa9001c	sw	28(r29),r9
 6729  000064b0  afaa0020	sw	32(r29),r10
 6730  000064b4  afab0024	sw	36(r29),r11
 6731  000064b8  afac0028	sw	40(r29),r12
 6732  000064bc  8fca0000	lw	r10,(r30)
 6733  000064c0  8fc70008	lw	r7,8(r30)
 6734  000064c4  8fc2000c	lw	r2,12(r30)
 6735  000064c8  8fcb0004	lw	r11,4(r30)
 6736  000064cc  23c3ff28	addi	r3,r30,#-216
 6737  000064d0  afc3ff24	sw	-220(r30),r3
 6738  000064d4  23bdfff0	addi	r29,r29,#-16
 6739  000064d8  afaa0000	sw	(r29),r10
 6740  000064dc  200c0000	addi	r12,r0,#0
 6741  000064e0  afac0004	sw	4(r29),r12
 6742  000064e4  200c0001	addi	r12,r0,#1
 6743  000064e8  afac0008	sw	8(r29),r12
 6744  000064ec  0fffb904	jal	_FsSeek
 6745  000064f0  54000000	nop; not filled.
 6746  000064f4  00014820	add	r9,r0,r1
 6747  000064f8  50420001	slli	r2,r2,#0x1
 6748  000064fc  23bd0010	addi	r29,r29,#16
 6749  00006500  6c4100c8	sgtui	r1,r2,#200
 6750  00006504  10200008	beqz	r1,L243_LF5
 6751  00006508  54000000	nop; not filled.
 6752  0000650c  200200c8	addi	r2,r0,#200
 6753  00006510          	L243_LF5:
 6754  00006510  23bdfff0	addi	r29,r29,#-16
 6755  00006514  afaa0000	sw	(r29),r10
 6756  00006518  afa30004	sw	4(r29),r3
 6757  0000651c  afa20008	sw	8(r29),r2
 6758  00006520  0fffb6d8	jal	_FsRead
 6759  00006524  54000000	nop; not filled.
 6760  00006528  00012820	add	r5,r0,r1
 6761  0000652c  23bd0010	addi	r29,r29,#16
 6762  00006530  70a10000	slei	r1,r5,#0
 6763  00006534  10200010	beqz	r1,L244_LF5
 6764  00006538  54000000	nop; not filled.
 6765  0000653c  20010000	addi	r1,r0,#0
 6766  00006540  08000594	j	L298_LF5
 6767  00006544  54000000	nop; not filled.
 6768  00006548          	L244_LF5:
 6769  00006548  23bdfff8	addi	r29,r29,#-8
 6770  0000654c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6771  00006550  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6772  00006554  afa20000	sw	(r29),r2
 6773  00006558  200c0066	addi	r12,r0,#102
 6774  0000655c  afac0004	sw	4(r29),r12
 6775  00006560  0fffd8b4	jal	_dindex
 6776  00006564  54000000	nop; not filled.
 6777  00006568  23bd0008	addi	r29,r29,#8
 6778  0000656c  64210000	snei	r1,r1,#0
 6779  00006570  1420002c	bnez	r1,L246_LF5
 6780  00006574  54000000	nop; not filled.
 6781  00006578  23bdfff8	addi	r29,r29,#-8
 6782  0000657c  afa20000	sw	(r29),r2
 6783  00006580  200c002b	addi	r12,r0,#43
 6784  00006584  afac0004	sw	4(r29),r12
 6785  00006588  0fffd88c	jal	_dindex
 6786  0000658c  54000000	nop; not filled.
 6787  00006590  23bd0008	addi	r29,r29,#8
 6788  00006594  64210000	snei	r1,r1,#0
 6789  00006598  10200028	beqz	r1,L245_LF5
 6790  0000659c  54000000	nop; not filled.
 6791  000065a0          	L246_LF5:
 6792  000065a0  23bdfff0	addi	r29,r29,#-16
 6793  000065a4  3c0c0000	lhi	r12,((LC38_LF5)>>16)&0xffff
 6794  000065a8  258cf978	addui	r12,r12,(LC38_LF5)&0xffff
 6795  000065ac  afac0000	sw	(r29),r12
 6796  000065b0  afa50004	sw	4(r29),r5
 6797  000065b4  afa90008	sw	8(r29),r9
 6798  000065b8  0c003bec	jal	_printf
 6799  000065bc  54000000	nop; not filled.
 6800  000065c0  23bd0010	addi	r29,r29,#16
 6801  000065c4          	L245_LF5:
 6802  000065c4  20a5ffff	addi	r5,r5,#-1
 6803  000065c8  23c1ff28	addi	r1,r30,#-216
 6804  000065cc  00251020	add	r2,r1,r5
 6805  000065d0  0800000c	j	L301_LF5
 6806  000065d4  54000000	nop; not filled.
 6807  000065d8          	L247_LF5:
 6808  000065d8  2042ffff	addi	r2,r2,#-1
 6809  000065dc  20a5ffff	addi	r5,r5,#-1
 6810  000065e0          	L301_LF5:
 6811  000065e0  90410000	lbu	r1,(r2)
 6812  000065e4  6421000a	snei	r1,r1,#10
 6813  000065e8  1420ffec	bnez	r1,L247_LF5
 6814  000065ec  54000000	nop; not filled.
 6815  000065f0  23c1ff29	addi	r1,r30,#-215
 6816  000065f4  00250820	add	r1,r1,r5
 6817  000065f8  200c005a	addi	r12,r0,(#0x5a)&0xff
 6818  000065fc  a02c0000	sb	(r1),r12
 6819  00006600  23c1ff2a	addi	r1,r30,#-214
 6820  00006604  00250820	add	r1,r1,r5
 6821  00006608  200c0000	addi	r12,r0,(#0x0)&0xff
 6822  0000660c  a02c0000	sb	(r1),r12
 6823  00006610  23bdfff8	addi	r29,r29,#-8
 6824  00006614  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6825  00006618  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6826  0000661c  afa20000	sw	(r29),r2
 6827  00006620  200c0066	addi	r12,r0,#102
 6828  00006624  afac0004	sw	4(r29),r12
 6829  00006628  0fffd7ec	jal	_dindex
 6830  0000662c  54000000	nop; not filled.
 6831  00006630  23bd0008	addi	r29,r29,#8
 6832  00006634  64210000	snei	r1,r1,#0
 6833  00006638  1420002c	bnez	r1,L252_LF5
 6834  0000663c  54000000	nop; not filled.
 6835  00006640  23bdfff8	addi	r29,r29,#-8
 6836  00006644  afa20000	sw	(r29),r2
 6837  00006648  200c002b	addi	r12,r0,#43
 6838  0000664c  afac0004	sw	4(r29),r12
 6839  00006650  0fffd7c4	jal	_dindex
 6840  00006654  54000000	nop; not filled.
 6841  00006658  23bd0008	addi	r29,r29,#8
 6842  0000665c  64210000	snei	r1,r1,#0
 6843  00006660  10200024	beqz	r1,L251_LF5
 6844  00006664  54000000	nop; not filled.
 6845  00006668          	L252_LF5:
 6846  00006668  23bdfff8	addi	r29,r29,#-8
 6847  0000666c  3c0c0000	lhi	r12,((LC39_LF5)>>16)&0xffff
 6848  00006670  258cf998	addui	r12,r12,(LC39_LF5)&0xffff
 6849  00006674  afac0000	sw	(r29),r12
 6850  00006678  afa50004	sw	4(r29),r5
 6851  0000667c  0c003b28	jal	_printf
 6852  00006680  54000000	nop; not filled.
 6853  00006684  23bd0008	addi	r29,r29,#8
 6854  00006688          	L251_LF5:
 6855  00006688  23bdfff8	addi	r29,r29,#-8
 6856  0000668c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6857  00006690  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 6858  00006694  afa20000	sw	(r29),r2
 6859  00006698  200c0066	addi	r12,r0,#102
 6860  0000669c  afac0004	sw	4(r29),r12
 6861  000066a0  0fffd774	jal	_dindex
 6862  000066a4  54000000	nop; not filled.
 6863  000066a8  23bd0008	addi	r29,r29,#8
 6864  000066ac  64210000	snei	r1,r1,#0
 6865  000066b0  1420002c	bnez	r1,L254_LF5
 6866  000066b4  54000000	nop; not filled.
 6867  000066b8  23bdfff8	addi	r29,r29,#-8
 6868  000066bc  afa20000	sw	(r29),r2
 6869  000066c0  200c002b	addi	r12,r0,#43
 6870  000066c4  afac0004	sw	4(r29),r12
 6871  000066c8  0fffd74c	jal	_dindex
 6872  000066cc  54000000	nop; not filled.
 6873  000066d0  23bd0008	addi	r29,r29,#8
 6874  000066d4  64210000	snei	r1,r1,#0
 6875  000066d8  10200028	beqz	r1,L253_LF5
 6876  000066dc  54000000	nop; not filled.
 6877  000066e0          	L254_LF5:
 6878  000066e0  23bdfff8	addi	r29,r29,#-8
 6879  000066e4  3c0c0000	lhi	r12,((LC40_LF5)>>16)&0xffff
 6880  000066e8  258cf9ac	addui	r12,r12,(LC40_LF5)&0xffff
 6881  000066ec  afac0000	sw	(r29),r12
 6882  000066f0  23c1ff28	addi	r1,r30,#-216
 6883  000066f4  afa10004	sw	4(r29),r1
 6884  000066f8  0c003aac	jal	_printf
 6885  000066fc  54000000	nop; not filled.
 6886  00006700  23bd0008	addi	r29,r29,#8
 6887  00006704          	L253_LF5:
 6888  00006704  20050000	addi	r5,r0,#0
 6889  00006708  3c080000	lhi	r8,((_debugstr)>>16)&0xffff
 6890  0000670c  2508fd46	addui	r8,r8,(_debugstr)&0xffff
 6891  00006710          	L255_LF5:
 6892  00006710  23bdfff8	addi	r29,r29,#-8
 6893  00006714  8fccff24	lw	r12,-220(r30)
 6894  00006718  afac0000	sw	(r29),r12
 6895  0000671c  200c005a	addi	r12,r0,#90
 6896  00006720  afac0004	sw	4(r29),r12
 6897  00006724  0fffd6f0	jal	_dindex
 6898  00006728  54000000	nop; not filled.
 6899  0000672c  23bd0008	addi	r29,r29,#8
 6900  00006730  64210000	snei	r1,r1,#0
 6901  00006734  102002ec	beqz	r1,L256_LF5
 6902  00006738  54000000	nop; not filled.
 6903  0000673c  23bdfff8	addi	r29,r29,#-8
 6904  00006740  8fccff24	lw	r12,-220(r30)
 6905  00006744  afac0000	sw	(r29),r12
 6906  00006748  200c003a	addi	r12,r0,#58
 6907  0000674c  afac0004	sw	4(r29),r12
 6908  00006750  0fffd6c4	jal	_dindex
 6909  00006754  54000000	nop; not filled.
 6910  00006758  23bd0008	addi	r29,r29,#8
 6911  0000675c  64210000	snei	r1,r1,#0
 6912  00006760  102002c0	beqz	r1,L256_LF5
 6913  00006764  54000000	nop; not filled.
 6914  00006768  8fc2ff24	lw	r2,-220(r30)
 6915  0000676c  90410000	lbu	r1,(r2)
 6916  00006770  6421003a	snei	r1,r1,#58
 6917  00006774  102000b8	beqz	r1,L300_LF5
 6918  00006778  54000000	nop; not filled.
 6919  0000677c  6ca10000	sgti	r1,r5,#0
 6920  00006780  142002a0	bnez	r1,L256_LF5
 6921  00006784  54000000	nop; not filled.
 6922  00006788  23bdfff0	addi	r29,r29,#-16
 6923  0000678c  afa20000	sw	(r29),r2
 6924  00006790  23c1ff24	addi	r1,r30,#-220
 6925  00006794  afa10004	sw	4(r29),r1
 6926  00006798  200c0010	addi	r12,r0,#16
 6927  0000679c  afac0008	sw	8(r29),r12
 6928  000067a0  0fffd7fc	jal	_dstrtol
 6929  000067a4  54000000	nop; not filled.
 6930  000067a8  ace10000	sw	(r7),r1
 6931  000067ac  afa80000	sw	(r29),r8
 6932  000067b0  200c0066	addi	r12,r0,#102
 6933  000067b4  afac0004	sw	4(r29),r12
 6934  000067b8  0fffd65c	jal	_dindex
 6935  000067bc  54000000	nop; not filled.
 6936  000067c0  23bd0010	addi	r29,r29,#16
 6937  000067c4  64210000	snei	r1,r1,#0
 6938  000067c8  1420002c	bnez	r1,L262_LF5
 6939  000067cc  54000000	nop; not filled.
 6940  000067d0  23bdfff8	addi	r29,r29,#-8
 6941  000067d4  afa80000	sw	(r29),r8
 6942  000067d8  200c002b	addi	r12,r0,#43
 6943  000067dc  afac0004	sw	4(r29),r12
 6944  000067e0  0fffd634	jal	_dindex
 6945  000067e4  54000000	nop; not filled.
 6946  000067e8  23bd0008	addi	r29,r29,#8
 6947  000067ec  64210000	snei	r1,r1,#0
 6948  000067f0  10200028	beqz	r1,L259_LF5
 6949  000067f4  54000000	nop; not filled.
 6950  000067f8          	L262_LF5:
 6951  000067f8  23bdfff8	addi	r29,r29,#-8
 6952  000067fc  3c0c0000	lhi	r12,((LC41_LF5)>>16)&0xffff
 6953  00006800  258cf9bc	addui	r12,r12,(LC41_LF5)&0xffff
 6954  00006804  afac0000	sw	(r29),r12
 6955  00006808  8ce10000	lw	r1,(r7)
 6956  0000680c  afa10004	sw	4(r29),r1
 6957  00006810  0c003994	jal	_printf
 6958  00006814  54000000	nop; not filled.
 6959  00006818  23bd0008	addi	r29,r29,#8
 6960  0000681c          	L259_LF5:
 6961  0000681c  8fc1ff24	lw	r1,-220(r30)
 6962  00006820  90210000	lbu	r1,(r1)
 6963  00006824  6421003a	snei	r1,r1,#58
 6964  00006828  142001f8	bnez	r1,L256_LF5
 6965  0000682c  54000000	nop; not filled.
 6966  00006830          	L300_LF5:
 6967  00006830  8fc1ff24	lw	r1,-220(r30)
 6968  00006834  20210001	addi	r1,r1,#1
 6969  00006838  afc1ff24	sw	-220(r30),r1
 6970  0000683c  00ab3020	add	r6,r5,r11
 6971  00006840          	L266_LF5:
 6972  00006840  8fc1ff24	lw	r1,-220(r30)
 6973  00006844  08000010	j	L302_LF5
 6974  00006848  54000000	nop; not filled.
 6975  0000684c          	L269_LF5:
 6976  0000684c  8fc1ff24	lw	r1,-220(r30)
 6977  00006850  20210001	addi	r1,r1,#1
 6978  00006854  afc1ff24	sw	-220(r30),r1
 6979  00006858          	L302_LF5:
 6980  00006858  903f0000	lbu	r31,(r1)
 6981  0000685c  63e10020	seqi	r1,r31,#32
 6982  00006860  1420ffe8	bnez	r1,L269_LF5
 6983  00006864  54000000	nop; not filled.
 6984  00006868  63e10009	seqi	r1,r31,#9
 6985  0000686c  1420ffdc	bnez	r1,L269_LF5
 6986  00006870  54000000	nop; not filled.
 6987  00006874  8fc2ff24	lw	r2,-220(r30)
 6988  00006878  805f0000	lb	r31,(r2)
 6989  0000687c  33e300ff	andi	r3,r31,#0x00ff
 6990  00006880  6061000a	seqi	r1,r3,#10
 6991  00006884  10200014	beqz	r1,L271_LF5
 6992  00006888  54000000	nop; not filled.
 6993  0000688c  20410001	addi	r1,r2,#1
 6994  00006890  afc1ff24	sw	-220(r30),r1
 6995  00006894  0bfffe78	j	L255_LF5
 6996  00006898  54000000	nop; not filled.
 6997  0000689c          	L271_LF5:
 6998  0000689c  20020000	addi	r2,r0,#0
 6999  000068a0  23e1ffd0	addi	r1,r31,#-48
 7000  000068a4  302100ff	andi	r1,r1,#0x00ff
 7001  000068a8  70210009	sleui	r1,r1,#9
 7002  000068ac  14200024	bnez	r1,L277_LF5
 7003  000068b0  54000000	nop; not filled.
 7004  000068b4  23e1ff9f	addi	r1,r31,#-97
 7005  000068b8  302100ff	andi	r1,r1,#0x00ff
 7006  000068bc  70210005	sleui	r1,r1,#5
 7007  000068c0  14200010	bnez	r1,L277_LF5
 7008  000068c4  54000000	nop; not filled.
 7009  000068c8  64610041	snei	r1,r3,#65
 7010  000068cc  14200008	bnez	r1,L276_LF5
 7011  000068d0  54000000	nop; not filled.
 7012  000068d4          	L277_LF5:
 7013  000068d4  20020001	addi	r2,r0,#1
 7014  000068d8          	L276_LF5:
 7015  000068d8  64410000	snei	r1,r2,#0
 7016  000068dc  1020fe30	beqz	r1,L255_LF5
 7017  000068e0  54000000	nop; not filled.
 7018  000068e4  8fc1ff24	lw	r1,-220(r30)
 7019  000068e8  80220001	lb	r2,1(r1)
 7020  000068ec  20030000	addi	r3,r0,#0
 7021  000068f0  2041ffd0	addi	r1,r2,#-48
 7022  000068f4  302100ff	andi	r1,r1,#0x00ff
 7023  000068f8  70210009	sleui	r1,r1,#9
 7024  000068fc  14200028	bnez	r1,L280_LF5
 7025  00006900  54000000	nop; not filled.
 7026  00006904  2041ff9f	addi	r1,r2,#-97
 7027  00006908  302100ff	andi	r1,r1,#0x00ff
 7028  0000690c  70210005	sleui	r1,r1,#5
 7029  00006910  14200014	bnez	r1,L280_LF5
 7030  00006914  54000000	nop; not filled.
 7031  00006918  304100ff	andi	r1,r2,#0x00ff
 7032  0000691c  64210041	snei	r1,r1,#65
 7033  00006920  14200008	bnez	r1,L279_LF5
 7034  00006924  54000000	nop; not filled.
 7035  00006928          	L280_LF5:
 7036  00006928  20030001	addi	r3,r0,#1
 7037  0000692c          	L279_LF5:
 7038  0000692c  64610000	snei	r1,r3,#0
 7039  00006930  1020fddc	beqz	r1,L255_LF5
 7040  00006934  54000000	nop; not filled.
 7041  00006938  8fc1ff24	lw	r1,-220(r30)
 7042  0000693c  90220000	lbu	r2,(r1)
 7043  00006940  00021820	add	r3,r0,r2
 7044  00006944  205fffd0	addi	r31,r2,#-48
 7045  00006948  73e10009	sleui	r1,r31,#9
 7046  0000694c  10200010	beqz	r1,L282_LF5
 7047  00006950  54000000	nop; not filled.
 7048  00006954  001f2020	add	r4,r0,r31
 7049  00006958  08000038	j	L281_LF5
 7050  0000695c  54000000	nop; not filled.
 7051  00006960          	L282_LF5:
 7052  00006960  2041ff9f	addi	r1,r2,#-97
 7053  00006964  70210005	sleui	r1,r1,#5
 7054  00006968  10200010	beqz	r1,L284_LF5
 7055  0000696c  54000000	nop; not filled.
 7056  00006970  2044ffa9	addi	r4,r2,#-87
 7057  00006974  0800001c	j	L281_LF5
 7058  00006978  54000000	nop; not filled.
 7059  0000697c          	L284_LF5:
 7060  0000697c  2061ffbf	addi	r1,r3,#-65
 7061  00006980  70210005	sleui	r1,r1,#5
 7062  00006984  20040000	addi	r4,r0,#0
 7063  00006988  10200008	beqz	r1,L281_LF5
 7064  0000698c  54000000	nop; not filled.
 7065  00006990  2064ffc9	addi	r4,r3,#-55
 7066  00006994          	L281_LF5:
 7067  00006994  8fc1ff24	lw	r1,-220(r30)
 7068  00006998  90220001	lbu	r2,1(r1)
 7069  0000699c  00021820	add	r3,r0,r2
 7070  000069a0  205fffd0	addi	r31,r2,#-48
 7071  000069a4  73e10009	sleui	r1,r31,#9
 7072  000069a8  10200010	beqz	r1,L289_LF5
 7073  000069ac  54000000	nop; not filled.
 7074  000069b0  001f1020	add	r2,r0,r31
 7075  000069b4  08000038	j	L288_LF5
 7076  000069b8  54000000	nop; not filled.
 7077  000069bc          	L289_LF5:
 7078  000069bc  2041ff9f	addi	r1,r2,#-97
 7079  000069c0  70210005	sleui	r1,r1,#5
 7080  000069c4  10200010	beqz	r1,L291_LF5
 7081  000069c8  54000000	nop; not filled.
 7082  000069cc  2042ffa9	addi	r2,r2,#-87
 7083  000069d0  0800001c	j	L288_LF5
 7084  000069d4  54000000	nop; not filled.
 7085  000069d8          	L291_LF5:
 7086  000069d8  2061ffbf	addi	r1,r3,#-65
 7087  000069dc  70210005	sleui	r1,r1,#5
 7088  000069e0  20020000	addi	r2,r0,#0
 7089  000069e4  10200008	beqz	r1,L288_LF5
 7090  000069e8  54000000	nop; not filled.
 7091  000069ec  2062ffc9	addi	r2,r3,#-55
 7092  000069f0          	L288_LF5:
 7093  000069f0  50810004	slli	r1,r4,#0x4
 7094  000069f4  00220820	add	r1,r1,r2
 7095  000069f8  a0c10000	sb	(r6),r1
 7096  000069fc  20c60001	addi	r6,r6,#1
 7097  00006a00  20a50001	addi	r5,r5,#1
 7098  00006a04  8fc1ff24	lw	r1,-220(r30)
 7099  00006a08  20210002	addi	r1,r1,#2
 7100  00006a0c  afc1ff24	sw	-220(r30),r1
 7101  00006a10  8ce10000	lw	r1,(r7)
 7102  00006a14  20210001	addi	r1,r1,#1
 7103  00006a18  ace10000	sw	(r7),r1
 7104  00006a1c  0bfffe20	j	L266_LF5
 7105  00006a20  54000000	nop; not filled.
 7106  00006a24          	L256_LF5:
 7107  00006a24  23bdfff0	addi	r29,r29,#-16
 7108  00006a28  afaa0000	sw	(r29),r10
 7109  00006a2c  8fc1ff24	lw	r1,-220(r30)
 7110  00006a30  00290820	add	r1,r1,r9
 7111  00006a34  23c3ff28	addi	r3,r30,#-216
 7112  00006a38  00230822	sub	r1,r1,r3
 7113  00006a3c  afa10004	sw	4(r29),r1
 7114  00006a40  200c0000	addi	r12,r0,#0
 7115  00006a44  afac0008	sw	8(r29),r12
 7116  00006a48  0fffb3a8	jal	_FsSeek
 7117  00006a4c  54000000	nop; not filled.
 7118  00006a50  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7119  00006a54  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7120  00006a58  afa20000	sw	(r29),r2
 7121  00006a5c  200c0066	addi	r12,r0,#102
 7122  00006a60  afac0004	sw	4(r29),r12
 7123  00006a64  0fffd3b0	jal	_dindex
 7124  00006a68  54000000	nop; not filled.
 7125  00006a6c  23bd0010	addi	r29,r29,#16
 7126  00006a70  64210000	snei	r1,r1,#0
 7127  00006a74  1420002c	bnez	r1,L297_LF5
 7128  00006a78  54000000	nop; not filled.
 7129  00006a7c  23bdfff8	addi	r29,r29,#-8
 7130  00006a80  afa20000	sw	(r29),r2
 7131  00006a84  200c002b	addi	r12,r0,#43
 7132  00006a88  afac0004	sw	4(r29),r12
 7133  00006a8c  0fffd388	jal	_dindex
 7134  00006a90  54000000	nop; not filled.
 7135  00006a94  23bd0008	addi	r29,r29,#8
 7136  00006a98  64210000	snei	r1,r1,#0
 7137  00006a9c  10200034	beqz	r1,L296_LF5
 7138  00006aa0  54000000	nop; not filled.
 7139  00006aa4          	L297_LF5:
 7140  00006aa4  23bdfff0	addi	r29,r29,#-16
 7141  00006aa8  3c0c0000	lhi	r12,((LC42_LF5)>>16)&0xffff
 7142  00006aac  258cf9d4	addui	r12,r12,(LC42_LF5)&0xffff
 7143  00006ab0  afac0000	sw	(r29),r12
 7144  00006ab4  8fc1ff24	lw	r1,-220(r30)
 7145  00006ab8  00290820	add	r1,r1,r9
 7146  00006abc  00230822	sub	r1,r1,r3
 7147  00006ac0  afa10004	sw	4(r29),r1
 7148  00006ac4  afa50008	sw	8(r29),r5
 7149  00006ac8  0c0036dc	jal	_printf
 7150  00006acc  54000000	nop; not filled.
 7151  00006ad0  23bd0010	addi	r29,r29,#16
 7152  00006ad4          	L296_LF5:
 7153  00006ad4  00050820	add	r1,r0,r5
 7154  00006ad8          	L298_LF5:
 7155  00006ad8  8fa20000	lw	r2,0(r29)
 7156  00006adc  8fa30004	lw	r3,4(r29)
 7157  00006ae0  8fa40008	lw	r4,8(r29)
 7158  00006ae4  8fa5000c	lw	r5,12(r29)
 7159  00006ae8  8fa60010	lw	r6,16(r29)
 7160  00006aec  8fa70014	lw	r7,20(r29)
 7161  00006af0  8fa80018	lw	r8,24(r29)
 7162  00006af4  8fa9001c	lw	r9,28(r29)
 7163  00006af8  8faa0020	lw	r10,32(r29)
 7164  00006afc  8fab0024	lw	r11,36(r29)
 7165  00006b00  8fac0028	lw	r12,40(r29)
 7166  00006b04  8fdffff8	lw	r31,-8(r30)
 7167  00006b08  001ee820	add	r29,r0,r30
 7168  00006b0c  8fdefffc	lw	r30,-4(r30)
 7169  00006b10  4be00000	jr	r31
 7170  00006b14  54000000	nop
 7171  00006b18          	.endproc _ProcessGetFromFile
 7172  00006b18          	.align 2
 7173  00006b18          	.proc _Getpid
 7174  00006b18          	.global _Getpid
 7175  00006b18          	_Getpid:
 7176                      ;  Function 'Getpid'; 0 bytes of locals, 1 regs to save.
 7177  00006b18  afbefffc	sw	-4(r29),r30; push fp
 7178  00006b1c  001df020	add	r30,r0,r29; fp = sp
 7179  00006b20  afbffff8	sw	-8(r29),r31; push ret addr
 7180  00006b24  2fbd0010	subui	r29,r29,#16; alloc local storage
 7181  00006b28  afa20000	sw	0(r29),r2
 7182  00006b2c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 7183  00006b30  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 7184  00006b34  8c220000	lw	r2,(r1)
 7185  00006b38  3c010000	lhi	r1,((_pcbs_LF5)>>16)&0xffff
 7186  00006b3c  2421fe44	addui	r1,r1,(_pcbs_LF5)&0xffff
 7187  00006b40  00221022	sub	r2,r1,r2
 7188  00006b44  3c01a4fa	lhi	r1,#-23302
 7189  00006b48  24214fa5	addui	r1,r1,#20389
 7190  00006b4c  00400035	movi2fp	f0,r2
 7191  00006b50  00200835	movi2fp	f1,r1
 7192  00006b54  0401000e	mult	f0,f0,f1
 7193  00006b58  00000834	movfp2i	r1,f0
 7194  00006b5c  5c210002	srai	r1,r1,#0x2
 7195  00006b60  8fa20000	lw	r2,0(r29)
 7196  00006b64  8fdffff8	lw	r31,-8(r30)
 7197  00006b68  001ee820	add	r29,r0,r30
 7198  00006b6c  8fdefffc	lw	r30,-4(r30)
 7199  00006b70  4be00000	jr	r31
 7200  00006b74  54000000	nop
 7201  00006b78          	.endproc _Getpid
 7202  00006b78          	.data
 7203  0000f9fb          	.align 2
 7204  0000f9fc          	_temppcb62_LF5:
 7205  0000f9fc          	.space 180
 7206  0000fab0          	.align 2
 7207  0000fab0          	LC43_LF5:
 7208  0000fab0  476f7420	.ascii "Got %d arguments.\n\000"
 7208  0000fab4  25642061	
 7208  0000fab8  7267756d	
 7208  0000fabc  656e7473	
 7208  0000fac0  2e0a00  	
 7209  0000fac3          	.align 2
 7210  0000fac4          	LC44_LF5:
 7211  0000fac4  41766169	.ascii "Available memory: 0x%x -> 0x%x.\n\000"
 7211  0000fac8  6c61626c	
 7211  0000facc  65206d65	
 7211  0000fad0  6d6f7279	
 7211  0000fad4  3a203078	
 7211  0000fad8  2578202d	
 7211  0000fadc  3e203078	
 7211  0000fae0  25782e0a	
 7211  0000fae4  00      	
 7212  0000fae5          	.align 2
 7213  0000fae8          	LC45_LF5:
 7214  0000fae8  41726775	.ascii "Argument count is %d.\n\000"
 7214  0000faec  6d656e74	
 7214  0000faf0  20636f75	
 7214  0000faf4  6e742069	
 7214  0000faf8  73202564	
 7214  0000fafc  2e0a00  	
 7215  0000faff          	.align 2
 7216  0000fb00          	LC46_LF5:
 7217  0000fb00  41726775	.ascii "Argument %d is %s.\n\000"
 7217  0000fb04  6d656e74	
 7217  0000fb08  20256420	
 7217  0000fb0c  69732025	
 7217  0000fb10  732e0a00	
 7218  0000fb14          	.align 2
 7219  0000fb14          	LC47_LF5:
 7220  0000fb14  436f6e76	.ascii "Converted %s to %d=%s\n\000"
 7220  0000fb18  65727465	
 7220  0000fb1c  64202573	
 7220  0000fb20  20746f20	
 7220  0000fb24  25643d25	
 7220  0000fb28  730a00  	
 7221  0000fb2b          	_buf63_LF5:
 7222  0000fb2b          	.space 200
 7223  0000fbf3          	.align 2
 7224  0000fbf4          	LC48_LF5:
 7225  0000fbf4  25303878	.ascii "%08x: %02x%02x%02x%02x\n\000"
 7225  0000fbf8  3a202530	
 7225  0000fbfc  32782530	
 7225  0000fc00  32782530	
 7225  0000fc04  32782530	
 7225  0000fc08  32780a00	
 7226  0000fc0c          	.align 2
 7227  0000fc0c          	LC49_LF5:
 7228  0000fc0c  4f707469	.ascii "Option %s not recognized.\n\000"
 7228  0000fc10  6f6e2025	
 7228  0000fc14  73206e6f	
 7228  0000fc18  74207265	
 7228  0000fc1c  636f676e	
 7228  0000fc20  697a6564	
 7228  0000fc24  2e0a00  	
 7229  0000fc27          	.align 2
 7230  0000fc28          	LC50_LF5:
 7231  0000fc28  41626f75	.ascii "About to initialize queues.\n\000"
 7231  0000fc2c  7420746f	
 7231  0000fc30  20696e69	
 7231  0000fc34  7469616c	
 7231  0000fc38  697a6520	
 7231  0000fc3c  71756575	
 7231  0000fc40  65732e0a	
 7231  0000fc44  00      	
 7232  0000fc45          	.align 2
 7233  0000fc48          	LC51_LF5:
 7234  0000fc48  41667465	.ascii "After initializing queues.\n\000"
 7234  0000fc4c  7220696e	
 7234  0000fc50  69746961	
 7234  0000fc54  6c697a69	
 7234  0000fc58  6e672071	
 7234  0000fc5c  75657565	
 7234  0000fc60  732e0a00	
 7235  0000fc64          	.align 2
 7236  0000fc64          	LC52_LF5:
 7237  0000fc64  41667465	.ascii "After initializing memory.\n\000"
 7237  0000fc68  7220696e	
 7237  0000fc6c  69746961	
 7237  0000fc70  6c697a69	
 7237  0000fc74  6e67206d	
 7237  0000fc78  656d6f72	
 7237  0000fc7c  792e0a00	
 7238  0000fc80          	.align 2
 7239  0000fc80          	LC53_LF5:
 7240  0000fc80  41667465	.ascii "After initializing processes.\n\000"
 7240  0000fc84  7220696e	
 7240  0000fc88  69746961	
 7240  0000fc8c  6c697a69	
 7240  0000fc90  6e672070	
 7240  0000fc94  726f6365	
 7240  0000fc98  73736573	
 7240  0000fc9c  2e0a00  	
 7241  0000fc9f          	.align 2
 7242  0000fca0          	LC54_LF5:
 7243  0000fca0  41667465	.ascii "After initializing keyboard.\n\000"
 7243  0000fca4  7220696e	
 7243  0000fca8  69746961	
 7243  0000fcac  6c697a69	
 7243  0000fcb0  6e67206b	
 7243  0000fcb4  6579626f	
 7243  0000fcb8  6172642e	
 7243  0000fcbc  0a00    	
 7244  0000fcbe          	.align 2
 7245  0000fcc0          	LC55_LF5:
 7246  0000fcc0  766d00  	.ascii "vm\000"
 7247  0000fcc3          	.align 2
 7248  0000fcc4          	LC56_LF5:
 7249  0000fcc4  564d2044	.ascii "VM Descriptor is %d\n\000"
 7249  0000fcc8  65736372	
 7249  0000fccc  6970746f	
 7249  0000fcd0  72206973	
 7249  0000fcd4  2025640a	
 7249  0000fcd8  00      	
 7250  0000fcd9          	.align 2
 7251  0000fcdc          	LC57_LF5:
 7252  0000fcdc  43726561	.ascii "Created processes - about to set timer quantum.\n\000"
 7252  0000fce0  74656420	
 7252  0000fce4  70726f63	
 7252  0000fce8  65737365	
 7252  0000fcec  73202d20	
 7252  0000fcf0  61626f75	
 7252  0000fcf4  7420746f	
 7252  0000fcf8  20736574	
 7252  0000fcfc  2074696d	
 7252  0000fd00  65722071	
 7252  0000fd04  75616e74	
 7252  0000fd08  756d2e0a	
 7252  0000fd0c  00      	
 7253  0000fd0d          	.align 2
 7254  0000fd10          	LC58_LF5:
 7255  0000fd10  53657420	.ascii "Set timer quantum to %d, about to run first process.\n\000"
 7255  0000fd14  74696d65	
 7255  0000fd18  72207175	
 7255  0000fd1c  616e7475	
 7255  0000fd20  6d20746f	
 7255  0000fd24  2025642c	
 7255  0000fd28  2061626f	
 7255  0000fd2c  75742074	
 7255  0000fd30  6f207275	
 7255  0000fd34  6e206669	
 7255  0000fd38  72737420	
 7255  0000fd3c  70726f63	
 7255  0000fd40  6573732e	
 7255  0000fd44  0a00    	
 7256  0000fd46          	.text
 7257  00006b78          	.align 2
 7258  00006b78          	.proc _main
 7259  00006b78          	.global _main
 7260  00006b78          	_main:
 7261                      ;  Function 'main'; 144 bytes of locals, 0 regs to save.
 7262  00006b78  afbefffc	sw	-4(r29),r30; push fp
 7263  00006b7c  001df020	add	r30,r0,r29; fp = sp
 7264  00006b80  afbffff8	sw	-8(r29),r31; push ret addr
 7265  00006b84  2fbd0098	subui	r29,r29,#152; alloc local storage
 7266  00006b88  8fcc0000	lw	r12,(r30)
 7267  00006b8c  0c003580	jal	___main
 7268  00006b90  54000000	nop; not filled.
 7269  00006b94  20100000	addi	r16,r0,#0
 7270  00006b98  3c010000	lhi	r1,((_debugstr)>>16)&0xffff
 7271  00006b9c  2421fd46	addui	r1,r1,(_debugstr)&0xffff
 7272  00006ba0  20130000	addi	r19,r0,(#0x0)&0xff
 7273  00006ba4  a0330000	sb	(r1),r19
 7274  00006ba8  23bdfff8	addi	r29,r29,#-8
 7275  00006bac  3c130000	lhi	r19,((LC43_LF5)>>16)&0xffff
 7276  00006bb0  2673fab0	addui	r19,r19,(LC43_LF5)&0xffff
 7277  00006bb4  afb30000	sw	(r29),r19
 7278  00006bb8  afac0004	sw	4(r29),r12
 7279  00006bbc  0c0035e8	jal	_printf
 7280  00006bc0  54000000	nop; not filled.
 7281  00006bc4  0fffbe44	jal	_MemoryGetSize
 7282  00006bc8  54000000	nop; not filled.
 7283  00006bcc  23bdfff8	addi	r29,r29,#-8
 7284  00006bd0  3c130000	lhi	r19,((LC44_LF5)>>16)&0xffff
 7285  00006bd4  2673fac4	addui	r19,r19,(LC44_LF5)&0xffff
 7286  00006bd8  afb30000	sw	(r29),r19
 7287  00006bdc  3c020001	lhi	r2,((_lastosaddress)>>16)&0xffff
 7288  00006be0  24423304	addui	r2,r2,(_lastosaddress)&0xffff
 7289  00006be4  8c420000	lw	r2,(r2)
 7290  00006be8  afa20004	sw	4(r29),r2
 7291  00006bec  afa10008	sw	8(r29),r1
 7292  00006bf0  0c0035b4	jal	_printf
 7293  00006bf4  54000000	nop; not filled.
 7294  00006bf8  3c130000	lhi	r19,((LC45_LF5)>>16)&0xffff
 7295  00006bfc  2673fae8	addui	r19,r19,(LC45_LF5)&0xffff
 7296  00006c00  afb30000	sw	(r29),r19
 7297  00006c04  afac0004	sw	4(r29),r12
 7298  00006c08  0c00359c	jal	_printf
 7299  00006c0c  54000000	nop; not filled.
 7300  00006c10  20090000	addi	r9,r0,#0
 7301  00006c14  23bd0010	addi	r29,r29,#16
 7302  00006c18  020c082a	slt	r1,r16,r12
 7303  00006c1c  10200044	beqz	r1,L307_LF5
 7304  00006c20  54000000	nop; not filled.
 7305  00006c24  8fc20004	lw	r2,4(r30)
 7306  00006c28          	L309_LF5:
 7307  00006c28  23bdfff0	addi	r29,r29,#-16
 7308  00006c2c  3c130000	lhi	r19,((LC46_LF5)>>16)&0xffff
 7309  00006c30  2673fb00	addui	r19,r19,(LC46_LF5)&0xffff
 7310  00006c34  afb30000	sw	(r29),r19
 7311  00006c38  afa90004	sw	4(r29),r9
 7312  00006c3c  8c530000	lw	r19,(r2)
 7313  00006c40  afb30008	sw	8(r29),r19
 7314  00006c44  0c003560	jal	_printf
 7315  00006c48  54000000	nop; not filled.
 7316  00006c4c  23bd0010	addi	r29,r29,#16
 7317  00006c50  20420004	addi	r2,r2,#4
 7318  00006c54  21290001	addi	r9,r9,#1
 7319  00006c58  012c082a	slt	r1,r9,r12
 7320  00006c5c  1420ffc8	bnez	r1,L309_LF5
 7321  00006c60  54000000	nop; not filled.
 7322  00006c64          	L307_LF5:
 7323  00006c64  0fffb818	jal	_FsModuleInit
 7324  00006c68  54000000	nop; not filled.
 7325  00006c6c  20090000	addi	r9,r0,#0
 7326  00006c70  012c082a	slt	r1,r9,r12
 7327  00006c74  1020032c	beqz	r1,L312_LF5
 7328  00006c78  54000000	nop; not filled.
 7329  00006c7c  23cdff80	addi	r13,r30,#-128
 7330  00006c80  23ceff68	addi	r14,r30,#-152
 7331  00006c84  3c0f0000	lhi	r15,((_buf63_LF5)>>16)&0xffff
 7332  00006c88  25effb2b	addui	r15,r15,(_buf63_LF5)&0xffff
 7333  00006c8c  21f20001	addi	r18,r15,#1
 7334  00006c90  21f10002	addi	r17,r15,#2
 7335  00006c94  8fc80004	lw	r8,4(r30)
 7336  00006c98          	L314_LF5:
 7337  00006c98  8d020000	lw	r2,(r8)
 7338  00006c9c  90410000	lbu	r1,(r2)
 7339  00006ca0  6021002d	seqi	r1,r1,#45
 7340  00006ca4  102002e8	beqz	r1,L313_LF5
 7341  00006ca8  54000000	nop; not filled.
 7342  00006cac  90420001	lbu	r2,1(r2)
 7343  00006cb0  60410066	seqi	r1,r2,#102
 7344  00006cb4  142000e0	bnez	r1,L319_LF5
 7345  00006cb8  54000000	nop; not filled.
 7346  00006cbc  6c410066	sgti	r1,r2,#102
 7347  00006cc0  14200018	bnez	r1,L331_LF5
 7348  00006cc4  54000000	nop; not filled.
 7349  00006cc8  60410044	seqi	r1,r2,#68
 7350  00006ccc  1020029c	beqz	r1,L329_LF5
 7351  00006cd0  54000000	nop; not filled.
 7352  00006cd4  08000024	j	L317_LF5
 7353  00006cd8  54000000	nop; not filled.
 7354  00006cdc          	L331_LF5:
 7355  00006cdc  60410069	seqi	r1,r2,#105
 7356  00006ce0  14200048	bnez	r1,L318_LF5
 7357  00006ce4  54000000	nop; not filled.
 7358  00006ce8  60410075	seqi	r1,r2,#117
 7359  00006cec  1020027c	beqz	r1,L329_LF5
 7360  00006cf0  54000000	nop; not filled.
 7361  00006cf4  08000260	j	L328_LF5
 7362  00006cf8  54000000	nop; not filled.
 7363  00006cfc          	L317_LF5:
 7364  00006cfc  23bdfff8	addi	r29,r29,#-8
 7365  00006d00  3c130000	lhi	r19,((_debugstr)>>16)&0xffff
 7366  00006d04  2673fd46	addui	r19,r19,(_debugstr)&0xffff
 7367  00006d08  afb30000	sw	(r29),r19
 7368  00006d0c  21080004	addi	r8,r8,#4
 7369  00006d10  21290001	addi	r9,r9,#1
 7370  00006d14  8d010000	lw	r1,(r8)
 7371  00006d18  afa10004	sw	4(r29),r1
 7372  00006d1c  0fffcc38	jal	_dstrcpy
 7373  00006d20  54000000	nop; not filled.
 7374  00006d24  08000264	j	L355_LF5
 7375  00006d28  54000000	nop; not filled.
 7376  00006d2c          	L318_LF5:
 7377  00006d2c  23bdfff0	addi	r29,r29,#-16
 7378  00006d30  21080004	addi	r8,r8,#4
 7379  00006d34  21290001	addi	r9,r9,#1
 7380  00006d38  8d130000	lw	r19,(r8)
 7381  00006d3c  afb30000	sw	(r29),r19
 7382  00006d40  20130000	addi	r19,r0,#0
 7383  00006d44  afb30004	sw	4(r29),r19
 7384  00006d48  afb30008	sw	8(r29),r19
 7385  00006d4c  0fffd250	jal	_dstrtol
 7386  00006d50  54000000	nop; not filled.
 7387  00006d54  00011820	add	r3,r0,r1
 7388  00006d58  afa10000	sw	(r29),r1
 7389  00006d5c  afad0004	sw	4(r29),r13
 7390  00006d60  0fffd130	jal	_ditoa
 7391  00006d64  54000000	nop; not filled.
 7392  00006d68  3c130000	lhi	r19,((LC47_LF5)>>16)&0xffff
 7393  00006d6c  2673fb14	addui	r19,r19,(LC47_LF5)&0xffff
 7394  00006d70  afb30000	sw	(r29),r19
 7395  00006d74  8d010000	lw	r1,(r8)
 7396  00006d78  afa10004	sw	4(r29),r1
 7397  00006d7c  afa30008	sw	8(r29),r3
 7398  00006d80  afad000c	sw	12(r29),r13
 7399  00006d84  0c003420	jal	_printf
 7400  00006d88  54000000	nop; not filled.
 7401  00006d8c  23bd0010	addi	r29,r29,#16
 7402  00006d90  080001fc	j	L313_LF5
 7403  00006d94  54000000	nop; not filled.
 7404  00006d98          	L319_LF5:
 7405  00006d98  20130000	addi	r19,r0,#0
 7406  00006d9c  afd3ff68	sw	-152(r30),r19
 7407  00006da0  23bdffe8	addi	r29,r29,#-24
 7408  00006da4  21080004	addi	r8,r8,#4
 7409  00006da8  21290001	addi	r9,r9,#1
 7410  00006dac  8d130000	lw	r19,(r8)
 7411  00006db0  afb30000	sw	(r29),r19
 7412  00006db4  23c1ff7c	addi	r1,r30,#-132
 7413  00006db8  afa10004	sw	4(r29),r1
 7414  00006dbc  23c1ff78	addi	r1,r30,#-136
 7415  00006dc0  afa10008	sw	8(r29),r1
 7416  00006dc4  23c1ff74	addi	r1,r30,#-140
 7417  00006dc8  afa1000c	sw	12(r29),r1
 7418  00006dcc  23c1ff70	addi	r1,r30,#-144
 7419  00006dd0  afa10010	sw	16(r29),r1
 7420  00006dd4  23c1ff6c	addi	r1,r30,#-148
 7421  00006dd8  afa10014	sw	20(r29),r1
 7422  00006ddc  0ffff240	jal	_ProcessGetCodeInfo
 7423  00006de0  54000000	nop; not filled.
 7424  00006de4  00015020	add	r10,r0,r1
 7425  00006de8  3c130000	lhi	r19,((LC27_LF5)>>16)&0xffff
 7426  00006dec  2673f7d0	addui	r19,r19,(LC27_LF5)&0xffff
 7427  00006df0  afb30000	sw	(r29),r19
 7428  00006df4  8d010000	lw	r1,(r8)
 7429  00006df8  afa10004	sw	4(r29),r1
 7430  00006dfc  8fd3ff7c	lw	r19,-132(r30)
 7431  00006e00  afb30008	sw	8(r29),r19
 7432  00006e04  0c0033a0	jal	_printf
 7433  00006e08  54000000	nop; not filled.
 7434  00006e0c  3c130000	lhi	r19,((LC28_LF5)>>16)&0xffff
 7435  00006e10  2673f7ec	addui	r19,r19,(LC28_LF5)&0xffff
 7436  00006e14  afb30000	sw	(r29),r19
 7437  00006e18  8d010000	lw	r1,(r8)
 7438  00006e1c  afa10004	sw	4(r29),r1
 7439  00006e20  8fd3ff78	lw	r19,-136(r30)
 7440  00006e24  afb30008	sw	8(r29),r19
 7441  00006e28  8fd3ff74	lw	r19,-140(r30)
 7442  00006e2c  afb3000c	sw	12(r29),r19
 7443  00006e30  0c003374	jal	_printf
 7444  00006e34  54000000	nop; not filled.
 7445  00006e38  3c130000	lhi	r19,((LC29_LF5)>>16)&0xffff
 7446  00006e3c  2673f814	addui	r19,r19,(LC29_LF5)&0xffff
 7447  00006e40  afb30000	sw	(r29),r19
 7448  00006e44  8d010000	lw	r1,(r8)
 7449  00006e48  afa10004	sw	4(r29),r1
 7450  00006e4c  8fd3ff70	lw	r19,-144(r30)
 7451  00006e50  afb30008	sw	8(r29),r19
 7452  00006e54  8fd3ff6c	lw	r19,-148(r30)
 7453  00006e58  afb3000c	sw	12(r29),r19
 7454  00006e5c  0c003348	jal	_printf
 7455  00006e60  54000000	nop; not filled.
 7456  00006e64  23bd0018	addi	r29,r29,#24
 7457  00006e68  3c0b0000	lhi	r11,((_buf63_LF5+3)>>16)&0xffff
 7458  00006e6c  256bfb2e	addui	r11,r11,(_buf63_LF5+3)&0xffff
 7459  00006e70          	L320_LF5:
 7460  00006e70  23bdfff0	addi	r29,r29,#-16
 7461  00006e74  afaa0000	sw	(r29),r10
 7462  00006e78  3c130000	lhi	r19,((_buf63_LF5)>>16)&0xffff
 7463  00006e7c  2673fb2b	addui	r19,r19,(_buf63_LF5)&0xffff
 7464  00006e80  afb30004	sw	4(r29),r19
 7465  00006e84  afae0008	sw	8(r29),r14
 7466  00006e88  201300c8	addi	r19,r0,#200
 7467  00006e8c  afb3000c	sw	12(r29),r19
 7468  00006e90  0ffff5ec	jal	_ProcessGetFromFile
 7469  00006e94  54000000	nop; not filled.
 7470  00006e98  00011820	add	r3,r0,r1
 7471  00006e9c  23bd0010	addi	r29,r29,#16
 7472  00006ea0  6c610000	sgti	r1,r3,#0
 7473  00006ea4  10200098	beqz	r1,L321_LF5
 7474  00006ea8  54000000	nop; not filled.
 7475  00006eac  20020000	addi	r2,r0,#0
 7476  00006eb0  0043082a	slt	r1,r2,r3
 7477  00006eb4  1020ffb8	beqz	r1,L320_LF5
 7478  00006eb8  54000000	nop; not filled.
 7479  00006ebc  000b3820	add	r7,r0,r11
 7480  00006ec0  00113020	add	r6,r0,r17
 7481  00006ec4  00122820	add	r5,r0,r18
 7482  00006ec8  000f2020	add	r4,r0,r15
 7483  00006ecc          	L326_LF5:
 7484  00006ecc  23bdffe8	addi	r29,r29,#-24
 7485  00006ed0  3c130000	lhi	r19,((LC48_LF5)>>16)&0xffff
 7486  00006ed4  2673fbf4	addui	r19,r19,(LC48_LF5)&0xffff
 7487  00006ed8  afb30000	sw	(r29),r19
 7488  00006edc  8fc1ff68	lw	r1,-152(r30)
 7489  00006ee0  00220820	add	r1,r1,r2
 7490  00006ee4  00230822	sub	r1,r1,r3
 7491  00006ee8  afa10004	sw	4(r29),r1
 7492  00006eec  90810000	lbu	r1,(r4)
 7493  00006ef0  afa10008	sw	8(r29),r1
 7494  00006ef4  90a10000	lbu	r1,(r5)
 7495  00006ef8  afa1000c	sw	12(r29),r1
 7496  00006efc  90c10000	lbu	r1,(r6)
 7497  00006f00  afa10010	sw	16(r29),r1
 7498  00006f04  90e10000	lbu	r1,(r7)
 7499  00006f08  afa10014	sw	20(r29),r1
 7500  00006f0c  0c003298	jal	_printf
 7501  00006f10  54000000	nop; not filled.
 7502  00006f14  23bd0018	addi	r29,r29,#24
 7503  00006f18  20e70004	addi	r7,r7,#4
 7504  00006f1c  20c60004	addi	r6,r6,#4
 7505  00006f20  20a50004	addi	r5,r5,#4
 7506  00006f24  20840004	addi	r4,r4,#4
 7507  00006f28  20420004	addi	r2,r2,#4
 7508  00006f2c  0043082a	slt	r1,r2,r3
 7509  00006f30  1420ff98	bnez	r1,L326_LF5
 7510  00006f34  54000000	nop; not filled.
 7511  00006f38  0bffff34	j	L320_LF5
 7512  00006f3c  54000000	nop; not filled.
 7513  00006f40          	L321_LF5:
 7514  00006f40  23bdfff8	addi	r29,r29,#-8
 7515  00006f44  afaa0000	sw	(r29),r10
 7516  00006f48  0c0031d8	jal	_close
 7517  00006f4c  54000000	nop; not filled.
 7518  00006f50  08000038	j	L355_LF5
 7519  00006f54  54000000	nop; not filled.
 7520  00006f58          	L328_LF5:
 7521  00006f58  21080004	addi	r8,r8,#4
 7522  00006f5c  21290001	addi	r9,r9,#1
 7523  00006f60  8d100000	lw	r16,(r8)
 7524  00006f64  08000028	j	L313_LF5
 7525  00006f68  54000000	nop; not filled.
 7526  00006f6c          	L329_LF5:
 7527  00006f6c  23bdfff8	addi	r29,r29,#-8
 7528  00006f70  3c130000	lhi	r19,((LC49_LF5)>>16)&0xffff
 7529  00006f74  2673fc0c	addui	r19,r19,(LC49_LF5)&0xffff
 7530  00006f78  afb30000	sw	(r29),r19
 7531  00006f7c  8d010000	lw	r1,(r8)
 7532  00006f80  afa10004	sw	4(r29),r1
 7533  00006f84  0c003220	jal	_printf
 7534  00006f88  54000000	nop; not filled.
 7535  00006f8c          	L355_LF5:
 7536  00006f8c  23bd0008	addi	r29,r29,#8
 7537  00006f90          	L313_LF5:
 7538  00006f90  21080004	addi	r8,r8,#4
 7539  00006f94  21290001	addi	r9,r9,#1
 7540  00006f98  012c082a	slt	r1,r9,r12
 7541  00006f9c  1420fcf8	bnez	r1,L314_LF5
 7542  00006fa0  54000000	nop; not filled.
 7543  00006fa4          	L312_LF5:
 7544  00006fa4  23bdfff8	addi	r29,r29,#-8
 7545  00006fa8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7546  00006fac  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7547  00006fb0  afa20000	sw	(r29),r2
 7548  00006fb4  20130069	addi	r19,r0,#105
 7549  00006fb8  afb30004	sw	4(r29),r19
 7550  00006fbc  0fffce58	jal	_dindex
 7551  00006fc0  54000000	nop; not filled.
 7552  00006fc4  23bd0008	addi	r29,r29,#8
 7553  00006fc8  64210000	snei	r1,r1,#0
 7554  00006fcc  1420002c	bnez	r1,L334_LF5
 7555  00006fd0  54000000	nop; not filled.
 7556  00006fd4  23bdfff8	addi	r29,r29,#-8
 7557  00006fd8  afa20000	sw	(r29),r2
 7558  00006fdc  2013002b	addi	r19,r0,#43
 7559  00006fe0  afb30004	sw	4(r29),r19
 7560  00006fe4  0fffce30	jal	_dindex
 7561  00006fe8  54000000	nop; not filled.
 7562  00006fec  23bd0008	addi	r29,r29,#8
 7563  00006ff0  64210000	snei	r1,r1,#0
 7564  00006ff4  10200020	beqz	r1,L333_LF5
 7565  00006ff8  54000000	nop; not filled.
 7566  00006ffc          	L334_LF5:
 7567  00006ffc  23bdfff8	addi	r29,r29,#-8
 7568  00007000  3c130000	lhi	r19,((LC50_LF5)>>16)&0xffff
 7569  00007004  2673fc28	addui	r19,r19,(LC50_LF5)&0xffff
 7570  00007008  afb30000	sw	(r29),r19
 7571  0000700c  0c003198	jal	_printf
 7572  00007010  54000000	nop; not filled.
 7573  00007014  23bd0008	addi	r29,r29,#8
 7574  00007018          	L333_LF5:
 7575  00007018  0c000914	jal	_QueueModuleInit
 7576  0000701c  54000000	nop; not filled.
 7577  00007020  23bdfff8	addi	r29,r29,#-8
 7578  00007024  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7579  00007028  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7580  0000702c  afa20000	sw	(r29),r2
 7581  00007030  20130069	addi	r19,r0,#105
 7582  00007034  afb30004	sw	4(r29),r19
 7583  00007038  0fffcddc	jal	_dindex
 7584  0000703c  54000000	nop; not filled.
 7585  00007040  23bd0008	addi	r29,r29,#8
 7586  00007044  64210000	snei	r1,r1,#0
 7587  00007048  1420002c	bnez	r1,L336_LF5
 7588  0000704c  54000000	nop; not filled.
 7589  00007050  23bdfff8	addi	r29,r29,#-8
 7590  00007054  afa20000	sw	(r29),r2
 7591  00007058  2013002b	addi	r19,r0,#43
 7592  0000705c  afb30004	sw	4(r29),r19
 7593  00007060  0fffcdb4	jal	_dindex
 7594  00007064  54000000	nop; not filled.
 7595  00007068  23bd0008	addi	r29,r29,#8
 7596  0000706c  64210000	snei	r1,r1,#0
 7597  00007070  10200020	beqz	r1,L335_LF5
 7598  00007074  54000000	nop; not filled.
 7599  00007078          	L336_LF5:
 7600  00007078  23bdfff8	addi	r29,r29,#-8
 7601  0000707c  3c130000	lhi	r19,((LC51_LF5)>>16)&0xffff
 7602  00007080  2673fc48	addui	r19,r19,(LC51_LF5)&0xffff
 7603  00007084  afb30000	sw	(r29),r19
 7604  00007088  0c00311c	jal	_printf
 7605  0000708c  54000000	nop; not filled.
 7606  00007090  23bd0008	addi	r29,r29,#8
 7607  00007094          	L335_LF5:
 7608  00007094  0fffbad4	jal	_MemoryModuleInit
 7609  00007098  54000000	nop; not filled.
 7610  0000709c  23bdfff8	addi	r29,r29,#-8
 7611  000070a0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7612  000070a4  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7613  000070a8  afa20000	sw	(r29),r2
 7614  000070ac  20130069	addi	r19,r0,#105
 7615  000070b0  afb30004	sw	4(r29),r19
 7616  000070b4  0fffcd60	jal	_dindex
 7617  000070b8  54000000	nop; not filled.
 7618  000070bc  23bd0008	addi	r29,r29,#8
 7619  000070c0  64210000	snei	r1,r1,#0
 7620  000070c4  1420002c	bnez	r1,L338_LF5
 7621  000070c8  54000000	nop; not filled.
 7622  000070cc  23bdfff8	addi	r29,r29,#-8
 7623  000070d0  afa20000	sw	(r29),r2
 7624  000070d4  2013002b	addi	r19,r0,#43
 7625  000070d8  afb30004	sw	4(r29),r19
 7626  000070dc  0fffcd38	jal	_dindex
 7627  000070e0  54000000	nop; not filled.
 7628  000070e4  23bd0008	addi	r29,r29,#8
 7629  000070e8  64210000	snei	r1,r1,#0
 7630  000070ec  10200020	beqz	r1,L337_LF5
 7631  000070f0  54000000	nop; not filled.
 7632  000070f4          	L338_LF5:
 7633  000070f4  23bdfff8	addi	r29,r29,#-8
 7634  000070f8  3c130000	lhi	r19,((LC52_LF5)>>16)&0xffff
 7635  000070fc  2673fc64	addui	r19,r19,(LC52_LF5)&0xffff
 7636  00007100  afb30000	sw	(r29),r19
 7637  00007104  0c0030a0	jal	_printf
 7638  00007108  54000000	nop; not filled.
 7639  0000710c  23bd0008	addi	r29,r29,#8
 7640  00007110          	L337_LF5:
 7641  00007110  0fffd608	jal	_ProcessModuleInit
 7642  00007114  54000000	nop; not filled.
 7643  00007118  23bdfff8	addi	r29,r29,#-8
 7644  0000711c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7645  00007120  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7646  00007124  afa20000	sw	(r29),r2
 7647  00007128  20130069	addi	r19,r0,#105
 7648  0000712c  afb30004	sw	4(r29),r19
 7649  00007130  0fffcce4	jal	_dindex
 7650  00007134  54000000	nop; not filled.
 7651  00007138  23bd0008	addi	r29,r29,#8
 7652  0000713c  64210000	snei	r1,r1,#0
 7653  00007140  1420002c	bnez	r1,L340_LF5
 7654  00007144  54000000	nop; not filled.
 7655  00007148  23bdfff8	addi	r29,r29,#-8
 7656  0000714c  afa20000	sw	(r29),r2
 7657  00007150  2013002b	addi	r19,r0,#43
 7658  00007154  afb30004	sw	4(r29),r19
 7659  00007158  0fffccbc	jal	_dindex
 7660  0000715c  54000000	nop; not filled.
 7661  00007160  23bd0008	addi	r29,r29,#8
 7662  00007164  64210000	snei	r1,r1,#0
 7663  00007168  10200020	beqz	r1,L339_LF5
 7664  0000716c  54000000	nop; not filled.
 7665  00007170          	L340_LF5:
 7666  00007170  23bdfff8	addi	r29,r29,#-8
 7667  00007174  3c130000	lhi	r19,((LC53_LF5)>>16)&0xffff
 7668  00007178  2673fc80	addui	r19,r19,(LC53_LF5)&0xffff
 7669  0000717c  afb30000	sw	(r29),r19
 7670  00007180  0c003024	jal	_printf
 7671  00007184  54000000	nop; not filled.
 7672  00007188  23bd0008	addi	r29,r29,#8
 7673  0000718c          	L339_LF5:
 7674  0000718c  0c0019c0	jal	_KbdModuleInit
 7675  00007190  54000000	nop; not filled.
 7676  00007194  23bdfff8	addi	r29,r29,#-8
 7677  00007198  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7678  0000719c  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7679  000071a0  afa20000	sw	(r29),r2
 7680  000071a4  20130069	addi	r19,r0,#105
 7681  000071a8  afb30004	sw	4(r29),r19
 7682  000071ac  0fffcc68	jal	_dindex
 7683  000071b0  54000000	nop; not filled.
 7684  000071b4  23bd0008	addi	r29,r29,#8
 7685  000071b8  64210000	snei	r1,r1,#0
 7686  000071bc  1420002c	bnez	r1,L342_LF5
 7687  000071c0  54000000	nop; not filled.
 7688  000071c4  23bdfff8	addi	r29,r29,#-8
 7689  000071c8  afa20000	sw	(r29),r2
 7690  000071cc  2013002b	addi	r19,r0,#43
 7691  000071d0  afb30004	sw	4(r29),r19
 7692  000071d4  0fffcc40	jal	_dindex
 7693  000071d8  54000000	nop; not filled.
 7694  000071dc  23bd0008	addi	r29,r29,#8
 7695  000071e0  64210000	snei	r1,r1,#0
 7696  000071e4  10200020	beqz	r1,L341_LF5
 7697  000071e8  54000000	nop; not filled.
 7698  000071ec          	L342_LF5:
 7699  000071ec  23bdfff8	addi	r29,r29,#-8
 7700  000071f0  3c130000	lhi	r19,((LC54_LF5)>>16)&0xffff
 7701  000071f4  2673fca0	addui	r19,r19,(LC54_LF5)&0xffff
 7702  000071f8  afb30000	sw	(r29),r19
 7703  000071fc  0c002fa8	jal	_printf
 7704  00007200  54000000	nop; not filled.
 7705  00007204  23bd0008	addi	r29,r29,#8
 7706  00007208          	L341_LF5:
 7707  00007208  23c2ff80	addi	r2,r30,#-128
 7708  0000720c  23c3ffe3	addi	r3,r30,#-29
 7709  00007210          	L346_LF5:
 7710  00007210  20130061	addi	r19,r0,(#0x61)&0xff
 7711  00007214  a0530000	sb	(r2),r19
 7712  00007218  20420001	addi	r2,r2,#1
 7713  0000721c  0043082c	sle	r1,r2,r3
 7714  00007220  1420ffec	bnez	r1,L346_LF5
 7715  00007224  54000000	nop; not filled.
 7716  00007228  23bdfff8	addi	r29,r29,#-8
 7717  0000722c  3c130000	lhi	r19,((LC55_LF5)>>16)&0xffff
 7718  00007230  2673fcc0	addui	r19,r19,(LC55_LF5)&0xffff
 7719  00007234  afb30000	sw	(r29),r19
 7720  00007238  20130002	addi	r19,r0,#2
 7721  0000723c  afb30004	sw	4(r29),r19
 7722  00007240  0fffa554	jal	_FsOpen
 7723  00007244  54000000	nop; not filled.
 7724  00007248  00014820	add	r9,r0,r1
 7725  0000724c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7726  00007250  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7727  00007254  afa20000	sw	(r29),r2
 7728  00007258  20130069	addi	r19,r0,#105
 7729  0000725c  afb30004	sw	4(r29),r19
 7730  00007260  0fffcbb4	jal	_dindex
 7731  00007264  54000000	nop; not filled.
 7732  00007268  23bd0008	addi	r29,r29,#8
 7733  0000726c  64210000	snei	r1,r1,#0
 7734  00007270  1420002c	bnez	r1,L349_LF5
 7735  00007274  54000000	nop; not filled.
 7736  00007278  23bdfff8	addi	r29,r29,#-8
 7737  0000727c  afa20000	sw	(r29),r2
 7738  00007280  2013002b	addi	r19,r0,#43
 7739  00007284  afb30004	sw	4(r29),r19
 7740  00007288  0fffcb8c	jal	_dindex
 7741  0000728c  54000000	nop; not filled.
 7742  00007290  23bd0008	addi	r29,r29,#8
 7743  00007294  64210000	snei	r1,r1,#0
 7744  00007298  10200024	beqz	r1,L348_LF5
 7745  0000729c  54000000	nop; not filled.
 7746  000072a0          	L349_LF5:
 7747  000072a0  23bdfff8	addi	r29,r29,#-8
 7748  000072a4  3c130000	lhi	r19,((LC56_LF5)>>16)&0xffff
 7749  000072a8  2673fcc4	addui	r19,r19,(LC56_LF5)&0xffff
 7750  000072ac  afb30000	sw	(r29),r19
 7751  000072b0  afa90004	sw	4(r29),r9
 7752  000072b4  0c002ef0	jal	_printf
 7753  000072b8  54000000	nop; not filled.
 7754  000072bc  23bd0008	addi	r29,r29,#8
 7755  000072c0          	L348_LF5:
 7756  000072c0  23bdfff0	addi	r29,r29,#-16
 7757  000072c4  afa90000	sw	(r29),r9
 7758  000072c8  20130000	addi	r19,r0,#0
 7759  000072cc  afb30004	sw	4(r29),r19
 7760  000072d0  afb30008	sw	8(r29),r19
 7761  000072d4  0fffab1c	jal	_FsSeek
 7762  000072d8  54000000	nop; not filled.
 7763  000072dc  afa90000	sw	(r29),r9
 7764  000072e0  23c1ff80	addi	r1,r30,#-128
 7765  000072e4  afa10004	sw	4(r29),r1
 7766  000072e8  20130050	addi	r19,r0,#80
 7767  000072ec  afb30008	sw	8(r29),r19
 7768  000072f0  0fffaa04	jal	_FsWrite
 7769  000072f4  54000000	nop; not filled.
 7770  000072f8  afa90000	sw	(r29),r9
 7771  000072fc  0fffa7f4	jal	_FsClose
 7772  00007300  54000000	nop; not filled.
 7773  00007304  23bd0010	addi	r29,r29,#16
 7774  00007308  66010000	snei	r1,r16,#0
 7775  0000730c  10200030	beqz	r1,L350_LF5
 7776  00007310  54000000	nop; not filled.
 7777  00007314  23bdfff0	addi	r29,r29,#-16
 7778  00007318  20130000	addi	r19,r0,#0
 7779  0000731c  afb30000	sw	(r29),r19
 7780  00007320  20131234	addi	r19,r0,#4660
 7781  00007324  afb30004	sw	4(r29),r19
 7782  00007328  afb00008	sw	8(r29),r16
 7783  0000732c  20130001	addi	r19,r0,#1
 7784  00007330  afb3000c	sw	12(r29),r19
 7785  00007334  0fffe150	jal	_ProcessFork
 7786  00007338  54000000	nop; not filled.
 7787  0000733c  23bd0010	addi	r29,r29,#16
 7788  00007340          	L350_LF5:
 7789  00007340  0c002d4c	jal	_SysprocCreateProcesses
 7790  00007344  54000000	nop; not filled.
 7791  00007348  23bdfff8	addi	r29,r29,#-8
 7792  0000734c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7793  00007350  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7794  00007354  afa20000	sw	(r29),r2
 7795  00007358  20130069	addi	r19,r0,#105
 7796  0000735c  afb30004	sw	4(r29),r19
 7797  00007360  0fffcab4	jal	_dindex
 7798  00007364  54000000	nop; not filled.
 7799  00007368  23bd0008	addi	r29,r29,#8
 7800  0000736c  64210000	snei	r1,r1,#0
 7801  00007370  1420002c	bnez	r1,L352_LF5
 7802  00007374  54000000	nop; not filled.
 7803  00007378  23bdfff8	addi	r29,r29,#-8
 7804  0000737c  afa20000	sw	(r29),r2
 7805  00007380  2013002b	addi	r19,r0,#43
 7806  00007384  afb30004	sw	4(r29),r19
 7807  00007388  0fffca8c	jal	_dindex
 7808  0000738c  54000000	nop; not filled.
 7809  00007390  23bd0008	addi	r29,r29,#8
 7810  00007394  64210000	snei	r1,r1,#0
 7811  00007398  10200020	beqz	r1,L351_LF5
 7812  0000739c  54000000	nop; not filled.
 7813  000073a0          	L352_LF5:
 7814  000073a0  23bdfff8	addi	r29,r29,#-8
 7815  000073a4  3c130000	lhi	r19,((LC57_LF5)>>16)&0xffff
 7816  000073a8  2673fcdc	addui	r19,r19,(LC57_LF5)&0xffff
 7817  000073ac  afb30000	sw	(r29),r19
 7818  000073b0  0c002df4	jal	_printf
 7819  000073b4  54000000	nop; not filled.
 7820  000073b8  23bd0008	addi	r29,r29,#8
 7821  000073bc          	L351_LF5:
 7822  000073bc  23bdfff8	addi	r29,r29,#-8
 7823  000073c0  3c030000	lhi	r3,((_processQuantum_LF5)>>16)&0xffff
 7824  000073c4  2463f420	addui	r3,r3,(_processQuantum_LF5)&0xffff
 7825  000073c8  8c730000	lw	r19,(r3)
 7826  000073cc  afb30000	sw	(r29),r19
 7827  000073d0  0c001748	jal	_TimerSet
 7828  000073d4  54000000	nop; not filled.
 7829  000073d8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7830  000073dc  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 7831  000073e0  afa20000	sw	(r29),r2
 7832  000073e4  20130069	addi	r19,r0,#105
 7833  000073e8  afb30004	sw	4(r29),r19
 7834  000073ec  0fffca28	jal	_dindex
 7835  000073f0  54000000	nop; not filled.
 7836  000073f4  23bd0008	addi	r29,r29,#8
 7837  000073f8  64210000	snei	r1,r1,#0
 7838  000073fc  1420002c	bnez	r1,L354_LF5
 7839  00007400  54000000	nop; not filled.
 7840  00007404  23bdfff8	addi	r29,r29,#-8
 7841  00007408  afa20000	sw	(r29),r2
 7842  0000740c  2013002b	addi	r19,r0,#43
 7843  00007410  afb30004	sw	4(r29),r19
 7844  00007414  0fffca00	jal	_dindex
 7845  00007418  54000000	nop; not filled.
 7846  0000741c  23bd0008	addi	r29,r29,#8
 7847  00007420  64210000	snei	r1,r1,#0
 7848  00007424  10200028	beqz	r1,L353_LF5
 7849  00007428  54000000	nop; not filled.
 7850  0000742c          	L354_LF5:
 7851  0000742c  23bdfff8	addi	r29,r29,#-8
 7852  00007430  3c130000	lhi	r19,((LC58_LF5)>>16)&0xffff
 7853  00007434  2673fd10	addui	r19,r19,(LC58_LF5)&0xffff
 7854  00007438  afb30000	sw	(r29),r19
 7855  0000743c  8c610000	lw	r1,(r3)
 7856  00007440  afa10004	sw	4(r29),r1
 7857  00007444  0c002d60	jal	_printf
 7858  00007448  54000000	nop; not filled.
 7859  0000744c  23bd0008	addi	r29,r29,#8
 7860  00007450          	L353_LF5:
 7861  00007450  0fff9d14	jal	_intrreturn
 7862  00007454  54000000	nop; not filled.
 7863  00007458  0c002d34	jal	_exitsim
 7864  0000745c  54000000	nop; not filled.
 7865  00007460  0c002d38	jal	_exit
 7866  00007464  54000000	nop
 7867  00007468          	.endproc _main
 7868  00007468          	.data
 7869  0000fd46          	.global _debugstr
 7870  0000fd46          	_debugstr:
 7871  0000fd46          	.space 200
 7872  0000fe0e          	.align 2
 7873  0000fe10          	.global _currentPCB
 7874  0000fe10          	_currentPCB:
 7875  0000fe10          	.space 4
 7876  0000fe14          	.align 2
 7877  0000fe14          	_freepcbs_LF5:
 7878  0000fe14          	.space 12
 7879  0000fe20          	.align 2
 7880  0000fe20          	_runQueue_LF5:
 7881  0000fe20          	.space 12
 7882  0000fe2c          	.align 2
 7883  0000fe2c          	_waitQueue_LF5:
 7884  0000fe2c          	.space 12
 7885  0000fe38          	.align 2
 7886  0000fe38          	_zombieQueue_LF5:
 7887  0000fe38          	.space 12
 7888  0000fe44          	.align 2
 7889  0000fe44          	_pcbs_LF5:
 7890  0000fe44          	.space 5760
 7891  000114c4          	.text
 7892  00007468          	.align 2
 7893  00007468          	.proc _ProcessExit_LF5
 7894  00007468          	_ProcessExit_LF5:
 7895                      ;  Function 'ProcessExit'; 0 bytes of locals, 0 regs to save.
 7896  00007468  afbefffc	sw	-4(r29),r30; push fp
 7897  0000746c  001df020	add	r30,r0,r29; fp = sp
 7898  00007470  afbffff8	sw	-8(r29),r31; push ret addr
 7899  00007474  2fbd0008	subui	r29,r29,#8; alloc local storage
 7900  00007478  0c002d20	jal	_exit
 7901  0000747c  54000000	nop; not filled.
 7902  00007480  8fdffff8	lw	r31,-8(r30)
 7903  00007484  001ee820	add	r29,r0,r30
 7904  00007488  8fdefffc	lw	r30,-4(r30)
 7905  0000748c  4be00000	jr	r31
 7906  00007490  54000000	nop
 7907  00007494          	.endproc _ProcessExit_LF5
 7908                      ; Compiled by GCC
 7910  00007494          	.align 2
 7911  00007494          	.proc _isspace
 7912  00007494          	.global _isspace
 7913  00007494          	_isspace:
 7914                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 7915  00007494  afbefffc	sw	-4(r29),r30; push fp
 7916  00007498  001df020	add	r30,r0,r29; fp = sp
 7917  0000749c  afbffff8	sw	-8(r29),r31; push ret addr
 7918  000074a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 7919  000074a4  afa20000	sw	0(r29),r2
 7920  000074a8  83c20003	lb	r2,3(r30)
 7921  000074ac  201f0000	addi	r31,r0,#0
 7922  000074b0  304100ff	andi	r1,r2,#0x00ff
 7923  000074b4  60210020	seqi	r1,r1,#32
 7924  000074b8  14200018	bnez	r1,L6_LF6
 7925  000074bc  54000000	nop; not filled.
 7926  000074c0  2041fff7	addi	r1,r2,#-9
 7927  000074c4  302100ff	andi	r1,r1,#0x00ff
 7928  000074c8  70210001	sleui	r1,r1,#1
 7929  000074cc  10200008	beqz	r1,L5_LF6
 7930  000074d0  54000000	nop; not filled.
 7931  000074d4          	L6_LF6:
 7932  000074d4  201f0001	addi	r31,r0,#1
 7933  000074d8          	L5_LF6:
 7934  000074d8  001f0820	add	r1,r0,r31
 7935  000074dc  8fa20000	lw	r2,0(r29)
 7936  000074e0  8fdffff8	lw	r31,-8(r30)
 7937  000074e4  001ee820	add	r29,r0,r30
 7938  000074e8  8fdefffc	lw	r30,-4(r30)
 7939  000074ec  4be00000	jr	r31
 7940  000074f0  54000000	nop
 7941  000074f4          	.endproc _isspace
 7942  000074f4          	.align 2
 7943  000074f4          	.proc _isxdigit
 7944  000074f4          	.global _isxdigit
 7945  000074f4          	_isxdigit:
 7946                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 7947  000074f4  afbefffc	sw	-4(r29),r30; push fp
 7948  000074f8  001df020	add	r30,r0,r29; fp = sp
 7949  000074fc  afbffff8	sw	-8(r29),r31; push ret addr
 7950  00007500  2fbd0010	subui	r29,r29,#16; alloc local storage
 7951  00007504  afa20000	sw	0(r29),r2
 7952  00007508  83df0003	lb	r31,3(r30)
 7953  0000750c  20020000	addi	r2,r0,#0
 7954  00007510  23e1ffd0	addi	r1,r31,#-48
 7955  00007514  302100ff	andi	r1,r1,#0x00ff
 7956  00007518  70210009	sleui	r1,r1,#9
 7957  0000751c  14200028	bnez	r1,L12_LF6
 7958  00007520  54000000	nop; not filled.
 7959  00007524  23e1ff9f	addi	r1,r31,#-97
 7960  00007528  302100ff	andi	r1,r1,#0x00ff
 7961  0000752c  70210005	sleui	r1,r1,#5
 7962  00007530  14200014	bnez	r1,L12_LF6
 7963  00007534  54000000	nop; not filled.
 7964  00007538  33e100ff	andi	r1,r31,#0x00ff
 7965  0000753c  64210041	snei	r1,r1,#65
 7966  00007540  14200008	bnez	r1,L11_LF6
 7967  00007544  54000000	nop; not filled.
 7968  00007548          	L12_LF6:
 7969  00007548  20020001	addi	r2,r0,#1
 7970  0000754c          	L11_LF6:
 7971  0000754c  00020820	add	r1,r0,r2
 7972  00007550  8fa20000	lw	r2,0(r29)
 7973  00007554  8fdffff8	lw	r31,-8(r30)
 7974  00007558  001ee820	add	r29,r0,r30
 7975  0000755c  8fdefffc	lw	r30,-4(r30)
 7976  00007560  4be00000	jr	r31
 7977  00007564  54000000	nop
 7978  00007568          	.endproc _isxdigit
 7979  00007568          	.align 2
 7980  00007568          	.proc _DisableIntrs
 7981  00007568          	.global _DisableIntrs
 7982  00007568          	_DisableIntrs:
 7983                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 7984  00007568  afbefffc	sw	-4(r29),r30; push fp
 7985  0000756c  001df020	add	r30,r0,r29; fp = sp
 7986  00007570  afbffff8	sw	-8(r29),r31; push ret addr
 7987  00007574  2fbd0010	subui	r29,r29,#16; alloc local storage
 7988  00007578  afa20000	sw	0(r29),r2
 7989  0000757c  23bdfff8	addi	r29,r29,#-8
 7990  00007580  2002000f	addi	r2,r0,#15
 7991  00007584  afa20000	sw	(r29),r2
 7992  00007588  0fff9cfc	jal	_SetIntrs
 7993  0000758c  54000000	nop; not filled.
 7994  00007590  23bd0008	addi	r29,r29,#8
 7995  00007594  8fa20000	lw	r2,0(r29)
 7996  00007598  8fdffff8	lw	r31,-8(r30)
 7997  0000759c  001ee820	add	r29,r0,r30
 7998  000075a0  8fdefffc	lw	r30,-4(r30)
 7999  000075a4  4be00000	jr	r31
 8000  000075a8  54000000	nop
 8001  000075ac          	.endproc _DisableIntrs
 8002  000075ac          	.align 2
 8003  000075ac          	.proc _EnableIntrs
 8004  000075ac          	.global _EnableIntrs
 8005  000075ac          	_EnableIntrs:
 8006                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 8007  000075ac  afbefffc	sw	-4(r29),r30; push fp
 8008  000075b0  001df020	add	r30,r0,r29; fp = sp
 8009  000075b4  afbffff8	sw	-8(r29),r31; push ret addr
 8010  000075b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 8011  000075bc  afa20000	sw	0(r29),r2
 8012  000075c0  23bdfff8	addi	r29,r29,#-8
 8013  000075c4  20020000	addi	r2,r0,#0
 8014  000075c8  afa20000	sw	(r29),r2
 8015  000075cc  0fff9cb8	jal	_SetIntrs
 8016  000075d0  54000000	nop; not filled.
 8017  000075d4  23bd0008	addi	r29,r29,#8
 8018  000075d8  8fa20000	lw	r2,0(r29)
 8019  000075dc  8fdffff8	lw	r31,-8(r30)
 8020  000075e0  001ee820	add	r29,r0,r30
 8021  000075e4  8fdefffc	lw	r30,-4(r30)
 8022  000075e8  4be00000	jr	r31
 8023  000075ec  54000000	nop
 8024  000075f0          	.endproc _EnableIntrs
 8025  000075f0          	.align 2
 8026  000075f0          	.proc _RestoreIntrs
 8027  000075f0          	.global _RestoreIntrs
 8028  000075f0          	_RestoreIntrs:
 8029                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 8030  000075f0  afbefffc	sw	-4(r29),r30; push fp
 8031  000075f4  001df020	add	r30,r0,r29; fp = sp
 8032  000075f8  afbffff8	sw	-8(r29),r31; push ret addr
 8033  000075fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 8034  00007600  afa20000	sw	0(r29),r2
 8035  00007604  23bdfff8	addi	r29,r29,#-8
 8036  00007608  8fc20000	lw	r2,(r30)
 8037  0000760c  afa20000	sw	(r29),r2
 8038  00007610  0fff9c74	jal	_SetIntrs
 8039  00007614  54000000	nop; not filled.
 8040  00007618  23bd0008	addi	r29,r29,#8
 8041  0000761c  8fa20000	lw	r2,0(r29)
 8042  00007620  8fdffff8	lw	r31,-8(r30)
 8043  00007624  001ee820	add	r29,r0,r30
 8044  00007628  8fdefffc	lw	r30,-4(r30)
 8045  0000762c  4be00000	jr	r31
 8046  00007630  54000000	nop
 8047  00007634          	.endproc _RestoreIntrs
 8048  00007634          	.align 2
 8049  00007634          	.proc _QueueLinkInit
 8050  00007634          	.global _QueueLinkInit
 8051  00007634          	_QueueLinkInit:
 8052                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 8053  00007634  afbefffc	sw	-4(r29),r30; push fp
 8054  00007638  001df020	add	r30,r0,r29; fp = sp
 8055  0000763c  afbffff8	sw	-8(r29),r31; push ret addr
 8056  00007640  2fbd0010	subui	r29,r29,#16; alloc local storage
 8057  00007644  afa20000	sw	0(r29),r2
 8058  00007648  8fc10000	lw	r1,(r30)
 8059  0000764c  8fc20004	lw	r2,4(r30)
 8060  00007650  201f0000	addi	r31,r0,#0
 8061  00007654  ac3f0000	sw	(r1),r31
 8062  00007658  ac22000c	sw	12(r1),r2
 8063  0000765c  8fa20000	lw	r2,0(r29)
 8064  00007660  8fdffff8	lw	r31,-8(r30)
 8065  00007664  001ee820	add	r29,r0,r30
 8066  00007668  8fdefffc	lw	r30,-4(r30)
 8067  0000766c  4be00000	jr	r31
 8068  00007670  54000000	nop
 8069  00007674          	.endproc _QueueLinkInit
 8070  00007674          	.align 2
 8071  00007674          	.proc _QueueNext
 8072  00007674          	.global _QueueNext
 8073  00007674          	_QueueNext:
 8074                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 8075  00007674  afbefffc	sw	-4(r29),r30; push fp
 8076  00007678  001df020	add	r30,r0,r29; fp = sp
 8077  0000767c  afbffff8	sw	-8(r29),r31; push ret addr
 8078  00007680  2fbd0008	subui	r29,r29,#8; alloc local storage
 8079  00007684  8fc10000	lw	r1,(r30)
 8080  00007688  8c210000	lw	r1,(r1)
 8081  0000768c  8fdffff8	lw	r31,-8(r30)
 8082  00007690  001ee820	add	r29,r0,r30
 8083  00007694  8fdefffc	lw	r30,-4(r30)
 8084  00007698  4be00000	jr	r31
 8085  0000769c  54000000	nop
 8086  000076a0          	.endproc _QueueNext
 8087  000076a0          	.align 2
 8088  000076a0          	.proc _QueuePrev
 8089  000076a0          	.global _QueuePrev
 8090  000076a0          	_QueuePrev:
 8091                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 8092  000076a0  afbefffc	sw	-4(r29),r30; push fp
 8093  000076a4  001df020	add	r30,r0,r29; fp = sp
 8094  000076a8  afbffff8	sw	-8(r29),r31; push ret addr
 8095  000076ac  2fbd0008	subui	r29,r29,#8; alloc local storage
 8096  000076b0  8fc10000	lw	r1,(r30)
 8097  000076b4  8c210004	lw	r1,4(r1)
 8098  000076b8  8fdffff8	lw	r31,-8(r30)
 8099  000076bc  001ee820	add	r29,r0,r30
 8100  000076c0  8fdefffc	lw	r30,-4(r30)
 8101  000076c4  4be00000	jr	r31
 8102  000076c8  54000000	nop
 8103  000076cc          	.endproc _QueuePrev
 8104  000076cc          	.align 2
 8105  000076cc          	.proc _QueueFirst
 8106  000076cc          	.global _QueueFirst
 8107  000076cc          	_QueueFirst:
 8108                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 8109  000076cc  afbefffc	sw	-4(r29),r30; push fp
 8110  000076d0  001df020	add	r30,r0,r29; fp = sp
 8111  000076d4  afbffff8	sw	-8(r29),r31; push ret addr
 8112  000076d8  2fbd0008	subui	r29,r29,#8; alloc local storage
 8113  000076dc  8fc10000	lw	r1,(r30)
 8114  000076e0  8c210000	lw	r1,(r1)
 8115  000076e4  8fdffff8	lw	r31,-8(r30)
 8116  000076e8  001ee820	add	r29,r0,r30
 8117  000076ec  8fdefffc	lw	r30,-4(r30)
 8118  000076f0  4be00000	jr	r31
 8119  000076f4  54000000	nop
 8120  000076f8          	.endproc _QueueFirst
 8121  000076f8          	.align 2
 8122  000076f8          	.proc _QueueLast
 8123  000076f8          	.global _QueueLast
 8124  000076f8          	_QueueLast:
 8125                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 8126  000076f8  afbefffc	sw	-4(r29),r30; push fp
 8127  000076fc  001df020	add	r30,r0,r29; fp = sp
 8128  00007700  afbffff8	sw	-8(r29),r31; push ret addr
 8129  00007704  2fbd0008	subui	r29,r29,#8; alloc local storage
 8130  00007708  8fc10000	lw	r1,(r30)
 8131  0000770c  8c210004	lw	r1,4(r1)
 8132  00007710  8fdffff8	lw	r31,-8(r30)
 8133  00007714  001ee820	add	r29,r0,r30
 8134  00007718  8fdefffc	lw	r30,-4(r30)
 8135  0000771c  4be00000	jr	r31
 8136  00007720  54000000	nop
 8137  00007724          	.endproc _QueueLast
 8138  00007724          	.align 2
 8139  00007724          	.proc _QueueInsertAfter
 8140  00007724          	.global _QueueInsertAfter
 8141  00007724          	_QueueInsertAfter:
 8142                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 8143  00007724  afbefffc	sw	-4(r29),r30; push fp
 8144  00007728  001df020	add	r30,r0,r29; fp = sp
 8145  0000772c  afbffff8	sw	-8(r29),r31; push ret addr
 8146  00007730  2fbd0010	subui	r29,r29,#16; alloc local storage
 8147  00007734  afa20000	sw	0(r29),r2
 8148  00007738  afa30004	sw	4(r29),r3
 8149  0000773c  8fc30000	lw	r3,(r30)
 8150  00007740  8fc20004	lw	r2,4(r30)
 8151  00007744  8fc10008	lw	r1,8(r30)
 8152  00007748  ac230008	sw	8(r1),r3
 8153  0000774c  ac220004	sw	4(r1),r2
 8154  00007750  8c5f0000	lw	r31,(r2)
 8155  00007754  ac3f0000	sw	(r1),r31
 8156  00007758  ac410000	sw	(r2),r1
 8157  0000775c  8c220000	lw	r2,(r1)
 8158  00007760  ac410004	sw	4(r2),r1
 8159  00007764  8c610008	lw	r1,8(r3)
 8160  00007768  20210001	addi	r1,r1,#1
 8161  0000776c  ac610008	sw	8(r3),r1
 8162  00007770  8fa20000	lw	r2,0(r29)
 8163  00007774  8fa30004	lw	r3,4(r29)
 8164  00007778  8fdffff8	lw	r31,-8(r30)
 8165  0000777c  001ee820	add	r29,r0,r30
 8166  00007780  8fdefffc	lw	r30,-4(r30)
 8167  00007784  4be00000	jr	r31
 8168  00007788  54000000	nop
 8169  0000778c          	.endproc _QueueInsertAfter
 8170  0000778c          	.align 2
 8171  0000778c          	.proc _QueueInsertFirst
 8172  0000778c          	.global _QueueInsertFirst
 8173  0000778c          	_QueueInsertFirst:
 8174                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 8175  0000778c  afbefffc	sw	-4(r29),r30; push fp
 8176  00007790  001df020	add	r30,r0,r29; fp = sp
 8177  00007794  afbffff8	sw	-8(r29),r31; push ret addr
 8178  00007798  2fbd0010	subui	r29,r29,#16; alloc local storage
 8179  0000779c  afa20000	sw	0(r29),r2
 8180  000077a0  afa30004	sw	4(r29),r3
 8181  000077a4  8fc30000	lw	r3,(r30)
 8182  000077a8  8fc10004	lw	r1,4(r30)
 8183  000077ac  ac230008	sw	8(r1),r3
 8184  000077b0  ac230004	sw	4(r1),r3
 8185  000077b4  8c7f0000	lw	r31,(r3)
 8186  000077b8  ac3f0000	sw	(r1),r31
 8187  000077bc  ac610000	sw	(r3),r1
 8188  000077c0  8c220000	lw	r2,(r1)
 8189  000077c4  ac410004	sw	4(r2),r1
 8190  000077c8  8c610008	lw	r1,8(r3)
 8191  000077cc  20210001	addi	r1,r1,#1
 8192  000077d0  ac610008	sw	8(r3),r1
 8193  000077d4  8fa20000	lw	r2,0(r29)
 8194  000077d8  8fa30004	lw	r3,4(r29)
 8195  000077dc  8fdffff8	lw	r31,-8(r30)
 8196  000077e0  001ee820	add	r29,r0,r30
 8197  000077e4  8fdefffc	lw	r30,-4(r30)
 8198  000077e8  4be00000	jr	r31
 8199  000077ec  54000000	nop
 8200  000077f0          	.endproc _QueueInsertFirst
 8201  000077f0          	.align 2
 8202  000077f0          	.proc _QueueInsertLast
 8203  000077f0          	.global _QueueInsertLast
 8204  000077f0          	_QueueInsertLast:
 8205                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 8206  000077f0  afbefffc	sw	-4(r29),r30; push fp
 8207  000077f4  001df020	add	r30,r0,r29; fp = sp
 8208  000077f8  afbffff8	sw	-8(r29),r31; push ret addr
 8209  000077fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 8210  00007800  afa20000	sw	0(r29),r2
 8211  00007804  afa30004	sw	4(r29),r3
 8212  00007808  8fc30000	lw	r3,(r30)
 8213  0000780c  8fc10004	lw	r1,4(r30)
 8214  00007810  8c620004	lw	r2,4(r3)
 8215  00007814  ac230008	sw	8(r1),r3
 8216  00007818  ac220004	sw	4(r1),r2
 8217  0000781c  8c5f0000	lw	r31,(r2)
 8218  00007820  ac3f0000	sw	(r1),r31
 8219  00007824  ac410000	sw	(r2),r1
 8220  00007828  8c220000	lw	r2,(r1)
 8221  0000782c  ac410004	sw	4(r2),r1
 8222  00007830  8c610008	lw	r1,8(r3)
 8223  00007834  20210001	addi	r1,r1,#1
 8224  00007838  ac610008	sw	8(r3),r1
 8225  0000783c  8fa20000	lw	r2,0(r29)
 8226  00007840  8fa30004	lw	r3,4(r29)
 8227  00007844  8fdffff8	lw	r31,-8(r30)
 8228  00007848  001ee820	add	r29,r0,r30
 8229  0000784c  8fdefffc	lw	r30,-4(r30)
 8230  00007850  4be00000	jr	r31
 8231  00007854  54000000	nop
 8232  00007858          	.endproc _QueueInsertLast
 8233  00007858          	.align 2
 8234  00007858          	.proc _QueueRemove
 8235  00007858          	.global _QueueRemove
 8236  00007858          	_QueueRemove:
 8237                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 8238  00007858  afbefffc	sw	-4(r29),r30; push fp
 8239  0000785c  001df020	add	r30,r0,r29; fp = sp
 8240  00007860  afbffff8	sw	-8(r29),r31; push ret addr
 8241  00007864  2fbd0010	subui	r29,r29,#16; alloc local storage
 8242  00007868  afa20000	sw	0(r29),r2
 8243  0000786c  afa30004	sw	4(r29),r3
 8244  00007870  8fdf0000	lw	r31,(r30)
 8245  00007874  8fe10008	lw	r1,8(r31)
 8246  00007878  8c210008	lw	r1,8(r1)
 8247  0000787c  6c210000	sgti	r1,r1,#0
 8248  00007880  1020002c	beqz	r1,L44_LF6
 8249  00007884  54000000	nop; not filled.
 8250  00007888  8fe10004	lw	r1,4(r31)
 8251  0000788c  8fe30000	lw	r3,(r31)
 8252  00007890  ac230000	sw	(r1),r3
 8253  00007894  8fe10000	lw	r1,(r31)
 8254  00007898  8fe30004	lw	r3,4(r31)
 8255  0000789c  ac230004	sw	4(r1),r3
 8256  000078a0  8fe20008	lw	r2,8(r31)
 8257  000078a4  8c410008	lw	r1,8(r2)
 8258  000078a8  2021ffff	addi	r1,r1,#-1
 8259  000078ac  ac410008	sw	8(r2),r1
 8260  000078b0          	L44_LF6:
 8261  000078b0  20030000	addi	r3,r0,#0
 8262  000078b4  afe30000	sw	(r31),r3
 8263  000078b8  8fa20000	lw	r2,0(r29)
 8264  000078bc  8fa30004	lw	r3,4(r29)
 8265  000078c0  8fdffff8	lw	r31,-8(r30)
 8266  000078c4  001ee820	add	r29,r0,r30
 8267  000078c8  8fdefffc	lw	r30,-4(r30)
 8268  000078cc  4be00000	jr	r31
 8269  000078d0  54000000	nop
 8270  000078d4          	.endproc _QueueRemove
 8271  000078d4          	.align 2
 8272  000078d4          	.proc _QueueLength
 8273  000078d4          	.global _QueueLength
 8274  000078d4          	_QueueLength:
 8275                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 8276  000078d4  afbefffc	sw	-4(r29),r30; push fp
 8277  000078d8  001df020	add	r30,r0,r29; fp = sp
 8278  000078dc  afbffff8	sw	-8(r29),r31; push ret addr
 8279  000078e0  2fbd0008	subui	r29,r29,#8; alloc local storage
 8280  000078e4  8fc10000	lw	r1,(r30)
 8281  000078e8  8c210008	lw	r1,8(r1)
 8282  000078ec  8fdffff8	lw	r31,-8(r30)
 8283  000078f0  001ee820	add	r29,r0,r30
 8284  000078f4  8fdefffc	lw	r30,-4(r30)
 8285  000078f8  4be00000	jr	r31
 8286  000078fc  54000000	nop
 8287  00007900          	.endproc _QueueLength
 8288  00007900          	.align 2
 8289  00007900          	.proc _QueueEmpty
 8290  00007900          	.global _QueueEmpty
 8291  00007900          	_QueueEmpty:
 8292                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 8293  00007900  afbefffc	sw	-4(r29),r30; push fp
 8294  00007904  001df020	add	r30,r0,r29; fp = sp
 8295  00007908  afbffff8	sw	-8(r29),r31; push ret addr
 8296  0000790c  2fbd0008	subui	r29,r29,#8; alloc local storage
 8297  00007910  8fc10000	lw	r1,(r30)
 8298  00007914  8c210008	lw	r1,8(r1)
 8299  00007918  60210000	seqi	r1,r1,#0
 8300  0000791c  8fdffff8	lw	r31,-8(r30)
 8301  00007920  001ee820	add	r29,r0,r30
 8302  00007924  8fdefffc	lw	r30,-4(r30)
 8303  00007928  4be00000	jr	r31
 8304  0000792c  54000000	nop
 8305  00007930          	.endproc _QueueEmpty
 8306  00007930          	.data
 8307  000114c4          	.align 2
 8308  000114c4          	LC0_LF6:
 8309  000114c4  496e6974	.ascii "Initializing queue link %d.\n\000"
 8309  000114c8  69616c69	
 8309  000114cc  7a696e67	
 8309  000114d0  20717565	
 8309  000114d4  7565206c	
 8309  000114d8  696e6b20	
 8309  000114dc  25642e0a	
 8309  000114e0  00      	
 8310  000114e1          	.text
 8311  00007930          	.align 2
 8312  00007930          	.proc _QueueModuleInit
 8313  00007930          	.global _QueueModuleInit
 8314  00007930          	_QueueModuleInit:
 8315                      ;  Function 'QueueModuleInit'; 0 bytes of locals, 4 regs to save.
 8316  00007930  afbefffc	sw	-4(r29),r30; push fp
 8317  00007934  001df020	add	r30,r0,r29; fp = sp
 8318  00007938  afbffff8	sw	-8(r29),r31; push ret addr
 8319  0000793c  2fbd0018	subui	r29,r29,#24; alloc local storage
 8320  00007940  afa20000	sw	0(r29),r2
 8321  00007944  afa30004	sw	4(r29),r3
 8322  00007948  afa40008	sw	8(r29),r4
 8323  0000794c  afa5000c	sw	12(r29),r5
 8324  00007950  23bdfff8	addi	r29,r29,#-8
 8325  00007954  3c050001	lhi	r5,((_freeLinks)>>16)&0xffff
 8326  00007958  24a51530	addui	r5,r5,(_freeLinks)&0xffff
 8327  0000795c  afa50000	sw	(r29),r5
 8328  00007960  0c0000e0	jal	_QueueInit
 8329  00007964  54000000	nop; not filled.
 8330  00007968  20030000	addi	r3,r0,#0
 8331  0000796c  23bd0008	addi	r29,r29,#8
 8332  00007970  3c040000	lhi	r4,((_debugstr)>>16)&0xffff
 8333  00007974  2484fd46	addui	r4,r4,(_debugstr)&0xffff
 8334  00007978  3c020001	lhi	r2,((_linkpool_LF6)>>16)&0xffff
 8335  0000797c  2442153c	addui	r2,r2,(_linkpool_LF6)&0xffff
 8336  00007980          	L63_LF6:
 8337  00007980  23bdfff8	addi	r29,r29,#-8
 8338  00007984  afa40000	sw	(r29),r4
 8339  00007988  20050069	addi	r5,r0,#105
 8340  0000798c  afa50004	sw	4(r29),r5
 8341  00007990  0fffc484	jal	_dindex
 8342  00007994  54000000	nop; not filled.
 8343  00007998  23bd0008	addi	r29,r29,#8
 8344  0000799c  64210000	snei	r1,r1,#0
 8345  000079a0  1420002c	bnez	r1,L65_LF6
 8346  000079a4  54000000	nop; not filled.
 8347  000079a8  23bdfff8	addi	r29,r29,#-8
 8348  000079ac  afa40000	sw	(r29),r4
 8349  000079b0  2005002b	addi	r5,r0,#43
 8350  000079b4  afa50004	sw	4(r29),r5
 8351  000079b8  0fffc45c	jal	_dindex
 8352  000079bc  54000000	nop; not filled.
 8353  000079c0  23bd0008	addi	r29,r29,#8
 8354  000079c4  64210000	snei	r1,r1,#0
 8355  000079c8  10200024	beqz	r1,L64_LF6
 8356  000079cc  54000000	nop; not filled.
 8357  000079d0          	L65_LF6:
 8358  000079d0  23bdfff8	addi	r29,r29,#-8
 8359  000079d4  3c050001	lhi	r5,((LC0_LF6)>>16)&0xffff
 8360  000079d8  24a514c4	addui	r5,r5,(LC0_LF6)&0xffff
 8361  000079dc  afa50000	sw	(r29),r5
 8362  000079e0  afa30004	sw	4(r29),r3
 8363  000079e4  0c0027c0	jal	_printf
 8364  000079e8  54000000	nop; not filled.
 8365  000079ec  23bd0008	addi	r29,r29,#8
 8366  000079f0          	L64_LF6:
 8367  000079f0  20050000	addi	r5,r0,#0
 8368  000079f4  ac450000	sw	(r2),r5
 8369  000079f8  23bdfff8	addi	r29,r29,#-8
 8370  000079fc  afa20000	sw	(r29),r2
 8371  00007a00  0c000078	jal	_QueueFreeLink
 8372  00007a04  54000000	nop; not filled.
 8373  00007a08  23bd0008	addi	r29,r29,#8
 8374  00007a0c  20420010	addi	r2,r2,#16
 8375  00007a10  20630001	addi	r3,r3,#1
 8376  00007a14  7061018f	slei	r1,r3,#399
 8377  00007a18  1420ff64	bnez	r1,L63_LF6
 8378  00007a1c  54000000	nop; not filled.
 8379  00007a20  8fa20000	lw	r2,0(r29)
 8380  00007a24  8fa30004	lw	r3,4(r29)
 8381  00007a28  8fa40008	lw	r4,8(r29)
 8382  00007a2c  8fa5000c	lw	r5,12(r29)
 8383  00007a30  8fdffff8	lw	r31,-8(r30)
 8384  00007a34  001ee820	add	r29,r0,r30
 8385  00007a38  8fdefffc	lw	r30,-4(r30)
 8386  00007a3c  4be00000	jr	r31
 8387  00007a40  54000000	nop
 8388  00007a44          	.endproc _QueueModuleInit
 8389  00007a44          	.align 2
 8390  00007a44          	.proc _QueueInit
 8391  00007a44          	.global _QueueInit
 8392  00007a44          	_QueueInit:
 8393                      ;  Function 'QueueInit'; 0 bytes of locals, 0 regs to save.
 8394  00007a44  afbefffc	sw	-4(r29),r30; push fp
 8395  00007a48  001df020	add	r30,r0,r29; fp = sp
 8396  00007a4c  afbffff8	sw	-8(r29),r31; push ret addr
 8397  00007a50  2fbd0008	subui	r29,r29,#8; alloc local storage
 8398  00007a54  8fc10000	lw	r1,(r30)
 8399  00007a58  ac210000	sw	(r1),r1
 8400  00007a5c  ac210004	sw	4(r1),r1
 8401  00007a60  201f0000	addi	r31,r0,#0
 8402  00007a64  ac3f0008	sw	8(r1),r31
 8403  00007a68  8fdffff8	lw	r31,-8(r30)
 8404  00007a6c  001ee820	add	r29,r0,r30
 8405  00007a70  8fdefffc	lw	r30,-4(r30)
 8406  00007a74  4be00000	jr	r31
 8407  00007a78  54000000	nop
 8408  00007a7c          	.endproc _QueueInit
 8409  00007a7c          	.data
 8410  000114e1          	.align 2
 8411  000114e4          	LC1_LF6:
 8412  000114e4  25733a20	.ascii "%s: %s\n\000"
 8412  000114e8  25730a00	
 8413  000114ec          	.align 2
 8414  000114ec          	LC2_LF6:
 8415  000114ec  51756575	.ascii "QueueFreeLink\000"
 8415  000114f0  65467265	
 8415  000114f4  654c696e	
 8415  000114f8  6b00    	
 8416  000114fa          	.align 2
 8417  000114fc          	LC3_LF6:
 8418  000114fc  4c696e6b	.ascii "Link not empty\000"
 8418  00011500  206e6f74	
 8418  00011504  20656d70	
 8418  00011508  747900  	
 8419  0001150b          	.text
 8420  00007a7c          	.align 2
 8421  00007a7c          	.proc _QueueFreeLink
 8422  00007a7c          	.global _QueueFreeLink
 8423  00007a7c          	_QueueFreeLink:
 8424                      ;  Function 'QueueFreeLink'; 0 bytes of locals, 3 regs to save.
 8425  00007a7c  afbefffc	sw	-4(r29),r30; push fp
 8426  00007a80  001df020	add	r30,r0,r29; fp = sp
 8427  00007a84  afbffff8	sw	-8(r29),r31; push ret addr
 8428  00007a88  2fbd0018	subui	r29,r29,#24; alloc local storage
 8429  00007a8c  afa20000	sw	0(r29),r2
 8430  00007a90  afa30004	sw	4(r29),r3
 8431  00007a94  afa40008	sw	8(r29),r4
 8432  00007a98  8fc30000	lw	r3,(r30)
 8433  00007a9c  8c610000	lw	r1,(r3)
 8434  00007aa0  64210000	snei	r1,r1,#0
 8435  00007aa4  10200038	beqz	r1,L77_LF6
 8436  00007aa8  54000000	nop; not filled.
 8437  00007aac  23bdfff0	addi	r29,r29,#-16
 8438  00007ab0  3c040001	lhi	r4,((LC1_LF6)>>16)&0xffff
 8439  00007ab4  248414e4	addui	r4,r4,(LC1_LF6)&0xffff
 8440  00007ab8  afa40000	sw	(r29),r4
 8441  00007abc  3c010001	lhi	r1,((LC2_LF6)>>16)&0xffff
 8442  00007ac0  242114ec	addui	r1,r1,(LC2_LF6)&0xffff
 8443  00007ac4  afa10004	sw	4(r29),r1
 8444  00007ac8  3c040001	lhi	r4,((LC3_LF6)>>16)&0xffff
 8445  00007acc  248414fc	addui	r4,r4,(LC3_LF6)&0xffff
 8446  00007ad0  afa40008	sw	8(r29),r4
 8447  00007ad4  0c0026d0	jal	_printf
 8448  00007ad8  54000000	nop; not filled.
 8449  00007adc  23bd0010	addi	r29,r29,#16
 8450  00007ae0          	L77_LF6:
 8451  00007ae0  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8452  00007ae4  24421530	addui	r2,r2,(_freeLinks)&0xffff
 8453  00007ae8  8c410004	lw	r1,4(r2)
 8454  00007aec  ac620008	sw	8(r3),r2
 8455  00007af0  ac610004	sw	4(r3),r1
 8456  00007af4  8c240000	lw	r4,(r1)
 8457  00007af8  ac640000	sw	(r3),r4
 8458  00007afc  ac230000	sw	(r1),r3
 8459  00007b00  8c610000	lw	r1,(r3)
 8460  00007b04  ac230004	sw	4(r1),r3
 8461  00007b08  8c410008	lw	r1,8(r2)
 8462  00007b0c  20210001	addi	r1,r1,#1
 8463  00007b10  ac410008	sw	8(r2),r1
 8464  00007b14  8fa20000	lw	r2,0(r29)
 8465  00007b18  8fa30004	lw	r3,4(r29)
 8466  00007b1c  8fa40008	lw	r4,8(r29)
 8467  00007b20  8fdffff8	lw	r31,-8(r30)
 8468  00007b24  001ee820	add	r29,r0,r30
 8469  00007b28  8fdefffc	lw	r30,-4(r30)
 8470  00007b2c  4be00000	jr	r31
 8471  00007b30  54000000	nop
 8472  00007b34          	.endproc _QueueFreeLink
 8473  00007b34          	.data
 8474  0001150b          	.align 2
 8475  0001150c          	LC4_LF6:
 8476  0001150c  51756575	.ascii "QueueAllocLink\000"
 8476  00011510  65416c6c	
 8476  00011514  6f634c69	
 8476  00011518  6e6b00  	
 8477  0001151b          	.align 2
 8478  0001151c          	LC5_LF6:
 8479  0001151c  4c696e6b	.ascii "Link not allocated!\000"
 8479  00011520  206e6f74	
 8479  00011524  20616c6c	
 8479  00011528  6f636174	
 8479  0001152c  65642100	
 8480  00011530          	.text
 8481  00007b34          	.align 2
 8482  00007b34          	.proc _QueueAllocLink
 8483  00007b34          	.global _QueueAllocLink
 8484  00007b34          	_QueueAllocLink:
 8485                      ;  Function 'QueueAllocLink'; 0 bytes of locals, 3 regs to save.
 8486  00007b34  afbefffc	sw	-4(r29),r30; push fp
 8487  00007b38  001df020	add	r30,r0,r29; fp = sp
 8488  00007b3c  afbffff8	sw	-8(r29),r31; push ret addr
 8489  00007b40  2fbd0018	subui	r29,r29,#24; alloc local storage
 8490  00007b44  afa20000	sw	0(r29),r2
 8491  00007b48  afa30004	sw	4(r29),r3
 8492  00007b4c  afa40008	sw	8(r29),r4
 8493  00007b50  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8494  00007b54  24421530	addui	r2,r2,(_freeLinks)&0xffff
 8495  00007b58  8c410008	lw	r1,8(r2)
 8496  00007b5c  60210000	seqi	r1,r1,#0
 8497  00007b60  14200054	bnez	r1,L92_LF6
 8498  00007b64  54000000	nop; not filled.
 8499  00007b68  8c430000	lw	r3,(r2)
 8500  00007b6c  8c610008	lw	r1,8(r3)
 8501  00007b70  8c210008	lw	r1,8(r1)
 8502  00007b74  6c210000	sgti	r1,r1,#0
 8503  00007b78  1020002c	beqz	r1,L97_LF6
 8504  00007b7c  54000000	nop; not filled.
 8505  00007b80  8c610004	lw	r1,4(r3)
 8506  00007b84  8c640000	lw	r4,(r3)
 8507  00007b88  ac240000	sw	(r1),r4
 8508  00007b8c  8c610000	lw	r1,(r3)
 8509  00007b90  8c640004	lw	r4,4(r3)
 8510  00007b94  ac240004	sw	4(r1),r4
 8511  00007b98  8c620008	lw	r2,8(r3)
 8512  00007b9c  8c410008	lw	r1,8(r2)
 8513  00007ba0  2021ffff	addi	r1,r1,#-1
 8514  00007ba4  ac410008	sw	8(r2),r1
 8515  00007ba8          	L97_LF6:
 8516  00007ba8  20040000	addi	r4,r0,#0
 8517  00007bac  ac640000	sw	(r3),r4
 8518  00007bb0  08000008	j	L98_LF6
 8519  00007bb4  54000000	nop; not filled.
 8520  00007bb8          	L92_LF6:
 8521  00007bb8  20030000	addi	r3,r0,#0
 8522  00007bbc          	L98_LF6:
 8523  00007bbc  64610000	snei	r1,r3,#0
 8524  00007bc0  14200038	bnez	r1,L100_LF6
 8525  00007bc4  54000000	nop; not filled.
 8526  00007bc8  23bdfff0	addi	r29,r29,#-16
 8527  00007bcc  3c040001	lhi	r4,((LC1_LF6)>>16)&0xffff
 8528  00007bd0  248414e4	addui	r4,r4,(LC1_LF6)&0xffff
 8529  00007bd4  afa40000	sw	(r29),r4
 8530  00007bd8  3c010001	lhi	r1,((LC4_LF6)>>16)&0xffff
 8531  00007bdc  2421150c	addui	r1,r1,(LC4_LF6)&0xffff
 8532  00007be0  afa10004	sw	4(r29),r1
 8533  00007be4  3c040001	lhi	r4,((LC5_LF6)>>16)&0xffff
 8534  00007be8  2484151c	addui	r4,r4,(LC5_LF6)&0xffff
 8535  00007bec  afa40008	sw	8(r29),r4
 8536  00007bf0  0c0025b4	jal	_printf
 8537  00007bf4  54000000	nop; not filled.
 8538  00007bf8  23bd0010	addi	r29,r29,#16
 8539  00007bfc          	L100_LF6:
 8540  00007bfc  00030820	add	r1,r0,r3
 8541  00007c00  8fa20000	lw	r2,0(r29)
 8542  00007c04  8fa30004	lw	r3,4(r29)
 8543  00007c08  8fa40008	lw	r4,8(r29)
 8544  00007c0c  8fdffff8	lw	r31,-8(r30)
 8545  00007c10  001ee820	add	r29,r0,r30
 8546  00007c14  8fdefffc	lw	r30,-4(r30)
 8547  00007c18  4be00000	jr	r31
 8548  00007c1c  54000000	nop
 8549  00007c20          	.endproc _QueueAllocLink
 8550  00007c20          	.data
 8551  00011530          	.align 2
 8552  00011530          	.global _freeLinks
 8553  00011530          	_freeLinks:
 8554  00011530          	.space 12
 8555  0001153c          	.align 2
 8556  0001153c          	_linkpool_LF6:
 8557  0001153c          	.space 6400
 8558                      ; Compiled by GCC
 8559  00012e3c          	.text
 8560  00007c20          	.align 2
 8561  00007c20          	.proc _isspace
 8562  00007c20          	.global _isspace
 8563  00007c20          	_isspace:
 8564                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 8565  00007c20  afbefffc	sw	-4(r29),r30; push fp
 8566  00007c24  001df020	add	r30,r0,r29; fp = sp
 8567  00007c28  afbffff8	sw	-8(r29),r31; push ret addr
 8568  00007c2c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8569  00007c30  afa20000	sw	0(r29),r2
 8570  00007c34  83c20003	lb	r2,3(r30)
 8571  00007c38  201f0000	addi	r31,r0,#0
 8572  00007c3c  304100ff	andi	r1,r2,#0x00ff
 8573  00007c40  60210020	seqi	r1,r1,#32
 8574  00007c44  14200018	bnez	r1,L6_LF7
 8575  00007c48  54000000	nop; not filled.
 8576  00007c4c  2041fff7	addi	r1,r2,#-9
 8577  00007c50  302100ff	andi	r1,r1,#0x00ff
 8578  00007c54  70210001	sleui	r1,r1,#1
 8579  00007c58  10200008	beqz	r1,L5_LF7
 8580  00007c5c  54000000	nop; not filled.
 8581  00007c60          	L6_LF7:
 8582  00007c60  201f0001	addi	r31,r0,#1
 8583  00007c64          	L5_LF7:
 8584  00007c64  001f0820	add	r1,r0,r31
 8585  00007c68  8fa20000	lw	r2,0(r29)
 8586  00007c6c  8fdffff8	lw	r31,-8(r30)
 8587  00007c70  001ee820	add	r29,r0,r30
 8588  00007c74  8fdefffc	lw	r30,-4(r30)
 8589  00007c78  4be00000	jr	r31
 8590  00007c7c  54000000	nop
 8591  00007c80          	.endproc _isspace
 8592  00007c80          	.align 2
 8593  00007c80          	.proc _isxdigit
 8594  00007c80          	.global _isxdigit
 8595  00007c80          	_isxdigit:
 8596                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 8597  00007c80  afbefffc	sw	-4(r29),r30; push fp
 8598  00007c84  001df020	add	r30,r0,r29; fp = sp
 8599  00007c88  afbffff8	sw	-8(r29),r31; push ret addr
 8600  00007c8c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8601  00007c90  afa20000	sw	0(r29),r2
 8602  00007c94  83df0003	lb	r31,3(r30)
 8603  00007c98  20020000	addi	r2,r0,#0
 8604  00007c9c  23e1ffd0	addi	r1,r31,#-48
 8605  00007ca0  302100ff	andi	r1,r1,#0x00ff
 8606  00007ca4  70210009	sleui	r1,r1,#9
 8607  00007ca8  14200028	bnez	r1,L12_LF7
 8608  00007cac  54000000	nop; not filled.
 8609  00007cb0  23e1ff9f	addi	r1,r31,#-97
 8610  00007cb4  302100ff	andi	r1,r1,#0x00ff
 8611  00007cb8  70210005	sleui	r1,r1,#5
 8612  00007cbc  14200014	bnez	r1,L12_LF7
 8613  00007cc0  54000000	nop; not filled.
 8614  00007cc4  33e100ff	andi	r1,r31,#0x00ff
 8615  00007cc8  64210041	snei	r1,r1,#65
 8616  00007ccc  14200008	bnez	r1,L11_LF7
 8617  00007cd0  54000000	nop; not filled.
 8618  00007cd4          	L12_LF7:
 8619  00007cd4  20020001	addi	r2,r0,#1
 8620  00007cd8          	L11_LF7:
 8621  00007cd8  00020820	add	r1,r0,r2
 8622  00007cdc  8fa20000	lw	r2,0(r29)
 8623  00007ce0  8fdffff8	lw	r31,-8(r30)
 8624  00007ce4  001ee820	add	r29,r0,r30
 8625  00007ce8  8fdefffc	lw	r30,-4(r30)
 8626  00007cec  4be00000	jr	r31
 8627  00007cf0  54000000	nop
 8628  00007cf4          	.endproc _isxdigit
 8629  00007cf4          	.align 2
 8630  00007cf4          	.proc _DisableIntrs
 8631  00007cf4          	.global _DisableIntrs
 8632  00007cf4          	_DisableIntrs:
 8633                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 8634  00007cf4  afbefffc	sw	-4(r29),r30; push fp
 8635  00007cf8  001df020	add	r30,r0,r29; fp = sp
 8636  00007cfc  afbffff8	sw	-8(r29),r31; push ret addr
 8637  00007d00  2fbd0010	subui	r29,r29,#16; alloc local storage
 8638  00007d04  afa20000	sw	0(r29),r2
 8639  00007d08  23bdfff8	addi	r29,r29,#-8
 8640  00007d0c  2002000f	addi	r2,r0,#15
 8641  00007d10  afa20000	sw	(r29),r2
 8642  00007d14  0fff9570	jal	_SetIntrs
 8643  00007d18  54000000	nop; not filled.
 8644  00007d1c  23bd0008	addi	r29,r29,#8
 8645  00007d20  8fa20000	lw	r2,0(r29)
 8646  00007d24  8fdffff8	lw	r31,-8(r30)
 8647  00007d28  001ee820	add	r29,r0,r30
 8648  00007d2c  8fdefffc	lw	r30,-4(r30)
 8649  00007d30  4be00000	jr	r31
 8650  00007d34  54000000	nop
 8651  00007d38          	.endproc _DisableIntrs
 8652  00007d38          	.align 2
 8653  00007d38          	.proc _EnableIntrs
 8654  00007d38          	.global _EnableIntrs
 8655  00007d38          	_EnableIntrs:
 8656                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 8657  00007d38  afbefffc	sw	-4(r29),r30; push fp
 8658  00007d3c  001df020	add	r30,r0,r29; fp = sp
 8659  00007d40  afbffff8	sw	-8(r29),r31; push ret addr
 8660  00007d44  2fbd0010	subui	r29,r29,#16; alloc local storage
 8661  00007d48  afa20000	sw	0(r29),r2
 8662  00007d4c  23bdfff8	addi	r29,r29,#-8
 8663  00007d50  20020000	addi	r2,r0,#0
 8664  00007d54  afa20000	sw	(r29),r2
 8665  00007d58  0fff952c	jal	_SetIntrs
 8666  00007d5c  54000000	nop; not filled.
 8667  00007d60  23bd0008	addi	r29,r29,#8
 8668  00007d64  8fa20000	lw	r2,0(r29)
 8669  00007d68  8fdffff8	lw	r31,-8(r30)
 8670  00007d6c  001ee820	add	r29,r0,r30
 8671  00007d70  8fdefffc	lw	r30,-4(r30)
 8672  00007d74  4be00000	jr	r31
 8673  00007d78  54000000	nop
 8674  00007d7c          	.endproc _EnableIntrs
 8675  00007d7c          	.align 2
 8676  00007d7c          	.proc _RestoreIntrs
 8677  00007d7c          	.global _RestoreIntrs
 8678  00007d7c          	_RestoreIntrs:
 8679                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 8680  00007d7c  afbefffc	sw	-4(r29),r30; push fp
 8681  00007d80  001df020	add	r30,r0,r29; fp = sp
 8682  00007d84  afbffff8	sw	-8(r29),r31; push ret addr
 8683  00007d88  2fbd0010	subui	r29,r29,#16; alloc local storage
 8684  00007d8c  afa20000	sw	0(r29),r2
 8685  00007d90  23bdfff8	addi	r29,r29,#-8
 8686  00007d94  8fc20000	lw	r2,(r30)
 8687  00007d98  afa20000	sw	(r29),r2
 8688  00007d9c  0fff94e8	jal	_SetIntrs
 8689  00007da0  54000000	nop; not filled.
 8690  00007da4  23bd0008	addi	r29,r29,#8
 8691  00007da8  8fa20000	lw	r2,0(r29)
 8692  00007dac  8fdffff8	lw	r31,-8(r30)
 8693  00007db0  001ee820	add	r29,r0,r30
 8694  00007db4  8fdefffc	lw	r30,-4(r30)
 8695  00007db8  4be00000	jr	r31
 8696  00007dbc  54000000	nop
 8697  00007dc0          	.endproc _RestoreIntrs
 8698  00007dc0          	.align 2
 8699  00007dc0          	.proc _QueueLinkInit
 8700  00007dc0          	.global _QueueLinkInit
 8701  00007dc0          	_QueueLinkInit:
 8702                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 8703  00007dc0  afbefffc	sw	-4(r29),r30; push fp
 8704  00007dc4  001df020	add	r30,r0,r29; fp = sp
 8705  00007dc8  afbffff8	sw	-8(r29),r31; push ret addr
 8706  00007dcc  2fbd0010	subui	r29,r29,#16; alloc local storage
 8707  00007dd0  afa20000	sw	0(r29),r2
 8708  00007dd4  8fc10000	lw	r1,(r30)
 8709  00007dd8  8fc20004	lw	r2,4(r30)
 8710  00007ddc  201f0000	addi	r31,r0,#0
 8711  00007de0  ac3f0000	sw	(r1),r31
 8712  00007de4  ac22000c	sw	12(r1),r2
 8713  00007de8  8fa20000	lw	r2,0(r29)
 8714  00007dec  8fdffff8	lw	r31,-8(r30)
 8715  00007df0  001ee820	add	r29,r0,r30
 8716  00007df4  8fdefffc	lw	r30,-4(r30)
 8717  00007df8  4be00000	jr	r31
 8718  00007dfc  54000000	nop
 8719  00007e00          	.endproc _QueueLinkInit
 8720  00007e00          	.align 2
 8721  00007e00          	.proc _QueueNext
 8722  00007e00          	.global _QueueNext
 8723  00007e00          	_QueueNext:
 8724                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 8725  00007e00  afbefffc	sw	-4(r29),r30; push fp
 8726  00007e04  001df020	add	r30,r0,r29; fp = sp
 8727  00007e08  afbffff8	sw	-8(r29),r31; push ret addr
 8728  00007e0c  2fbd0008	subui	r29,r29,#8; alloc local storage
 8729  00007e10  8fc10000	lw	r1,(r30)
 8730  00007e14  8c210000	lw	r1,(r1)
 8731  00007e18  8fdffff8	lw	r31,-8(r30)
 8732  00007e1c  001ee820	add	r29,r0,r30
 8733  00007e20  8fdefffc	lw	r30,-4(r30)
 8734  00007e24  4be00000	jr	r31
 8735  00007e28  54000000	nop
 8736  00007e2c          	.endproc _QueueNext
 8737  00007e2c          	.align 2
 8738  00007e2c          	.proc _QueuePrev
 8739  00007e2c          	.global _QueuePrev
 8740  00007e2c          	_QueuePrev:
 8741                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 8742  00007e2c  afbefffc	sw	-4(r29),r30; push fp
 8743  00007e30  001df020	add	r30,r0,r29; fp = sp
 8744  00007e34  afbffff8	sw	-8(r29),r31; push ret addr
 8745  00007e38  2fbd0008	subui	r29,r29,#8; alloc local storage
 8746  00007e3c  8fc10000	lw	r1,(r30)
 8747  00007e40  8c210004	lw	r1,4(r1)
 8748  00007e44  8fdffff8	lw	r31,-8(r30)
 8749  00007e48  001ee820	add	r29,r0,r30
 8750  00007e4c  8fdefffc	lw	r30,-4(r30)
 8751  00007e50  4be00000	jr	r31
 8752  00007e54  54000000	nop
 8753  00007e58          	.endproc _QueuePrev
 8754  00007e58          	.align 2
 8755  00007e58          	.proc _QueueFirst
 8756  00007e58          	.global _QueueFirst
 8757  00007e58          	_QueueFirst:
 8758                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 8759  00007e58  afbefffc	sw	-4(r29),r30; push fp
 8760  00007e5c  001df020	add	r30,r0,r29; fp = sp
 8761  00007e60  afbffff8	sw	-8(r29),r31; push ret addr
 8762  00007e64  2fbd0008	subui	r29,r29,#8; alloc local storage
 8763  00007e68  8fc10000	lw	r1,(r30)
 8764  00007e6c  8c210000	lw	r1,(r1)
 8765  00007e70  8fdffff8	lw	r31,-8(r30)
 8766  00007e74  001ee820	add	r29,r0,r30
 8767  00007e78  8fdefffc	lw	r30,-4(r30)
 8768  00007e7c  4be00000	jr	r31
 8769  00007e80  54000000	nop
 8770  00007e84          	.endproc _QueueFirst
 8771  00007e84          	.align 2
 8772  00007e84          	.proc _QueueLast
 8773  00007e84          	.global _QueueLast
 8774  00007e84          	_QueueLast:
 8775                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 8776  00007e84  afbefffc	sw	-4(r29),r30; push fp
 8777  00007e88  001df020	add	r30,r0,r29; fp = sp
 8778  00007e8c  afbffff8	sw	-8(r29),r31; push ret addr
 8779  00007e90  2fbd0008	subui	r29,r29,#8; alloc local storage
 8780  00007e94  8fc10000	lw	r1,(r30)
 8781  00007e98  8c210004	lw	r1,4(r1)
 8782  00007e9c  8fdffff8	lw	r31,-8(r30)
 8783  00007ea0  001ee820	add	r29,r0,r30
 8784  00007ea4  8fdefffc	lw	r30,-4(r30)
 8785  00007ea8  4be00000	jr	r31
 8786  00007eac  54000000	nop
 8787  00007eb0          	.endproc _QueueLast
 8788  00007eb0          	.align 2
 8789  00007eb0          	.proc _QueueInsertAfter
 8790  00007eb0          	.global _QueueInsertAfter
 8791  00007eb0          	_QueueInsertAfter:
 8792                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 8793  00007eb0  afbefffc	sw	-4(r29),r30; push fp
 8794  00007eb4  001df020	add	r30,r0,r29; fp = sp
 8795  00007eb8  afbffff8	sw	-8(r29),r31; push ret addr
 8796  00007ebc  2fbd0010	subui	r29,r29,#16; alloc local storage
 8797  00007ec0  afa20000	sw	0(r29),r2
 8798  00007ec4  afa30004	sw	4(r29),r3
 8799  00007ec8  8fc30000	lw	r3,(r30)
 8800  00007ecc  8fc20004	lw	r2,4(r30)
 8801  00007ed0  8fc10008	lw	r1,8(r30)
 8802  00007ed4  ac230008	sw	8(r1),r3
 8803  00007ed8  ac220004	sw	4(r1),r2
 8804  00007edc  8c5f0000	lw	r31,(r2)
 8805  00007ee0  ac3f0000	sw	(r1),r31
 8806  00007ee4  ac410000	sw	(r2),r1
 8807  00007ee8  8c220000	lw	r2,(r1)
 8808  00007eec  ac410004	sw	4(r2),r1
 8809  00007ef0  8c610008	lw	r1,8(r3)
 8810  00007ef4  20210001	addi	r1,r1,#1
 8811  00007ef8  ac610008	sw	8(r3),r1
 8812  00007efc  8fa20000	lw	r2,0(r29)
 8813  00007f00  8fa30004	lw	r3,4(r29)
 8814  00007f04  8fdffff8	lw	r31,-8(r30)
 8815  00007f08  001ee820	add	r29,r0,r30
 8816  00007f0c  8fdefffc	lw	r30,-4(r30)
 8817  00007f10  4be00000	jr	r31
 8818  00007f14  54000000	nop
 8819  00007f18          	.endproc _QueueInsertAfter
 8820  00007f18          	.align 2
 8821  00007f18          	.proc _QueueInsertFirst
 8822  00007f18          	.global _QueueInsertFirst
 8823  00007f18          	_QueueInsertFirst:
 8824                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 8825  00007f18  afbefffc	sw	-4(r29),r30; push fp
 8826  00007f1c  001df020	add	r30,r0,r29; fp = sp
 8827  00007f20  afbffff8	sw	-8(r29),r31; push ret addr
 8828  00007f24  2fbd0010	subui	r29,r29,#16; alloc local storage
 8829  00007f28  afa20000	sw	0(r29),r2
 8830  00007f2c  afa30004	sw	4(r29),r3
 8831  00007f30  8fc30000	lw	r3,(r30)
 8832  00007f34  8fc10004	lw	r1,4(r30)
 8833  00007f38  ac230008	sw	8(r1),r3
 8834  00007f3c  ac230004	sw	4(r1),r3
 8835  00007f40  8c7f0000	lw	r31,(r3)
 8836  00007f44  ac3f0000	sw	(r1),r31
 8837  00007f48  ac610000	sw	(r3),r1
 8838  00007f4c  8c220000	lw	r2,(r1)
 8839  00007f50  ac410004	sw	4(r2),r1
 8840  00007f54  8c610008	lw	r1,8(r3)
 8841  00007f58  20210001	addi	r1,r1,#1
 8842  00007f5c  ac610008	sw	8(r3),r1
 8843  00007f60  8fa20000	lw	r2,0(r29)
 8844  00007f64  8fa30004	lw	r3,4(r29)
 8845  00007f68  8fdffff8	lw	r31,-8(r30)
 8846  00007f6c  001ee820	add	r29,r0,r30
 8847  00007f70  8fdefffc	lw	r30,-4(r30)
 8848  00007f74  4be00000	jr	r31
 8849  00007f78  54000000	nop
 8850  00007f7c          	.endproc _QueueInsertFirst
 8851  00007f7c          	.align 2
 8852  00007f7c          	.proc _QueueInsertLast
 8853  00007f7c          	.global _QueueInsertLast
 8854  00007f7c          	_QueueInsertLast:
 8855                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 8856  00007f7c  afbefffc	sw	-4(r29),r30; push fp
 8857  00007f80  001df020	add	r30,r0,r29; fp = sp
 8858  00007f84  afbffff8	sw	-8(r29),r31; push ret addr
 8859  00007f88  2fbd0010	subui	r29,r29,#16; alloc local storage
 8860  00007f8c  afa20000	sw	0(r29),r2
 8861  00007f90  afa30004	sw	4(r29),r3
 8862  00007f94  8fc30000	lw	r3,(r30)
 8863  00007f98  8fc10004	lw	r1,4(r30)
 8864  00007f9c  8c620004	lw	r2,4(r3)
 8865  00007fa0  ac230008	sw	8(r1),r3
 8866  00007fa4  ac220004	sw	4(r1),r2
 8867  00007fa8  8c5f0000	lw	r31,(r2)
 8868  00007fac  ac3f0000	sw	(r1),r31
 8869  00007fb0  ac410000	sw	(r2),r1
 8870  00007fb4  8c220000	lw	r2,(r1)
 8871  00007fb8  ac410004	sw	4(r2),r1
 8872  00007fbc  8c610008	lw	r1,8(r3)
 8873  00007fc0  20210001	addi	r1,r1,#1
 8874  00007fc4  ac610008	sw	8(r3),r1
 8875  00007fc8  8fa20000	lw	r2,0(r29)
 8876  00007fcc  8fa30004	lw	r3,4(r29)
 8877  00007fd0  8fdffff8	lw	r31,-8(r30)
 8878  00007fd4  001ee820	add	r29,r0,r30
 8879  00007fd8  8fdefffc	lw	r30,-4(r30)
 8880  00007fdc  4be00000	jr	r31
 8881  00007fe0  54000000	nop
 8882  00007fe4          	.endproc _QueueInsertLast
 8883  00007fe4          	.align 2
 8884  00007fe4          	.proc _QueueRemove
 8885  00007fe4          	.global _QueueRemove
 8886  00007fe4          	_QueueRemove:
 8887                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 8888  00007fe4  afbefffc	sw	-4(r29),r30; push fp
 8889  00007fe8  001df020	add	r30,r0,r29; fp = sp
 8890  00007fec  afbffff8	sw	-8(r29),r31; push ret addr
 8891  00007ff0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8892  00007ff4  afa20000	sw	0(r29),r2
 8893  00007ff8  afa30004	sw	4(r29),r3
 8894  00007ffc  8fdf0000	lw	r31,(r30)
 8895  00008000  8fe10008	lw	r1,8(r31)
 8896  00008004  8c210008	lw	r1,8(r1)
 8897  00008008  6c210000	sgti	r1,r1,#0
 8898  0000800c  1020002c	beqz	r1,L44_LF7
 8899  00008010  54000000	nop; not filled.
 8900  00008014  8fe10004	lw	r1,4(r31)
 8901  00008018  8fe30000	lw	r3,(r31)
 8902  0000801c  ac230000	sw	(r1),r3
 8903  00008020  8fe10000	lw	r1,(r31)
 8904  00008024  8fe30004	lw	r3,4(r31)
 8905  00008028  ac230004	sw	4(r1),r3
 8906  0000802c  8fe20008	lw	r2,8(r31)
 8907  00008030  8c410008	lw	r1,8(r2)
 8908  00008034  2021ffff	addi	r1,r1,#-1
 8909  00008038  ac410008	sw	8(r2),r1
 8910  0000803c          	L44_LF7:
 8911  0000803c  20030000	addi	r3,r0,#0
 8912  00008040  afe30000	sw	(r31),r3
 8913  00008044  8fa20000	lw	r2,0(r29)
 8914  00008048  8fa30004	lw	r3,4(r29)
 8915  0000804c  8fdffff8	lw	r31,-8(r30)
 8916  00008050  001ee820	add	r29,r0,r30
 8917  00008054  8fdefffc	lw	r30,-4(r30)
 8918  00008058  4be00000	jr	r31
 8919  0000805c  54000000	nop
 8920  00008060          	.endproc _QueueRemove
 8921  00008060          	.align 2
 8922  00008060          	.proc _QueueLength
 8923  00008060          	.global _QueueLength
 8924  00008060          	_QueueLength:
 8925                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 8926  00008060  afbefffc	sw	-4(r29),r30; push fp
 8927  00008064  001df020	add	r30,r0,r29; fp = sp
 8928  00008068  afbffff8	sw	-8(r29),r31; push ret addr
 8929  0000806c  2fbd0008	subui	r29,r29,#8; alloc local storage
 8930  00008070  8fc10000	lw	r1,(r30)
 8931  00008074  8c210008	lw	r1,8(r1)
 8932  00008078  8fdffff8	lw	r31,-8(r30)
 8933  0000807c  001ee820	add	r29,r0,r30
 8934  00008080  8fdefffc	lw	r30,-4(r30)
 8935  00008084  4be00000	jr	r31
 8936  00008088  54000000	nop
 8937  0000808c          	.endproc _QueueLength
 8938  0000808c          	.align 2
 8939  0000808c          	.proc _QueueEmpty
 8940  0000808c          	.global _QueueEmpty
 8941  0000808c          	_QueueEmpty:
 8942                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 8943  0000808c  afbefffc	sw	-4(r29),r30; push fp
 8944  00008090  001df020	add	r30,r0,r29; fp = sp
 8945  00008094  afbffff8	sw	-8(r29),r31; push ret addr
 8946  00008098  2fbd0008	subui	r29,r29,#8; alloc local storage
 8947  0000809c  8fc10000	lw	r1,(r30)
 8948  000080a0  8c210008	lw	r1,8(r1)
 8949  000080a4  60210000	seqi	r1,r1,#0
 8950  000080a8  8fdffff8	lw	r31,-8(r30)
 8951  000080ac  001ee820	add	r29,r0,r30
 8952  000080b0  8fdefffc	lw	r30,-4(r30)
 8953  000080b4  4be00000	jr	r31
 8954  000080b8  54000000	nop
 8955  000080bc          	.endproc _QueueEmpty
 8956  000080bc          	.align 2
 8957  000080bc          	.proc _SemInit
 8958  000080bc          	.global _SemInit
 8959  000080bc          	_SemInit:
 8960                      ;  Function 'SemInit'; 0 bytes of locals, 2 regs to save.
 8961  000080bc  afbefffc	sw	-4(r29),r30; push fp
 8962  000080c0  001df020	add	r30,r0,r29; fp = sp
 8963  000080c4  afbffff8	sw	-8(r29),r31; push ret addr
 8964  000080c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 8965  000080cc  afa20000	sw	0(r29),r2
 8966  000080d0  afa30004	sw	4(r29),r3
 8967  000080d4  8fc20000	lw	r2,(r30)
 8968  000080d8  8fc30004	lw	r3,4(r30)
 8969  000080dc  23bdfff8	addi	r29,r29,#-8
 8970  000080e0  afa20000	sw	(r29),r2
 8971  000080e4  0ffff95c	jal	_QueueInit
 8972  000080e8  54000000	nop; not filled.
 8973  000080ec  ac43000c	sw	12(r2),r3
 8974  000080f0  23bd0008	addi	r29,r29,#8
 8975  000080f4  8fa20000	lw	r2,0(r29)
 8976  000080f8  8fa30004	lw	r3,4(r29)
 8977  000080fc  8fdffff8	lw	r31,-8(r30)
 8978  00008100  001ee820	add	r29,r0,r30
 8979  00008104  8fdefffc	lw	r30,-4(r30)
 8980  00008108  4be00000	jr	r31
 8981  0000810c  54000000	nop
 8982  00008110          	.endproc _SemInit
 8983  00008110          	.data
 8984  00012e3c          	.align 2
 8985  00012e3c          	LC0_LF7:
 8986  00012e3c  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 8986  00012e40  696e7465	
 8986  00012e44  72727570	
 8986  00012e48  74207661	
 8986  00012e4c  6c756520	
 8986  00012e50  77617320	
 8986  00012e54  30782578	
 8986  00012e58  2e0a00  	
 8987  00012e5b          	.align 2
 8988  00012e5c          	LC1_LF7:
 8989  00012e5c  50726f63	.ascii "Proc 0x%x waiting on sem 0x%x, count=%d.\n\000"
 8989  00012e60  20307825	
 8989  00012e64  78207761	
 8989  00012e68  6974696e	
 8989  00012e6c  67206f6e	
 8989  00012e70  2073656d	
 8989  00012e74  20307825	
 8989  00012e78  782c2063	
 8989  00012e7c  6f756e74	
 8989  00012e80  3d25642e	
 8989  00012e84  0a00    	
 8990  00012e86          	.align 2
 8991  00012e88          	LC2_LF7:
 8992  00012e88  53757370	.ascii "Suspending current proc (0x%x).\n\000"
 8992  00012e8c  656e6469	
 8992  00012e90  6e672063	
 8992  00012e94  75727265	
 8992  00012e98  6e742070	
 8992  00012e9c  726f6320	
 8992  00012ea0  28307825	
 8992  00012ea4  78292e0a	
 8992  00012ea8  00      	
 8993  00012ea9          	.text
 8994  00008110          	.align 2
 8995  00008110          	.proc _SemWait
 8996  00008110          	.global _SemWait
 8997  00008110          	_SemWait:
 8998                      ;  Function 'SemWait'; 0 bytes of locals, 6 regs to save.
 8999  00008110  afbefffc	sw	-4(r29),r30; push fp
 9000  00008114  001df020	add	r30,r0,r29; fp = sp
 9001  00008118  afbffff8	sw	-8(r29),r31; push ret addr
 9002  0000811c  2fbd0020	subui	r29,r29,#32; alloc local storage
 9003  00008120  afa20000	sw	0(r29),r2
 9004  00008124  afa30004	sw	4(r29),r3
 9005  00008128  afa40008	sw	8(r29),r4
 9006  0000812c  afa5000c	sw	12(r29),r5
 9007  00008130  afa60010	sw	16(r29),r6
 9008  00008134  afa70014	sw	20(r29),r7
 9009  00008138  8fc40000	lw	r4,(r30)
 9010  0000813c  23bdfff8	addi	r29,r29,#-8
 9011  00008140  2007000f	addi	r7,r0,#15
 9012  00008144  afa70000	sw	(r29),r7
 9013  00008148  0fff913c	jal	_SetIntrs
 9014  0000814c  54000000	nop; not filled.
 9015  00008150  00013020	add	r6,r0,r1
 9016  00008154  23bd0008	addi	r29,r29,#8
 9017  00008158  23bdfff8	addi	r29,r29,#-8
 9018  0000815c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9019  00008160  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 9020  00008164  afa20000	sw	(r29),r2
 9021  00008168  20070049	addi	r7,r0,#73
 9022  0000816c  afa70004	sw	4(r29),r7
 9023  00008170  0fffbca4	jal	_dindex
 9024  00008174  54000000	nop; not filled.
 9025  00008178  23bd0008	addi	r29,r29,#8
 9026  0000817c  64210000	snei	r1,r1,#0
 9027  00008180  1420002c	bnez	r1,L56_LF7
 9028  00008184  54000000	nop; not filled.
 9029  00008188  23bdfff8	addi	r29,r29,#-8
 9030  0000818c  afa20000	sw	(r29),r2
 9031  00008190  2007002b	addi	r7,r0,#43
 9032  00008194  afa70004	sw	4(r29),r7
 9033  00008198  0fffbc7c	jal	_dindex
 9034  0000819c  54000000	nop; not filled.
 9035  000081a0  23bd0008	addi	r29,r29,#8
 9036  000081a4  64210000	snei	r1,r1,#0
 9037  000081a8  10200024	beqz	r1,L55_LF7
 9038  000081ac  54000000	nop; not filled.
 9039  000081b0          	L56_LF7:
 9040  000081b0  23bdfff8	addi	r29,r29,#-8
 9041  000081b4  3c070001	lhi	r7,((LC0_LF7)>>16)&0xffff
 9042  000081b8  24e72e3c	addui	r7,r7,(LC0_LF7)&0xffff
 9043  000081bc  afa70000	sw	(r29),r7
 9044  000081c0  afa60004	sw	4(r29),r6
 9045  000081c4  0c001fe0	jal	_printf
 9046  000081c8  54000000	nop; not filled.
 9047  000081cc  23bd0008	addi	r29,r29,#8
 9048  000081d0          	L55_LF7:
 9049  000081d0  23bdfff8	addi	r29,r29,#-8
 9050  000081d4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9051  000081d8  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 9052  000081dc  afa20000	sw	(r29),r2
 9053  000081e0  20070073	addi	r7,r0,#115
 9054  000081e4  afa70004	sw	4(r29),r7
 9055  000081e8  0fffbc2c	jal	_dindex
 9056  000081ec  54000000	nop; not filled.
 9057  000081f0  23bd0008	addi	r29,r29,#8
 9058  000081f4  64210000	snei	r1,r1,#0
 9059  000081f8  1420002c	bnez	r1,L58_LF7
 9060  000081fc  54000000	nop; not filled.
 9061  00008200  23bdfff8	addi	r29,r29,#-8
 9062  00008204  afa20000	sw	(r29),r2
 9063  00008208  2007002b	addi	r7,r0,#43
 9064  0000820c  afa70004	sw	4(r29),r7
 9065  00008210  0fffbc04	jal	_dindex
 9066  00008214  54000000	nop; not filled.
 9067  00008218  23bd0008	addi	r29,r29,#8
 9068  0000821c  64210000	snei	r1,r1,#0
 9069  00008220  1020003c	beqz	r1,L57_LF7
 9070  00008224  54000000	nop; not filled.
 9071  00008228          	L58_LF7:
 9072  00008228  23bdfff0	addi	r29,r29,#-16
 9073  0000822c  3c070001	lhi	r7,((LC1_LF7)>>16)&0xffff
 9074  00008230  24e72e5c	addui	r7,r7,(LC1_LF7)&0xffff
 9075  00008234  afa70000	sw	(r29),r7
 9076  00008238  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 9077  0000823c  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
 9078  00008240  8c210000	lw	r1,(r1)
 9079  00008244  afa10004	sw	4(r29),r1
 9080  00008248  afa40008	sw	8(r29),r4
 9081  0000824c  8c87000c	lw	r7,12(r4)
 9082  00008250  afa7000c	sw	12(r29),r7
 9083  00008254  0c001f50	jal	_printf
 9084  00008258  54000000	nop; not filled.
 9085  0000825c  23bd0010	addi	r29,r29,#16
 9086  00008260          	L57_LF7:
 9087  00008260  8c81000c	lw	r1,12(r4)
 9088  00008264  2021ffff	addi	r1,r1,#-1
 9089  00008268  ac81000c	sw	12(r4),r1
 9090  0000826c  68210000	slti	r1,r1,#0
 9091  00008270  102000d8	beqz	r1,L59_LF7
 9092  00008274  54000000	nop; not filled.
 9093  00008278  0ffff8b8	jal	_QueueAllocLink
 9094  0000827c  54000000	nop; not filled.
 9095  00008280  00011020	add	r2,r0,r1
 9096  00008284  3c050000	lhi	r5,((_currentPCB)>>16)&0xffff
 9097  00008288  24a5fe10	addui	r5,r5,(_currentPCB)&0xffff
 9098  0000828c  8ca10000	lw	r1,(r5)
 9099  00008290  20070000	addi	r7,r0,#0
 9100  00008294  ac470000	sw	(r2),r7
 9101  00008298  ac41000c	sw	12(r2),r1
 9102  0000829c  23bdfff8	addi	r29,r29,#-8
 9103  000082a0  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 9104  000082a4  2463fd46	addui	r3,r3,(_debugstr)&0xffff
 9105  000082a8  afa30000	sw	(r29),r3
 9106  000082ac  20070073	addi	r7,r0,#115
 9107  000082b0  afa70004	sw	4(r29),r7
 9108  000082b4  0fffbb60	jal	_dindex
 9109  000082b8  54000000	nop; not filled.
 9110  000082bc  23bd0008	addi	r29,r29,#8
 9111  000082c0  64210000	snei	r1,r1,#0
 9112  000082c4  1420002c	bnez	r1,L62_LF7
 9113  000082c8  54000000	nop; not filled.
 9114  000082cc  23bdfff8	addi	r29,r29,#-8
 9115  000082d0  afa30000	sw	(r29),r3
 9116  000082d4  2007002b	addi	r7,r0,#43
 9117  000082d8  afa70004	sw	4(r29),r7
 9118  000082dc  0fffbb38	jal	_dindex
 9119  000082e0  54000000	nop; not filled.
 9120  000082e4  23bd0008	addi	r29,r29,#8
 9121  000082e8  64210000	snei	r1,r1,#0
 9122  000082ec  10200028	beqz	r1,L61_LF7
 9123  000082f0  54000000	nop; not filled.
 9124  000082f4          	L62_LF7:
 9125  000082f4  23bdfff8	addi	r29,r29,#-8
 9126  000082f8  3c070001	lhi	r7,((LC2_LF7)>>16)&0xffff
 9127  000082fc  24e72e88	addui	r7,r7,(LC2_LF7)&0xffff
 9128  00008300  afa70000	sw	(r29),r7
 9129  00008304  8ca10000	lw	r1,(r5)
 9130  00008308  afa10004	sw	4(r29),r1
 9131  0000830c  0c001e98	jal	_printf
 9132  00008310  54000000	nop; not filled.
 9133  00008314  23bd0008	addi	r29,r29,#8
 9134  00008318          	L61_LF7:
 9135  00008318  8c810004	lw	r1,4(r4)
 9136  0000831c  ac440008	sw	8(r2),r4
 9137  00008320  ac410004	sw	4(r2),r1
 9138  00008324  8c270000	lw	r7,(r1)
 9139  00008328  ac470000	sw	(r2),r7
 9140  0000832c  ac220000	sw	(r1),r2
 9141  00008330  8c410000	lw	r1,(r2)
 9142  00008334  ac220004	sw	4(r1),r2
 9143  00008338  8c810008	lw	r1,8(r4)
 9144  0000833c  20210001	addi	r1,r1,#1
 9145  00008340  ac810008	sw	8(r4),r1
 9146  00008344  0fff8f8c	jal	_ProcessSleep
 9147  00008348  54000000	nop; not filled.
 9148  0000834c          	L59_LF7:
 9149  0000834c  23bdfff8	addi	r29,r29,#-8
 9150  00008350  afa60000	sw	(r29),r6
 9151  00008354  0fff8f30	jal	_SetIntrs
 9152  00008358  54000000	nop; not filled.
 9153  0000835c  23bd0008	addi	r29,r29,#8
 9154  00008360  8fa20000	lw	r2,0(r29)
 9155  00008364  8fa30004	lw	r3,4(r29)
 9156  00008368  8fa40008	lw	r4,8(r29)
 9157  0000836c  8fa5000c	lw	r5,12(r29)
 9158  00008370  8fa60010	lw	r6,16(r29)
 9159  00008374  8fa70014	lw	r7,20(r29)
 9160  00008378  8fdffff8	lw	r31,-8(r30)
 9161  0000837c  001ee820	add	r29,r0,r30
 9162  00008380  8fdefffc	lw	r30,-4(r30)
 9163  00008384  4be00000	jr	r31
 9164  00008388  54000000	nop
 9165  0000838c          	.endproc _SemWait
 9166  0000838c          	.data
 9167  00012ea9          	.align 2
 9168  00012eac          	LC3_LF7:
 9169  00012eac  5369676e	.ascii "Signalling on sem 0x%x, count=%d.\n\000"
 9169  00012eb0  616c6c69	
 9169  00012eb4  6e67206f	
 9169  00012eb8  6e207365	
 9169  00012ebc  6d203078	
 9169  00012ec0  25782c20	
 9169  00012ec4  636f756e	
 9169  00012ec8  743d2564	
 9169  00012ecc  2e0a00  	
 9170  00012ecf          	.align 2
 9171  00012ed0          	LC4_LF7:
 9172  00012ed0  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 9172  00012ed4  6e672075	
 9172  00012ed8  70205043	
 9172  00012edc  42203078	
 9172  00012ee0  25782e0a	
 9172  00012ee4  00      	
 9173  00012ee5          	.text
 9174  0000838c          	.align 2
 9175  0000838c          	.proc _SemSignal
 9176  0000838c          	.global _SemSignal
 9177  0000838c          	_SemSignal:
 9178                      ;  Function 'SemSignal'; 0 bytes of locals, 4 regs to save.
 9179  0000838c  afbefffc	sw	-4(r29),r30; push fp
 9180  00008390  001df020	add	r30,r0,r29; fp = sp
 9181  00008394  afbffff8	sw	-8(r29),r31; push ret addr
 9182  00008398  2fbd0018	subui	r29,r29,#24; alloc local storage
 9183  0000839c  afa20000	sw	0(r29),r2
 9184  000083a0  afa30004	sw	4(r29),r3
 9185  000083a4  afa40008	sw	8(r29),r4
 9186  000083a8  afa5000c	sw	12(r29),r5
 9187  000083ac  8fc20000	lw	r2,(r30)
 9188  000083b0  23bdfff8	addi	r29,r29,#-8
 9189  000083b4  2005000f	addi	r5,r0,#15
 9190  000083b8  afa50000	sw	(r29),r5
 9191  000083bc  0fff8ec8	jal	_SetIntrs
 9192  000083c0  54000000	nop; not filled.
 9193  000083c4  00012020	add	r4,r0,r1
 9194  000083c8  23bd0008	addi	r29,r29,#8
 9195  000083cc  23bdfff8	addi	r29,r29,#-8
 9196  000083d0  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 9197  000083d4  2463fd46	addui	r3,r3,(_debugstr)&0xffff
 9198  000083d8  afa30000	sw	(r29),r3
 9199  000083dc  20050073	addi	r5,r0,#115
 9200  000083e0  afa50004	sw	4(r29),r5
 9201  000083e4  0fffba30	jal	_dindex
 9202  000083e8  54000000	nop; not filled.
 9203  000083ec  23bd0008	addi	r29,r29,#8
 9204  000083f0  64210000	snei	r1,r1,#0
 9205  000083f4  1420002c	bnez	r1,L70_LF7
 9206  000083f8  54000000	nop; not filled.
 9207  000083fc  23bdfff8	addi	r29,r29,#-8
 9208  00008400  afa30000	sw	(r29),r3
 9209  00008404  2005002b	addi	r5,r0,#43
 9210  00008408  afa50004	sw	4(r29),r5
 9211  0000840c  0fffba08	jal	_dindex
 9212  00008410  54000000	nop; not filled.
 9213  00008414  23bd0008	addi	r29,r29,#8
 9214  00008418  64210000	snei	r1,r1,#0
 9215  0000841c  1020002c	beqz	r1,L69_LF7
 9216  00008420  54000000	nop; not filled.
 9217  00008424          	L70_LF7:
 9218  00008424  23bdfff0	addi	r29,r29,#-16
 9219  00008428  3c050001	lhi	r5,((LC3_LF7)>>16)&0xffff
 9220  0000842c  24a52eac	addui	r5,r5,(LC3_LF7)&0xffff
 9221  00008430  afa50000	sw	(r29),r5
 9222  00008434  afa20004	sw	4(r29),r2
 9223  00008438  8c45000c	lw	r5,12(r2)
 9224  0000843c  afa50008	sw	8(r29),r5
 9225  00008440  0c001d64	jal	_printf
 9226  00008444  54000000	nop; not filled.
 9227  00008448  23bd0010	addi	r29,r29,#16
 9228  0000844c          	L69_LF7:
 9229  0000844c  8c41000c	lw	r1,12(r2)
 9230  00008450  20210001	addi	r1,r1,#1
 9231  00008454  ac41000c	sw	12(r2),r1
 9232  00008458  70210000	slei	r1,r1,#0
 9233  0000845c  102000ec	beqz	r1,L71_LF7
 9234  00008460  54000000	nop; not filled.
 9235  00008464  8c430000	lw	r3,(r2)
 9236  00008468  8c610008	lw	r1,8(r3)
 9237  0000846c  8c210008	lw	r1,8(r1)
 9238  00008470  6c210000	sgti	r1,r1,#0
 9239  00008474  1020002c	beqz	r1,L74_LF7
 9240  00008478  54000000	nop; not filled.
 9241  0000847c  8c610004	lw	r1,4(r3)
 9242  00008480  8c650000	lw	r5,(r3)
 9243  00008484  ac250000	sw	(r1),r5
 9244  00008488  8c610000	lw	r1,(r3)
 9245  0000848c  8c650004	lw	r5,4(r3)
 9246  00008490  ac250004	sw	4(r1),r5
 9247  00008494  8c620008	lw	r2,8(r3)
 9248  00008498  8c410008	lw	r1,8(r2)
 9249  0000849c  2021ffff	addi	r1,r1,#-1
 9250  000084a0  ac410008	sw	8(r2),r1
 9251  000084a4          	L74_LF7:
 9252  000084a4  20050000	addi	r5,r0,#0
 9253  000084a8  ac650000	sw	(r3),r5
 9254  000084ac  23bdfff8	addi	r29,r29,#-8
 9255  000084b0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9256  000084b4  2442fd46	addui	r2,r2,(_debugstr)&0xffff
 9257  000084b8  afa20000	sw	(r29),r2
 9258  000084bc  20050073	addi	r5,r0,#115
 9259  000084c0  afa50004	sw	4(r29),r5
 9260  000084c4  0fffb950	jal	_dindex
 9261  000084c8  54000000	nop; not filled.
 9262  000084cc  23bd0008	addi	r29,r29,#8
 9263  000084d0  64210000	snei	r1,r1,#0
 9264  000084d4  1420002c	bnez	r1,L76_LF7
 9265  000084d8  54000000	nop; not filled.
 9266  000084dc  23bdfff8	addi	r29,r29,#-8
 9267  000084e0  afa20000	sw	(r29),r2
 9268  000084e4  2005002b	addi	r5,r0,#43
 9269  000084e8  afa50004	sw	4(r29),r5
 9270  000084ec  0fffb928	jal	_dindex
 9271  000084f0  54000000	nop; not filled.
 9272  000084f4  23bd0008	addi	r29,r29,#8
 9273  000084f8  64210000	snei	r1,r1,#0
 9274  000084fc  10200028	beqz	r1,L75_LF7
 9275  00008500  54000000	nop; not filled.
 9276  00008504          	L76_LF7:
 9277  00008504  23bdfff8	addi	r29,r29,#-8
 9278  00008508  3c050001	lhi	r5,((LC4_LF7)>>16)&0xffff
 9279  0000850c  24a52ed0	addui	r5,r5,(LC4_LF7)&0xffff
 9280  00008510  afa50000	sw	(r29),r5
 9281  00008514  8c61000c	lw	r1,12(r3)
 9282  00008518  afa10004	sw	4(r29),r1
 9283  0000851c  0c001c88	jal	_printf
 9284  00008520  54000000	nop; not filled.
 9285  00008524  23bd0008	addi	r29,r29,#8
 9286  00008528          	L75_LF7:
 9287  00008528  23bdfff8	addi	r29,r29,#-8
 9288  0000852c  8c65000c	lw	r5,12(r3)
 9289  00008530  afa50000	sw	(r29),r5
 9290  00008534  0fffcc04	jal	_ProcessWakeup
 9291  00008538  54000000	nop; not filled.
 9292  0000853c  afa30000	sw	(r29),r3
 9293  00008540  0ffff538	jal	_QueueFreeLink
 9294  00008544  54000000	nop; not filled.
 9295  00008548  23bd0008	addi	r29,r29,#8
 9296  0000854c          	L71_LF7:
 9297  0000854c  23bdfff8	addi	r29,r29,#-8
 9298  00008550  afa40000	sw	(r29),r4
 9299  00008554  0fff8d30	jal	_SetIntrs
 9300  00008558  54000000	nop; not filled.
 9301  0000855c  23bd0008	addi	r29,r29,#8
 9302  00008560  8fa20000	lw	r2,0(r29)
 9303  00008564  8fa30004	lw	r3,4(r29)
 9304  00008568  8fa40008	lw	r4,8(r29)
 9305  0000856c  8fa5000c	lw	r5,12(r29)
 9306  00008570  8fdffff8	lw	r31,-8(r30)
 9307  00008574  001ee820	add	r29,r0,r30
 9308  00008578  8fdefffc	lw	r30,-4(r30)
 9309  0000857c  4be00000	jr	r31
 9310  00008580  54000000	nop
 9311  00008584          	.endproc _SemSignal
 9312  00008584          	.align 2
 9313  00008584          	.proc _LockInit
 9314  00008584          	.global _LockInit
 9315  00008584          	_LockInit:
 9316                      ;  Function 'LockInit'; 0 bytes of locals, 0 regs to save.
 9317  00008584  afbefffc	sw	-4(r29),r30; push fp
 9318  00008588  001df020	add	r30,r0,r29; fp = sp
 9319  0000858c  afbffff8	sw	-8(r29),r31; push ret addr
 9320  00008590  2fbd0008	subui	r29,r29,#8; alloc local storage
 9321  00008594  8fdffff8	lw	r31,-8(r30)
 9322  00008598  001ee820	add	r29,r0,r30
 9323  0000859c  8fdefffc	lw	r30,-4(r30)
 9324  000085a0  4be00000	jr	r31
 9325  000085a4  54000000	nop
 9326  000085a8          	.endproc _LockInit
 9327  000085a8          	.align 2
 9328  000085a8          	.proc _LockAcquire
 9329  000085a8          	.global _LockAcquire
 9330  000085a8          	_LockAcquire:
 9331                      ;  Function 'LockAcquire'; 0 bytes of locals, 0 regs to save.
 9332  000085a8  afbefffc	sw	-4(r29),r30; push fp
 9333  000085ac  001df020	add	r30,r0,r29; fp = sp
 9334  000085b0  afbffff8	sw	-8(r29),r31; push ret addr
 9335  000085b4  2fbd0008	subui	r29,r29,#8; alloc local storage
 9336  000085b8  8fdffff8	lw	r31,-8(r30)
 9337  000085bc  001ee820	add	r29,r0,r30
 9338  000085c0  8fdefffc	lw	r30,-4(r30)
 9339  000085c4  4be00000	jr	r31
 9340  000085c8  54000000	nop
 9341  000085cc          	.endproc _LockAcquire
 9342  000085cc          	.align 2
 9343  000085cc          	.proc _LockRelease
 9344  000085cc          	.global _LockRelease
 9345  000085cc          	_LockRelease:
 9346                      ;  Function 'LockRelease'; 0 bytes of locals, 0 regs to save.
 9347  000085cc  afbefffc	sw	-4(r29),r30; push fp
 9348  000085d0  001df020	add	r30,r0,r29; fp = sp
 9349  000085d4  afbffff8	sw	-8(r29),r31; push ret addr
 9350  000085d8  2fbd0008	subui	r29,r29,#8; alloc local storage
 9351  000085dc  8fdffff8	lw	r31,-8(r30)
 9352  000085e0  001ee820	add	r29,r0,r30
 9353  000085e4  8fdefffc	lw	r30,-4(r30)
 9354  000085e8  4be00000	jr	r31
 9355  000085ec  54000000	nop
 9356  000085f0          	.endproc _LockRelease
 9357  000085f0          	.align 2
 9358  000085f0          	.proc _CondInit
 9359  000085f0          	.global _CondInit
 9360  000085f0          	_CondInit:
 9361                      ;  Function 'CondInit'; 0 bytes of locals, 0 regs to save.
 9362  000085f0  afbefffc	sw	-4(r29),r30; push fp
 9363  000085f4  001df020	add	r30,r0,r29; fp = sp
 9364  000085f8  afbffff8	sw	-8(r29),r31; push ret addr
 9365  000085fc  2fbd0008	subui	r29,r29,#8; alloc local storage
 9366  00008600  8fdffff8	lw	r31,-8(r30)
 9367  00008604  001ee820	add	r29,r0,r30
 9368  00008608  8fdefffc	lw	r30,-4(r30)
 9369  0000860c  4be00000	jr	r31
 9370  00008610  54000000	nop
 9371  00008614          	.endproc _CondInit
 9372  00008614          	.align 2
 9373  00008614          	.proc _CondWait
 9374  00008614          	.global _CondWait
 9375  00008614          	_CondWait:
 9376                      ;  Function 'CondWait'; 0 bytes of locals, 0 regs to save.
 9377  00008614  afbefffc	sw	-4(r29),r30; push fp
 9378  00008618  001df020	add	r30,r0,r29; fp = sp
 9379  0000861c  afbffff8	sw	-8(r29),r31; push ret addr
 9380  00008620  2fbd0008	subui	r29,r29,#8; alloc local storage
 9381  00008624  8fdffff8	lw	r31,-8(r30)
 9382  00008628  001ee820	add	r29,r0,r30
 9383  0000862c  8fdefffc	lw	r30,-4(r30)
 9384  00008630  4be00000	jr	r31
 9385  00008634  54000000	nop
 9386  00008638          	.endproc _CondWait
 9387  00008638          	.align 2
 9388  00008638          	.proc _CondSignal
 9389  00008638          	.global _CondSignal
 9390  00008638          	_CondSignal:
 9391                      ;  Function 'CondSignal'; 0 bytes of locals, 0 regs to save.
 9392  00008638  afbefffc	sw	-4(r29),r30; push fp
 9393  0000863c  001df020	add	r30,r0,r29; fp = sp
 9394  00008640  afbffff8	sw	-8(r29),r31; push ret addr
 9395  00008644  2fbd0008	subui	r29,r29,#8; alloc local storage
 9396  00008648  8fdffff8	lw	r31,-8(r30)
 9397  0000864c  001ee820	add	r29,r0,r30
 9398  00008650  8fdefffc	lw	r30,-4(r30)
 9399  00008654  4be00000	jr	r31
 9400  00008658  54000000	nop
 9401  0000865c          	.endproc _CondSignal
 9402  0000865c          	.align 2
 9403  0000865c          	.proc _CondBroadcast
 9404  0000865c          	.global _CondBroadcast
 9405  0000865c          	_CondBroadcast:
 9406                      ;  Function 'CondBroadcast'; 0 bytes of locals, 0 regs to save.
 9407  0000865c  afbefffc	sw	-4(r29),r30; push fp
 9408  00008660  001df020	add	r30,r0,r29; fp = sp
 9409  00008664  afbffff8	sw	-8(r29),r31; push ret addr
 9410  00008668  2fbd0008	subui	r29,r29,#8; alloc local storage
 9411  0000866c  8fdffff8	lw	r31,-8(r30)
 9412  00008670  001ee820	add	r29,r0,r30
 9413  00008674  8fdefffc	lw	r30,-4(r30)
 9414  00008678  4be00000	jr	r31
 9415  0000867c  54000000	nop
 9416  00008680          	.endproc _CondBroadcast
 9417                      ; Compiled by GCC
 9418  00008680          	.data
 9419  00012ee5          	.align 2
 9420  00012ee8          	_rcsid_LF8:
 9421  00012ee8  3a207472	.ascii "$Id: traps.c,v 1.1 2000/09/20 01:50:19 elm Exp elm $\000"
 9421  00012eec  6170732e	
 9421  00012ef0  632c7620	
 9421  00012ef4  312e3120	
 9421  00012ef8  32303030	
 9421  00012efc  2f30392f	
 9421  00012f00  32302030	
 9421  00012f04  313a3530	
 9421  00012f08  3a313920	
 9421  00012f0c  656c6d20	
 9421  00012f10  45787020	
 9421  00012f14  656c6d20	
 9421  00012f18  303030  	
 9422  00012f1b          	.text
 9423  00008680          	.align 2
 9424  00008680          	.proc _isspace
 9425  00008680          	.global _isspace
 9426  00008680          	_isspace:
 9427                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 9428  00008680  afbefffc	sw	-4(r29),r30; push fp
 9429  00008684  001df020	add	r30,r0,r29; fp = sp
 9430  00008688  afbffff8	sw	-8(r29),r31; push ret addr
 9431  0000868c  2fbd0010	subui	r29,r29,#16; alloc local storage
 9432  00008690  afa20000	sw	0(r29),r2
 9433  00008694  83c20003	lb	r2,3(r30)
 9434  00008698  201f0000	addi	r31,r0,#0
 9435  0000869c  304100ff	andi	r1,r2,#0x00ff
 9436  000086a0  60210020	seqi	r1,r1,#32
 9437  000086a4  14200018	bnez	r1,L6_LF8
 9438  000086a8  54000000	nop; not filled.
 9439  000086ac  2041fff7	addi	r1,r2,#-9
 9440  000086b0  302100ff	andi	r1,r1,#0x00ff
 9441  000086b4  70210001	sleui	r1,r1,#1
 9442  000086b8  10200008	beqz	r1,L5_LF8
 9443  000086bc  54000000	nop; not filled.
 9444  000086c0          	L6_LF8:
 9445  000086c0  201f0001	addi	r31,r0,#1
 9446  000086c4          	L5_LF8:
 9447  000086c4  001f0820	add	r1,r0,r31
 9448  000086c8  8fa20000	lw	r2,0(r29)
 9449  000086cc  8fdffff8	lw	r31,-8(r30)
 9450  000086d0  001ee820	add	r29,r0,r30
 9451  000086d4  8fdefffc	lw	r30,-4(r30)
 9452  000086d8  4be00000	jr	r31
 9453  000086dc  54000000	nop
 9454  000086e0          	.endproc _isspace
 9455  000086e0          	.align 2
 9456  000086e0          	.proc _isxdigit
 9457  000086e0          	.global _isxdigit
 9458  000086e0          	_isxdigit:
 9459                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 9460  000086e0  afbefffc	sw	-4(r29),r30; push fp
 9461  000086e4  001df020	add	r30,r0,r29; fp = sp
 9462  000086e8  afbffff8	sw	-8(r29),r31; push ret addr
 9463  000086ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 9464  000086f0  afa20000	sw	0(r29),r2
 9465  000086f4  83df0003	lb	r31,3(r30)
 9466  000086f8  20020000	addi	r2,r0,#0
 9467  000086fc  23e1ffd0	addi	r1,r31,#-48
 9468  00008700  302100ff	andi	r1,r1,#0x00ff
 9469  00008704  70210009	sleui	r1,r1,#9
 9470  00008708  14200028	bnez	r1,L12_LF8
 9471  0000870c  54000000	nop; not filled.
 9472  00008710  23e1ff9f	addi	r1,r31,#-97
 9473  00008714  302100ff	andi	r1,r1,#0x00ff
 9474  00008718  70210005	sleui	r1,r1,#5
 9475  0000871c  14200014	bnez	r1,L12_LF8
 9476  00008720  54000000	nop; not filled.
 9477  00008724  33e100ff	andi	r1,r31,#0x00ff
 9478  00008728  64210041	snei	r1,r1,#65
 9479  0000872c  14200008	bnez	r1,L11_LF8
 9480  00008730  54000000	nop; not filled.
 9481  00008734          	L12_LF8:
 9482  00008734  20020001	addi	r2,r0,#1
 9483  00008738          	L11_LF8:
 9484  00008738  00020820	add	r1,r0,r2
 9485  0000873c  8fa20000	lw	r2,0(r29)
 9486  00008740  8fdffff8	lw	r31,-8(r30)
 9487  00008744  001ee820	add	r29,r0,r30
 9488  00008748  8fdefffc	lw	r30,-4(r30)
 9489  0000874c  4be00000	jr	r31
 9490  00008750  54000000	nop
 9491  00008754          	.endproc _isxdigit
 9492  00008754          	.align 2
 9493  00008754          	.proc _DisableIntrs
 9494  00008754          	.global _DisableIntrs
 9495  00008754          	_DisableIntrs:
 9496                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 9497  00008754  afbefffc	sw	-4(r29),r30; push fp
 9498  00008758  001df020	add	r30,r0,r29; fp = sp
 9499  0000875c  afbffff8	sw	-8(r29),r31; push ret addr
 9500  00008760  2fbd0010	subui	r29,r29,#16; alloc local storage
 9501  00008764  afa20000	sw	0(r29),r2
 9502  00008768  23bdfff8	addi	r29,r29,#-8
 9503  0000876c  2002000f	addi	r2,r0,#15
 9504  00008770  afa20000	sw	(r29),r2
 9505  00008774  0fff8b10	jal	_SetIntrs
 9506  00008778  54000000	nop; not filled.
 9507  0000877c  23bd0008	addi	r29,r29,#8
 9508  00008780  8fa20000	lw	r2,0(r29)
 9509  00008784  8fdffff8	lw	r31,-8(r30)
 9510  00008788  001ee820	add	r29,r0,r30
 9511  0000878c  8fdefffc	lw	r30,-4(r30)
 9512  00008790  4be00000	jr	r31
 9513  00008794  54000000	nop
 9514  00008798          	.endproc _DisableIntrs
 9515  00008798          	.align 2
 9516  00008798          	.proc _EnableIntrs
 9517  00008798          	.global _EnableIntrs
 9518  00008798          	_EnableIntrs:
 9519                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 9520  00008798  afbefffc	sw	-4(r29),r30; push fp
 9521  0000879c  001df020	add	r30,r0,r29; fp = sp
 9522  000087a0  afbffff8	sw	-8(r29),r31; push ret addr
 9523  000087a4  2fbd0010	subui	r29,r29,#16; alloc local storage
 9524  000087a8  afa20000	sw	0(r29),r2
 9525  000087ac  23bdfff8	addi	r29,r29,#-8
 9526  000087b0  20020000	addi	r2,r0,#0
 9527  000087b4  afa20000	sw	(r29),r2
 9528  000087b8  0fff8acc	jal	_SetIntrs
 9529  000087bc  54000000	nop; not filled.
 9530  000087c0  23bd0008	addi	r29,r29,#8
 9531  000087c4  8fa20000	lw	r2,0(r29)
 9532  000087c8  8fdffff8	lw	r31,-8(r30)
 9533  000087cc  001ee820	add	r29,r0,r30
 9534  000087d0  8fdefffc	lw	r30,-4(r30)
 9535  000087d4  4be00000	jr	r31
 9536  000087d8  54000000	nop
 9537  000087dc          	.endproc _EnableIntrs
 9538  000087dc          	.align 2
 9539  000087dc          	.proc _RestoreIntrs
 9540  000087dc          	.global _RestoreIntrs
 9541  000087dc          	_RestoreIntrs:
 9542                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 9543  000087dc  afbefffc	sw	-4(r29),r30; push fp
 9544  000087e0  001df020	add	r30,r0,r29; fp = sp
 9545  000087e4  afbffff8	sw	-8(r29),r31; push ret addr
 9546  000087e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 9547  000087ec  afa20000	sw	0(r29),r2
 9548  000087f0  23bdfff8	addi	r29,r29,#-8
 9549  000087f4  8fc20000	lw	r2,(r30)
 9550  000087f8  afa20000	sw	(r29),r2
 9551  000087fc  0fff8a88	jal	_SetIntrs
 9552  00008800  54000000	nop; not filled.
 9553  00008804  23bd0008	addi	r29,r29,#8
 9554  00008808  8fa20000	lw	r2,0(r29)
 9555  0000880c  8fdffff8	lw	r31,-8(r30)
 9556  00008810  001ee820	add	r29,r0,r30
 9557  00008814  8fdefffc	lw	r30,-4(r30)
 9558  00008818  4be00000	jr	r31
 9559  0000881c  54000000	nop
 9560  00008820          	.endproc _RestoreIntrs
 9561  00008820          	.align 2
 9562  00008820          	.proc _QueueLinkInit
 9563  00008820          	.global _QueueLinkInit
 9564  00008820          	_QueueLinkInit:
 9565                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 9566  00008820  afbefffc	sw	-4(r29),r30; push fp
 9567  00008824  001df020	add	r30,r0,r29; fp = sp
 9568  00008828  afbffff8	sw	-8(r29),r31; push ret addr
 9569  0000882c  2fbd0010	subui	r29,r29,#16; alloc local storage
 9570  00008830  afa20000	sw	0(r29),r2
 9571  00008834  8fc10000	lw	r1,(r30)
 9572  00008838  8fc20004	lw	r2,4(r30)
 9573  0000883c  201f0000	addi	r31,r0,#0
 9574  00008840  ac3f0000	sw	(r1),r31
 9575  00008844  ac22000c	sw	12(r1),r2
 9576  00008848  8fa20000	lw	r2,0(r29)
 9577  0000884c  8fdffff8	lw	r31,-8(r30)
 9578  00008850  001ee820	add	r29,r0,r30
 9579  00008854  8fdefffc	lw	r30,-4(r30)
 9580  00008858  4be00000	jr	r31
 9581  0000885c  54000000	nop
 9582  00008860          	.endproc _QueueLinkInit
 9583  00008860          	.align 2
 9584  00008860          	.proc _QueueNext
 9585  00008860          	.global _QueueNext
 9586  00008860          	_QueueNext:
 9587                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 9588  00008860  afbefffc	sw	-4(r29),r30; push fp
 9589  00008864  001df020	add	r30,r0,r29; fp = sp
 9590  00008868  afbffff8	sw	-8(r29),r31; push ret addr
 9591  0000886c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9592  00008870  8fc10000	lw	r1,(r30)
 9593  00008874  8c210000	lw	r1,(r1)
 9594  00008878  8fdffff8	lw	r31,-8(r30)
 9595  0000887c  001ee820	add	r29,r0,r30
 9596  00008880  8fdefffc	lw	r30,-4(r30)
 9597  00008884  4be00000	jr	r31
 9598  00008888  54000000	nop
 9599  0000888c          	.endproc _QueueNext
 9600  0000888c          	.align 2
 9601  0000888c          	.proc _QueuePrev
 9602  0000888c          	.global _QueuePrev
 9603  0000888c          	_QueuePrev:
 9604                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 9605  0000888c  afbefffc	sw	-4(r29),r30; push fp
 9606  00008890  001df020	add	r30,r0,r29; fp = sp
 9607  00008894  afbffff8	sw	-8(r29),r31; push ret addr
 9608  00008898  2fbd0008	subui	r29,r29,#8; alloc local storage
 9609  0000889c  8fc10000	lw	r1,(r30)
 9610  000088a0  8c210004	lw	r1,4(r1)
 9611  000088a4  8fdffff8	lw	r31,-8(r30)
 9612  000088a8  001ee820	add	r29,r0,r30
 9613  000088ac  8fdefffc	lw	r30,-4(r30)
 9614  000088b0  4be00000	jr	r31
 9615  000088b4  54000000	nop
 9616  000088b8          	.endproc _QueuePrev
 9617  000088b8          	.align 2
 9618  000088b8          	.proc _QueueFirst
 9619  000088b8          	.global _QueueFirst
 9620  000088b8          	_QueueFirst:
 9621                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 9622  000088b8  afbefffc	sw	-4(r29),r30; push fp
 9623  000088bc  001df020	add	r30,r0,r29; fp = sp
 9624  000088c0  afbffff8	sw	-8(r29),r31; push ret addr
 9625  000088c4  2fbd0008	subui	r29,r29,#8; alloc local storage
 9626  000088c8  8fc10000	lw	r1,(r30)
 9627  000088cc  8c210000	lw	r1,(r1)
 9628  000088d0  8fdffff8	lw	r31,-8(r30)
 9629  000088d4  001ee820	add	r29,r0,r30
 9630  000088d8  8fdefffc	lw	r30,-4(r30)
 9631  000088dc  4be00000	jr	r31
 9632  000088e0  54000000	nop
 9633  000088e4          	.endproc _QueueFirst
 9634  000088e4          	.align 2
 9635  000088e4          	.proc _QueueLast
 9636  000088e4          	.global _QueueLast
 9637  000088e4          	_QueueLast:
 9638                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 9639  000088e4  afbefffc	sw	-4(r29),r30; push fp
 9640  000088e8  001df020	add	r30,r0,r29; fp = sp
 9641  000088ec  afbffff8	sw	-8(r29),r31; push ret addr
 9642  000088f0  2fbd0008	subui	r29,r29,#8; alloc local storage
 9643  000088f4  8fc10000	lw	r1,(r30)
 9644  000088f8  8c210004	lw	r1,4(r1)
 9645  000088fc  8fdffff8	lw	r31,-8(r30)
 9646  00008900  001ee820	add	r29,r0,r30
 9647  00008904  8fdefffc	lw	r30,-4(r30)
 9648  00008908  4be00000	jr	r31
 9649  0000890c  54000000	nop
 9650  00008910          	.endproc _QueueLast
 9651  00008910          	.align 2
 9652  00008910          	.proc _QueueInsertAfter
 9653  00008910          	.global _QueueInsertAfter
 9654  00008910          	_QueueInsertAfter:
 9655                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 9656  00008910  afbefffc	sw	-4(r29),r30; push fp
 9657  00008914  001df020	add	r30,r0,r29; fp = sp
 9658  00008918  afbffff8	sw	-8(r29),r31; push ret addr
 9659  0000891c  2fbd0010	subui	r29,r29,#16; alloc local storage
 9660  00008920  afa20000	sw	0(r29),r2
 9661  00008924  afa30004	sw	4(r29),r3
 9662  00008928  8fc30000	lw	r3,(r30)
 9663  0000892c  8fc20004	lw	r2,4(r30)
 9664  00008930  8fc10008	lw	r1,8(r30)
 9665  00008934  ac230008	sw	8(r1),r3
 9666  00008938  ac220004	sw	4(r1),r2
 9667  0000893c  8c5f0000	lw	r31,(r2)
 9668  00008940  ac3f0000	sw	(r1),r31
 9669  00008944  ac410000	sw	(r2),r1
 9670  00008948  8c220000	lw	r2,(r1)
 9671  0000894c  ac410004	sw	4(r2),r1
 9672  00008950  8c610008	lw	r1,8(r3)
 9673  00008954  20210001	addi	r1,r1,#1
 9674  00008958  ac610008	sw	8(r3),r1
 9675  0000895c  8fa20000	lw	r2,0(r29)
 9676  00008960  8fa30004	lw	r3,4(r29)
 9677  00008964  8fdffff8	lw	r31,-8(r30)
 9678  00008968  001ee820	add	r29,r0,r30
 9679  0000896c  8fdefffc	lw	r30,-4(r30)
 9680  00008970  4be00000	jr	r31
 9681  00008974  54000000	nop
 9682  00008978          	.endproc _QueueInsertAfter
 9683  00008978          	.align 2
 9684  00008978          	.proc _QueueInsertFirst
 9685  00008978          	.global _QueueInsertFirst
 9686  00008978          	_QueueInsertFirst:
 9687                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 9688  00008978  afbefffc	sw	-4(r29),r30; push fp
 9689  0000897c  001df020	add	r30,r0,r29; fp = sp
 9690  00008980  afbffff8	sw	-8(r29),r31; push ret addr
 9691  00008984  2fbd0010	subui	r29,r29,#16; alloc local storage
 9692  00008988  afa20000	sw	0(r29),r2
 9693  0000898c  afa30004	sw	4(r29),r3
 9694  00008990  8fc30000	lw	r3,(r30)
 9695  00008994  8fc10004	lw	r1,4(r30)
 9696  00008998  ac230008	sw	8(r1),r3
 9697  0000899c  ac230004	sw	4(r1),r3
 9698  000089a0  8c7f0000	lw	r31,(r3)
 9699  000089a4  ac3f0000	sw	(r1),r31
 9700  000089a8  ac610000	sw	(r3),r1
 9701  000089ac  8c220000	lw	r2,(r1)
 9702  000089b0  ac410004	sw	4(r2),r1
 9703  000089b4  8c610008	lw	r1,8(r3)
 9704  000089b8  20210001	addi	r1,r1,#1
 9705  000089bc  ac610008	sw	8(r3),r1
 9706  000089c0  8fa20000	lw	r2,0(r29)
 9707  000089c4  8fa30004	lw	r3,4(r29)
 9708  000089c8  8fdffff8	lw	r31,-8(r30)
 9709  000089cc  001ee820	add	r29,r0,r30
 9710  000089d0  8fdefffc	lw	r30,-4(r30)
 9711  000089d4  4be00000	jr	r31
 9712  000089d8  54000000	nop
 9713  000089dc          	.endproc _QueueInsertFirst
 9714  000089dc          	.align 2
 9715  000089dc          	.proc _QueueInsertLast
 9716  000089dc          	.global _QueueInsertLast
 9717  000089dc          	_QueueInsertLast:
 9718                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 9719  000089dc  afbefffc	sw	-4(r29),r30; push fp
 9720  000089e0  001df020	add	r30,r0,r29; fp = sp
 9721  000089e4  afbffff8	sw	-8(r29),r31; push ret addr
 9722  000089e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 9723  000089ec  afa20000	sw	0(r29),r2
 9724  000089f0  afa30004	sw	4(r29),r3
 9725  000089f4  8fc30000	lw	r3,(r30)
 9726  000089f8  8fc10004	lw	r1,4(r30)
 9727  000089fc  8c620004	lw	r2,4(r3)
 9728  00008a00  ac230008	sw	8(r1),r3
 9729  00008a04  ac220004	sw	4(r1),r2
 9730  00008a08  8c5f0000	lw	r31,(r2)
 9731  00008a0c  ac3f0000	sw	(r1),r31
 9732  00008a10  ac410000	sw	(r2),r1
 9733  00008a14  8c220000	lw	r2,(r1)
 9734  00008a18  ac410004	sw	4(r2),r1
 9735  00008a1c  8c610008	lw	r1,8(r3)
 9736  00008a20  20210001	addi	r1,r1,#1
 9737  00008a24  ac610008	sw	8(r3),r1
 9738  00008a28  8fa20000	lw	r2,0(r29)
 9739  00008a2c  8fa30004	lw	r3,4(r29)
 9740  00008a30  8fdffff8	lw	r31,-8(r30)
 9741  00008a34  001ee820	add	r29,r0,r30
 9742  00008a38  8fdefffc	lw	r30,-4(r30)
 9743  00008a3c  4be00000	jr	r31
 9744  00008a40  54000000	nop
 9745  00008a44          	.endproc _QueueInsertLast
 9746  00008a44          	.align 2
 9747  00008a44          	.proc _QueueRemove
 9748  00008a44          	.global _QueueRemove
 9749  00008a44          	_QueueRemove:
 9750                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 9751  00008a44  afbefffc	sw	-4(r29),r30; push fp
 9752  00008a48  001df020	add	r30,r0,r29; fp = sp
 9753  00008a4c  afbffff8	sw	-8(r29),r31; push ret addr
 9754  00008a50  2fbd0010	subui	r29,r29,#16; alloc local storage
 9755  00008a54  afa20000	sw	0(r29),r2
 9756  00008a58  afa30004	sw	4(r29),r3
 9757  00008a5c  8fdf0000	lw	r31,(r30)
 9758  00008a60  8fe10008	lw	r1,8(r31)
 9759  00008a64  8c210008	lw	r1,8(r1)
 9760  00008a68  6c210000	sgti	r1,r1,#0
 9761  00008a6c  1020002c	beqz	r1,L44_LF8
 9762  00008a70  54000000	nop; not filled.
 9763  00008a74  8fe10004	lw	r1,4(r31)
 9764  00008a78  8fe30000	lw	r3,(r31)
 9765  00008a7c  ac230000	sw	(r1),r3
 9766  00008a80  8fe10000	lw	r1,(r31)
 9767  00008a84  8fe30004	lw	r3,4(r31)
 9768  00008a88  ac230004	sw	4(r1),r3
 9769  00008a8c  8fe20008	lw	r2,8(r31)
 9770  00008a90  8c410008	lw	r1,8(r2)
 9771  00008a94  2021ffff	addi	r1,r1,#-1
 9772  00008a98  ac410008	sw	8(r2),r1
 9773  00008a9c          	L44_LF8:
 9774  00008a9c  20030000	addi	r3,r0,#0
 9775  00008aa0  afe30000	sw	(r31),r3
 9776  00008aa4  8fa20000	lw	r2,0(r29)
 9777  00008aa8  8fa30004	lw	r3,4(r29)
 9778  00008aac  8fdffff8	lw	r31,-8(r30)
 9779  00008ab0  001ee820	add	r29,r0,r30
 9780  00008ab4  8fdefffc	lw	r30,-4(r30)
 9781  00008ab8  4be00000	jr	r31
 9782  00008abc  54000000	nop
 9783  00008ac0          	.endproc _QueueRemove
 9784  00008ac0          	.align 2
 9785  00008ac0          	.proc _QueueLength
 9786  00008ac0          	.global _QueueLength
 9787  00008ac0          	_QueueLength:
 9788                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 9789  00008ac0  afbefffc	sw	-4(r29),r30; push fp
 9790  00008ac4  001df020	add	r30,r0,r29; fp = sp
 9791  00008ac8  afbffff8	sw	-8(r29),r31; push ret addr
 9792  00008acc  2fbd0008	subui	r29,r29,#8; alloc local storage
 9793  00008ad0  8fc10000	lw	r1,(r30)
 9794  00008ad4  8c210008	lw	r1,8(r1)
 9795  00008ad8  8fdffff8	lw	r31,-8(r30)
 9796  00008adc  001ee820	add	r29,r0,r30
 9797  00008ae0  8fdefffc	lw	r30,-4(r30)
 9798  00008ae4  4be00000	jr	r31
 9799  00008ae8  54000000	nop
 9800  00008aec          	.endproc _QueueLength
 9801  00008aec          	.align 2
 9802  00008aec          	.proc _QueueEmpty
 9803  00008aec          	.global _QueueEmpty
 9804  00008aec          	_QueueEmpty:
 9805                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 9806  00008aec  afbefffc	sw	-4(r29),r30; push fp
 9807  00008af0  001df020	add	r30,r0,r29; fp = sp
 9808  00008af4  afbffff8	sw	-8(r29),r31; push ret addr
 9809  00008af8  2fbd0008	subui	r29,r29,#8; alloc local storage
 9810  00008afc  8fc10000	lw	r1,(r30)
 9811  00008b00  8c210008	lw	r1,8(r1)
 9812  00008b04  60210000	seqi	r1,r1,#0
 9813  00008b08  8fdffff8	lw	r31,-8(r30)
 9814  00008b0c  001ee820	add	r29,r0,r30
 9815  00008b10  8fdefffc	lw	r30,-4(r30)
 9816  00008b14  4be00000	jr	r31
 9817  00008b18  54000000	nop
 9818  00008b1c          	.endproc _QueueEmpty
 9819  00008b1c          	.align 2
 9820  00008b1c          	.proc _TimerSet
 9821  00008b1c          	.global _TimerSet
 9822  00008b1c          	_TimerSet:
 9823                      ;  Function 'TimerSet'; 0 bytes of locals, 0 regs to save.
 9824  00008b1c  afbefffc	sw	-4(r29),r30; push fp
 9825  00008b20  001df020	add	r30,r0,r29; fp = sp
 9826  00008b24  afbffff8	sw	-8(r29),r31; push ret addr
 9827  00008b28  2fbd0008	subui	r29,r29,#8; alloc local storage
 9828  00008b2c  3c01fff0	lhi	r1,#-16
 9829  00008b30  24210010	addui	r1,r1,#16
 9830  00008b34  8fdf0000	lw	r31,(r30)
 9831  00008b38  ac3f0000	sw	(r1),r31
 9832  00008b3c  8fdffff8	lw	r31,-8(r30)
 9833  00008b40  001ee820	add	r29,r0,r30
 9834  00008b44  8fdefffc	lw	r30,-4(r30)
 9835  00008b48  4be00000	jr	r31
 9836  00008b4c  54000000	nop
 9837  00008b50          	.endproc _TimerSet
 9838  00008b50          	.align 2
 9839  00008b50          	.proc _KbdModuleInit
 9840  00008b50          	.global _KbdModuleInit
 9841  00008b50          	_KbdModuleInit:
 9842                      ;  Function 'KbdModuleInit'; 0 bytes of locals, 0 regs to save.
 9843  00008b50  afbefffc	sw	-4(r29),r30; push fp
 9844  00008b54  001df020	add	r30,r0,r29; fp = sp
 9845  00008b58  afbffff8	sw	-8(r29),r31; push ret addr
 9846  00008b5c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9847  00008b60  3c01fff0	lhi	r1,#-16
 9848  00008b64  242101c0	addui	r1,r1,#448
 9849  00008b68  201f0001	addi	r31,r0,#1
 9850  00008b6c  ac3f0000	sw	(r1),r31
 9851  00008b70  8fdffff8	lw	r31,-8(r30)
 9852  00008b74  001ee820	add	r29,r0,r30
 9853  00008b78  8fdefffc	lw	r30,-4(r30)
 9854  00008b7c  4be00000	jr	r31
 9855  00008b80  54000000	nop
 9856  00008b84          	.endproc _KbdModuleInit
 9857  00008b84          	.align 2
 9858  00008b84          	.proc _TrapPrintfHandler_LF8
 9859  00008b84          	_TrapPrintfHandler_LF8:
 9860                      ;  Function 'TrapPrintfHandler'; 160 bytes of locals, 10 regs to save.
 9861  00008b84  afbefffc	sw	-4(r29),r30; push fp
 9862  00008b88  001df020	add	r30,r0,r29; fp = sp
 9863  00008b8c  afbffff8	sw	-8(r29),r31; push ret addr
 9864  00008b90  2fbd00d0	subui	r29,r29,#208; alloc local storage
 9865  00008b94  afa20000	sw	0(r29),r2
 9866  00008b98  afa30004	sw	4(r29),r3
 9867  00008b9c  afa40008	sw	8(r29),r4
 9868  00008ba0  afa5000c	sw	12(r29),r5
 9869  00008ba4  afa60010	sw	16(r29),r6
 9870  00008ba8  afa70014	sw	20(r29),r7
 9871  00008bac  afa80018	sw	24(r29),r8
 9872  00008bb0  afa9001c	sw	28(r29),r9
 9873  00008bb4  afaa0020	sw	32(r29),r10
 9874  00008bb8  afab0024	sw	36(r29),r11
 9875  00008bbc  8fc40000	lw	r4,(r30)
 9876  00008bc0  8fc10004	lw	r1,4(r30)
 9877  00008bc4  20080000	addi	r8,r0,#0
 9878  00008bc8  00081820	add	r3,r0,r8
 9879  00008bcc  64210000	snei	r1,r1,#0
 9880  00008bd0  142000a0	bnez	r1,L56_LF8
 9881  00008bd4  54000000	nop; not filled.
 9882  00008bd8  23bdfff0	addi	r29,r29,#-16
 9883  00008bdc  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
 9884  00008be0  2442fe10	addui	r2,r2,(_currentPCB)&0xffff
 9885  00008be4  8c4b0000	lw	r11,(r2)
 9886  00008be8  afab0000	sw	(r29),r11
 9887  00008bec  afa40004	sw	4(r29),r4
 9888  00008bf0  23c1ff58	addi	r1,r30,#-168
 9889  00008bf4  afa10008	sw	8(r29),r1
 9890  00008bf8  200b0028	addi	r11,r0,#40
 9891  00008bfc  afab000c	sw	12(r29),r11
 9892  00008c00  0fffa964	jal	_MemoryCopyUserToSystem
 9893  00008c04  54000000	nop; not filled.
 9894  00008c08  23bd0010	addi	r29,r29,#16
 9895  00008c0c  23c5ffa7	addi	r5,r30,#-89
 9896  00008c10  23c4ffa8	addi	r4,r30,#-88
 9897  00008c14          	L57_LF8:
 9898  00008c14  23bdfff0	addi	r29,r29,#-16
 9899  00008c18  8c4b0000	lw	r11,(r2)
 9900  00008c1c  afab0000	sw	(r29),r11
 9901  00008c20  8fc1ff58	lw	r1,-168(r30)
 9902  00008c24  00230820	add	r1,r1,r3
 9903  00008c28  afa10004	sw	4(r29),r1
 9904  00008c2c  afa40008	sw	8(r29),r4
 9905  00008c30  200b0001	addi	r11,r0,#1
 9906  00008c34  afab000c	sw	12(r29),r11
 9907  00008c38  0fffa92c	jal	_MemoryCopyUserToSystem
 9908  00008c3c  54000000	nop; not filled.
 9909  00008c40  20a50001	addi	r5,r5,#1
 9910  00008c44  20840001	addi	r4,r4,#1
 9911  00008c48  20630001	addi	r3,r3,#1
 9912  00008c4c  23bd0010	addi	r29,r29,#16
 9913  00008c50  7061004f	sleui	r1,r3,#79
 9914  00008c54  10200060	beqz	r1,L62_LF8
 9915  00008c58  54000000	nop; not filled.
 9916  00008c5c  90a10000	lbu	r1,(r5)
 9917  00008c60  64210000	snei	r1,r1,#0
 9918  00008c64  10200050	beqz	r1,L62_LF8
 9919  00008c68  54000000	nop; not filled.
 9920  00008c6c  0bffffa4	j	L57_LF8
 9921  00008c70  54000000	nop; not filled.
 9922  00008c74          	L56_LF8:
 9923  00008c74  23bdfff0	addi	r29,r29,#-16
 9924  00008c78  afa40000	sw	(r29),r4
 9925  00008c7c  23c1ff58	addi	r1,r30,#-168
 9926  00008c80  afa10004	sw	4(r29),r1
 9927  00008c84  200b0028	addi	r11,r0,#40
 9928  00008c88  afab0008	sw	8(r29),r11
 9929  00008c8c  0fffb518	jal	_bcopy
 9930  00008c90  54000000	nop; not filled.
 9931  00008c94  8fcbff58	lw	r11,-168(r30)
 9932  00008c98  afab0000	sw	(r29),r11
 9933  00008c9c  23c1ffa8	addi	r1,r30,#-88
 9934  00008ca0  afa10004	sw	4(r29),r1
 9935  00008ca4  200b0050	addi	r11,r0,#80
 9936  00008ca8  afab0008	sw	8(r29),r11
 9937  00008cac  0fffad0c	jal	_dstrncpy
 9938  00008cb0  54000000	nop; not filled.
 9939  00008cb4  23bd0010	addi	r29,r29,#16
 9940  00008cb8          	L62_LF8:
 9941  00008cb8  200b0000	addi	r11,r0,(#0x0)&0xff
 9942  00008cbc  a3cbfff7	sb	-9(r30),r11
 9943  00008cc0  23c3ffa8	addi	r3,r30,#-88
 9944  00008cc4  80620000	lb	r2,(r3)
 9945  00008cc8  304100ff	andi	r1,r2,#0x00ff
 9946  00008ccc  64210000	snei	r1,r1,#0
 9947  00008cd0  102000f0	beqz	r1,L64_LF8
 9948  00008cd4  54000000	nop; not filled.
 9949  00008cd8  23cafff8	addi	r10,r30,#-8
 9950  00008cdc  23c9ff5c	addi	r9,r30,#-164
 9951  00008ce0  51010002	slli	r1,r8,#0x2
 9952  00008ce4  00293820	add	r7,r1,r9
 9953  00008ce8  002a3020	add	r6,r1,r10
 9954  00008cec          	L66_LF8:
 9955  00008cec  304100ff	andi	r1,r2,#0x00ff
 9956  00008cf0  60210025	seqi	r1,r1,#37
 9957  00008cf4  102000b4	beqz	r1,L65_LF8
 9958  00008cf8  54000000	nop; not filled.
 9959  00008cfc  90610001	lbu	r1,1(r3)
 9960  00008d00  60210025	seqi	r1,r1,#37
 9961  00008d04  10200010	beqz	r1,L68_LF8
 9962  00008d08  54000000	nop; not filled.
 9963  00008d0c  20630001	addi	r3,r3,#1
 9964  00008d10  08000098	j	L65_LF8
 9965  00008d14  54000000	nop; not filled.
 9966  00008d18          	L68_LF8:
 9967  00008d18  8ceb0000	lw	r11,(r7)
 9968  00008d1c  accbff88	sw	-120(r6),r11
 9969  00008d20  51010002	slli	r1,r8,#0x2
 9970  00008d24  00292820	add	r5,r1,r9
 9971  00008d28  002a2020	add	r4,r1,r10
 9972  00008d2c          	L71_LF8:
 9973  00008d2c  20630001	addi	r3,r3,#1
 9974  00008d30  807f0000	lb	r31,(r3)
 9975  00008d34  33e200ff	andi	r2,r31,#0x00ff
 9976  00008d38  60410073	seqi	r1,r2,#115
 9977  00008d3c  14200060	bnez	r1,L70_LF8
 9978  00008d40  54000000	nop; not filled.
 9979  00008d44  6041006c	seqi	r1,r2,#108
 9980  00008d48  1420ffe0	bnez	r1,L71_LF8
 9981  00008d4c  54000000	nop; not filled.
 9982  00008d50  23e1ff9a	addi	r1,r31,#-102
 9983  00008d54  302100ff	andi	r1,r1,#0x00ff
 9984  00008d58  70210001	sleui	r1,r1,#1
 9985  00008d5c  14200010	bnez	r1,L77_LF8
 9986  00008d60  54000000	nop; not filled.
 9987  00008d64  60410065	seqi	r1,r2,#101
 9988  00008d68  10200020	beqz	r1,L76_LF8
 9989  00008d6c  54000000	nop; not filled.
 9990  00008d70          	L77_LF8:
 9991  00008d70  20e70004	addi	r7,r7,#4
 9992  00008d74  20c60004	addi	r6,r6,#4
 9993  00008d78  21080001	addi	r8,r8,#1
 9994  00008d7c  8ca50004	lw	r5,4(r5)
 9995  00008d80  ac85ff8c	sw	-116(r4),r5
 9996  00008d84  08000018	j	L70_LF8
 9997  00008d88  54000000	nop; not filled.
 9998  00008d8c          	L76_LF8:
 9999  00008d8c  23e1ff9f	addi	r1,r31,#-97
10000  00008d90  302100ff	andi	r1,r1,#0x00ff
10001  00008d94  70210019	sleui	r1,r1,#25
10002  00008d98  1020ff90	beqz	r1,L71_LF8
10003  00008d9c  54000000	nop; not filled.
10004  00008da0          	L70_LF8:
10005  00008da0  20e70004	addi	r7,r7,#4
10006  00008da4  20c60004	addi	r6,r6,#4
10007  00008da8  21080001	addi	r8,r8,#1
10008  00008dac          	L65_LF8:
10009  00008dac  20630001	addi	r3,r3,#1
10010  00008db0  80620000	lb	r2,(r3)
10011  00008db4  304100ff	andi	r1,r2,#0x00ff
10012  00008db8  64210000	snei	r1,r1,#0
10013  00008dbc  1420ff2c	bnez	r1,L66_LF8
10014  00008dc0  54000000	nop; not filled.
10015  00008dc4          	L64_LF8:
10016  00008dc4  23bdffd8	addi	r29,r29,#-40
10017  00008dc8  23c1ffa8	addi	r1,r30,#-88
10018  00008dcc  afa10000	sw	(r29),r1
10019  00008dd0  8fc1ff80	lw	r1,-128(r30)
10020  00008dd4  afa10004	sw	4(r29),r1
10021  00008dd8  8fcbff84	lw	r11,-124(r30)
10022  00008ddc  afab0008	sw	8(r29),r11
10023  00008de0  8fcbff88	lw	r11,-120(r30)
10024  00008de4  afab000c	sw	12(r29),r11
10025  00008de8  8fcbff8c	lw	r11,-116(r30)
10026  00008dec  afab0010	sw	16(r29),r11
10027  00008df0  8fcbff90	lw	r11,-112(r30)
10028  00008df4  afab0014	sw	20(r29),r11
10029  00008df8  8fcbff94	lw	r11,-108(r30)
10030  00008dfc  afab0018	sw	24(r29),r11
10031  00008e00  8fcbff98	lw	r11,-104(r30)
10032  00008e04  afab001c	sw	28(r29),r11
10033  00008e08  8fcbff9c	lw	r11,-100(r30)
10034  00008e0c  afab0020	sw	32(r29),r11
10035  00008e10  0c001394	jal	_printf
10036  00008e14  54000000	nop; not filled.
10037  00008e18  23bd0028	addi	r29,r29,#40
10038  00008e1c  8fa20000	lw	r2,0(r29)
10039  00008e20  8fa30004	lw	r3,4(r29)
10040  00008e24  8fa40008	lw	r4,8(r29)
10041  00008e28  8fa5000c	lw	r5,12(r29)
10042  00008e2c  8fa60010	lw	r6,16(r29)
10043  00008e30  8fa70014	lw	r7,20(r29)
10044  00008e34  8fa80018	lw	r8,24(r29)
10045  00008e38  8fa9001c	lw	r9,28(r29)
10046  00008e3c  8faa0020	lw	r10,32(r29)
10047  00008e40  8fab0024	lw	r11,36(r29)
10048  00008e44  8fdffff8	lw	r31,-8(r30)
10049  00008e48  001ee820	add	r29,r0,r30
10050  00008e4c  8fdefffc	lw	r30,-4(r30)
10051  00008e50  4be00000	jr	r31
10052  00008e54  54000000	nop
10053  00008e58          	.endproc _TrapPrintfHandler_LF8
10054  00008e58          	.data
10055  00012f1b          	.align 2
10056  00012f1c          	LC0_LF8:
10057  00012f1c  496e7465	.ascii "Interrupt cause=0x%x iar=0x%x isr=0x%x args=0x%08x.\n\000"
10057  00012f20  72727570	
10057  00012f24  74206361	
10057  00012f28  7573653d	
10057  00012f2c  30782578	
10057  00012f30  20696172	
10057  00012f34  3d307825	
10057  00012f38  78206973	
10057  00012f3c  723d3078	
10057  00012f40  25782061	
10057  00012f44  7267733d	
10057  00012f48  30782530	
10057  00012f4c  38782e0a	
10057  00012f50  00      	
10058  00012f51          	.align 2
10059  00012f54          	LC1_LF8:
10060  00012f54  476f7420	.ascii "Got a context switch trap!\n\000"
10060  00012f58  6120636f	
10060  00012f5c  6e746578	
10060  00012f60  74207377	
10060  00012f64  69746368	
10060  00012f68  20747261	
10060  00012f6c  70210a00	
10061  00012f70          	.align 2
10062  00012f70          	LC2_LF8:
10063  00012f70  476f7420	.ascii "Got an exit trap!\n\000"
10063  00012f74  616e2065	
10063  00012f78  78697420	
10063  00012f7c  74726170	
10063  00012f80  210a00  	
10064  00012f83          	.align 2
10065  00012f84          	LC3_LF8:
10066  00012f84  476f7420	.ascii "Got a fork trap!\n\000"
10066  00012f88  6120666f	
10066  00012f8c  726b2074	
10066  00012f90  72617021	
10066  00012f94  0a00    	
10067  00012f96          	.align 2
10068  00012f98          	LC4_LF8:
10069  00012f98  476f7420	.ascii "Got a process sleep trap!\n\000"
10069  00012f9c  61207072	
10069  00012fa0  6f636573	
10069  00012fa4  7320736c	
10069  00012fa8  65657020	
10069  00012fac  74726170	
10069  00012fb0  210a00  	
10070  00012fb3          	.align 2
10071  00012fb4          	LC5_LF8:
10072  00012fb4  476f7420	.ascii "Got a printf trap!\n\000"
10072  00012fb8  61207072	
10072  00012fbc  696e7466	
10072  00012fc0  20747261	
10072  00012fc4  70210a00	
10073  00012fc8          	.align 2
10074  00012fc8          	LC6_LF8:
10075  00012fc8  476f7420	.ascii "Got an open with parameters (\'%s\',0x%x)\n\000"
10075  00012fcc  616e206f	
10075  00012fd0  70656e20	
10075  00012fd4  77697468	
10075  00012fd8  20706172	
10075  00012fdc  616d6574	
10075  00012fe0  65727320	
10075  00012fe4  28272573	
10075  00012fe8  272c3078	
10075  00012fec  2578290a	
10075  00012ff0  00      	
10076  00012ff1          	.align 2
10077  00012ff4          	LC7_LF8:
10078  00012ff4  476f7420	.ascii "Got a process ID  trap!\n\000"
10078  00012ff8  61207072	
10078  00012ffc  6f636573	
10078  00013000  73204944	
10078  00013004  20207472	
10078  00013008  6170210a	
10078  0001300c  00      	
10079  0001300d          	.align 2
10080  00013010          	LC8_LF8:
10081  00013010  476f7420	.ascii "Got an unrecognized trap (0x%x) - exiting!\n\000"
10081  00013014  616e2075	
10081  00013018  6e726563	
10081  0001301c  6f676e69	
10081  00013020  7a656420	
10081  00013024  74726170	
10081  00013028  20283078	
10081  0001302c  25782920	
10081  00013030  2d206578	
10081  00013034  6974696e	
10081  00013038  67210a00	
10082  0001303c          	.align 2
10083  0001303c          	LC9_LF8:
10084  0001303c  476f7420	.ascii "Got a timer interrupt!\n\000"
10084  00013040  61207469	
10084  00013044  6d657220	
10084  00013048  696e7465	
10084  0001304c  72727570	
10084  00013050  74210a00	
10085  00013054          	.align 2
10086  00013054          	LC10_LF8:
10087  00013054  476f7420	.ascii "Got a keyboard interrupt (char=0x%x(%c), nleft=%d)!\n\000"
10087  00013058  61206b65	
10087  0001305c  79626f61	
10087  00013060  72642069	
10087  00013064  6e746572	
10087  00013068  72757074	
10087  0001306c  20286368	
10087  00013070  61723d30	
10087  00013074  78257828	
10087  00013078  2563292c	
10087  0001307c  206e6c65	
10087  00013080  66743d25	
10087  00013084  6429210a	
10087  00013088  00      	
10088  00013089          	.align 2
10089  0001308c          	LC11_LF8:
10090  0001308c  45786974	.ascii "Exiting after illegal access at iar=0x%x, isr=0x%x\n\000"
10090  00013090  696e6720	
10090  00013094  61667465	
10090  00013098  7220696c	
10090  0001309c  6c656761	
10090  000130a0  6c206163	
10090  000130a4  63657373	
10090  000130a8  20617420	
10090  000130ac  6961723d	
10090  000130b0  30782578	
10090  000130b4  2c206973	
10090  000130b8  723d3078	
10090  000130bc  25780a00	
10091  000130c0          	.align 2
10092  000130c0          	LC12_LF8:
10093  000130c0  45786974	.ascii "Exiting after illegal address at iar=0x%x, isr=0x%x\n\000"
10093  000130c4  696e6720	
10093  000130c8  61667465	
10093  000130cc  7220696c	
10093  000130d0  6c656761	
10093  000130d4  6c206164	
10093  000130d8  64726573	
10093  000130dc  73206174	
10093  000130e0  20696172	
10093  000130e4  3d307825	
10093  000130e8  782c2069	
10093  000130ec  73723d30	
10093  000130f0  7825780a	
10093  000130f4  00      	
10094  000130f5          	.align 2
10095  000130f8          	LC13_LF8:
10096  000130f8  45786974	.ascii "Exiting after illegal instruction at iar=0x%x, isr=0x%x\n\000"
10096  000130fc  696e6720	
10096  00013100  61667465	
10096  00013104  7220696c	
10096  00013108  6c656761	
10096  0001310c  6c20696e	
10096  00013110  73747275	
10096  00013114  6374696f	
10096  00013118  6e206174	
10096  0001311c  20696172	
10096  00013120  3d307825	
10096  00013124  782c2069	
10096  00013128  73723d30	
10096  0001312c  7825780a	
10096  00013130  00      	
10097  00013131          	.align 2
10098  00013134          	LC14_LF8:
10099  00013134  45786974	.ascii "Exiting after page fault at iar=0x%x, isr=0x%x\n\000"
10099  00013138  696e6720	
10099  0001313c  61667465	
10099  00013140  72207061	
10099  00013144  67652066	
10099  00013148  61756c74	
10099  0001314c  20617420	
10099  00013150  6961723d	
10099  00013154  30782578	
10099  00013158  2c206973	
10099  0001315c  723d3078	
10099  00013160  25780a00	
10100  00013164          	.align 2
10101  00013164          	LC15_LF8:
10102  00013164  476f7420	.ascii "Got an unrecognized system interrupt (0x%x) - exiting!\n\000"
10102  00013168  616e2075	
10102  0001316c  6e726563	
10102  00013170  6f676e69	
10102  00013174  7a656420	
10102  00013178  73797374	
10102  0001317c  656d2069	
10102  00013180  6e746572	
10102  00013184  72757074	
10102  00013188  20283078	
10102  0001318c  25782920	
10102  00013190  2d206578	
10102  00013194  6974696e	
10102  00013198  67210a00	
10103  0001319c          	.align 2
10104  0001319c          	LC16_LF8:
10105  0001319c  41626f75	.ascii "About to return from dointerrupt.\n\000"
10105  000131a0  7420746f	
10105  000131a4  20726574	
10105  000131a8  75726e20	
10105  000131ac  66726f6d	
10105  000131b0  20646f69	
10105  000131b4  6e746572	
10105  000131b8  72757074	
10105  000131bc  2e0a00  	
10106  000131bf          	.text
10107  00008e58          	.align 2
10108  00008e58          	.proc _dointerrupt
10109  00008e58          	.global _dointerrupt
10110  00008e58          	_dointerrupt:
10111                      ;  Function 'dointerrupt'; 48 bytes of locals, 6 regs to save.
10112  00008e58  afbefffc	sw	-4(r29),r30; push fp
10113  00008e5c  001df020	add	r30,r0,r29; fp = sp
10114  00008e60  afbffff8	sw	-8(r29),r31; push ret addr
10115  00008e64  2fbd0050	subui	r29,r29,#80; alloc local storage
10116  00008e68  afa20000	sw	0(r29),r2
10117  00008e6c  afa30004	sw	4(r29),r3
10118  00008e70  afa40008	sw	8(r29),r4
10119  00008e74  afa5000c	sw	12(r29),r5
10120  00008e78  afa60010	sw	16(r29),r6
10121  00008e7c  afa70014	sw	20(r29),r7
10122  00008e80  8fc20000	lw	r2,(r30)
10123  00008e84  8fc50004	lw	r5,4(r30)
10124  00008e88  8fc40008	lw	r4,8(r30)
10125  00008e8c  8fc6000c	lw	r6,12(r30)
10126  00008e90  23bdfff8	addi	r29,r29,#-8
10127  00008e94  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
10128  00008e98  2463fd46	addui	r3,r3,(_debugstr)&0xffff
10129  00008e9c  afa30000	sw	(r29),r3
10130  00008ea0  20070074	addi	r7,r0,#116
10131  00008ea4  afa70004	sw	4(r29),r7
10132  00008ea8  0fffaf6c	jal	_dindex
10133  00008eac  54000000	nop; not filled.
10134  00008eb0  23bd0008	addi	r29,r29,#8
10135  00008eb4  64210000	snei	r1,r1,#0
10136  00008eb8  1420002c	bnez	r1,L84_LF8
10137  00008ebc  54000000	nop; not filled.
10138  00008ec0  23bdfff8	addi	r29,r29,#-8
10139  00008ec4  afa30000	sw	(r29),r3
10140  00008ec8  2007002b	addi	r7,r0,#43
10141  00008ecc  afa70004	sw	4(r29),r7
10142  00008ed0  0fffaf44	jal	_dindex
10143  00008ed4  54000000	nop; not filled.
10144  00008ed8  23bd0008	addi	r29,r29,#8
10145  00008edc  64210000	snei	r1,r1,#0
10146  00008ee0  10200030	beqz	r1,L83_LF8
10147  00008ee4  54000000	nop; not filled.
10148  00008ee8          	L84_LF8:
10149  00008ee8  23bdffe8	addi	r29,r29,#-24
10150  00008eec  3c070001	lhi	r7,((LC0_LF8)>>16)&0xffff
10151  00008ef0  24e72f1c	addui	r7,r7,(LC0_LF8)&0xffff
10152  00008ef4  afa70000	sw	(r29),r7
10153  00008ef8  afa20004	sw	4(r29),r2
10154  00008efc  afa50008	sw	8(r29),r5
10155  00008f00  afa4000c	sw	12(r29),r4
10156  00008f04  afa60010	sw	16(r29),r6
10157  00008f08  0c00129c	jal	_printf
10158  00008f0c  54000000	nop; not filled.
10159  00008f10  23bd0018	addi	r29,r29,#24
10160  00008f14          	L83_LF8:
10161  00008f14  3c070800	lhi	r7,#2048
10162  00008f18  24e70000	addui	r7,r7,#0
10163  00008f1c  00470824	and	r1,r2,r7
10164  00008f20  64210000	snei	r1,r1,#0
10165  00008f24  10200728	beqz	r1,L85_LF8
10166  00008f28  54000000	nop; not filled.
10167  00008f2c  3c07f7ff	lhi	r7,#-2049
10168  00008f30  24e7ffff	addui	r7,r7,#65535
10169  00008f34  00471024	and	r2,r2,r7
10170  00008f38  60410214	seqi	r1,r2,#532
10171  00008f3c  142004b8	bnez	r1,L107_LF8
10172  00008f40  54000000	nop; not filled.
10173  00008f44  6c410214	sgtui	r1,r2,#532
10174  00008f48  1420005c	bnez	r1,L127_LF8
10175  00008f4c  54000000	nop; not filled.
10176  00008f50  60410211	seqi	r1,r2,#529
10177  00008f54  14200558	bnez	r1,L113_LF8
10178  00008f58  54000000	nop; not filled.
10179  00008f5c  6c410211	sgtui	r1,r2,#529
10180  00008f60  14200024	bnez	r1,L128_LF8
10181  00008f64  54000000	nop; not filled.
10182  00008f68  60410201	seqi	r1,r2,#513
10183  00008f6c  142002d4	bnez	r1,L99_LF8
10184  00008f70  54000000	nop; not filled.
10185  00008f74  60410210	seqi	r1,r2,#528
10186  00008f78  102006c0	beqz	r1,L125_LF8
10187  00008f7c  54000000	nop; not filled.
10188  00008f80  080004d0	j	L110_LF8
10189  00008f84  54000000	nop; not filled.
10190  00008f88          	L128_LF8:
10191  00008f88  60410212	seqi	r1,r2,#530
10192  00008f8c  142005d8	bnez	r1,L119_LF8
10193  00008f90  54000000	nop; not filled.
10194  00008f94  60410213	seqi	r1,r2,#531
10195  00008f98  102006a0	beqz	r1,L125_LF8
10196  00008f9c  54000000	nop; not filled.
10197  00008fa0  08000334	j	L102_LF8
10198  00008fa4  54000000	nop; not filled.
10199  00008fa8          	L127_LF8:
10200  00008fa8  60410410	seqi	r1,r2,#1040
10201  00008fac  142001f4	bnez	r1,L96_LF8
10202  00008fb0  54000000	nop; not filled.
10203  00008fb4  6c410410	sgtui	r1,r2,#1040
10204  00008fb8  14200024	bnez	r1,L129_LF8
10205  00008fbc  54000000	nop; not filled.
10206  00008fc0  60410300	seqi	r1,r2,#768
10207  00008fc4  142000c4	bnez	r1,L90_LF8
10208  00008fc8  54000000	nop; not filled.
10209  00008fcc  60410400	seqi	r1,r2,#1024
10210  00008fd0  10200668	beqz	r1,L125_LF8
10211  00008fd4  54000000	nop; not filled.
10212  00008fd8  08000044	j	L87_LF8
10213  00008fdc  54000000	nop; not filled.
10214  00008fe0          	L129_LF8:
10215  00008fe0  60410431	seqi	r1,r2,#1073
10216  00008fe4  142005dc	bnez	r1,L122_LF8
10217  00008fe8  54000000	nop; not filled.
10218  00008fec  6c410431	sgtui	r1,r2,#1073
10219  00008ff0  14200018	bnez	r1,L130_LF8
10220  00008ff4  54000000	nop; not filled.
10221  00008ff8  60410430	seqi	r1,r2,#1072
10222  00008ffc  1020063c	beqz	r1,L125_LF8
10223  00009000  54000000	nop; not filled.
10224  00009004  08000124	j	L93_LF8
10225  00009008  54000000	nop; not filled.
10226  0000900c          	L130_LF8:
10227  0000900c  60410580	seqi	r1,r2,#1408
10228  00009010  10200628	beqz	r1,L125_LF8
10229  00009014  54000000	nop; not filled.
10230  00009018  080004f0	j	L116_LF8
10231  0000901c  54000000	nop; not filled.
10232  00009020          	L87_LF8:
10233  00009020  23bdfff8	addi	r29,r29,#-8
10234  00009024  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10235  00009028  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10236  0000902c  afa20000	sw	(r29),r2
10237  00009030  20070074	addi	r7,r0,#116
10238  00009034  afa70004	sw	4(r29),r7
10239  00009038  0fffaddc	jal	_dindex
10240  0000903c  54000000	nop; not filled.
10241  00009040  23bd0008	addi	r29,r29,#8
10242  00009044  64210000	snei	r1,r1,#0
10243  00009048  1420002c	bnez	r1,L89_LF8
10244  0000904c  54000000	nop; not filled.
10245  00009050  23bdfff8	addi	r29,r29,#-8
10246  00009054  afa20000	sw	(r29),r2
10247  00009058  2007002b	addi	r7,r0,#43
10248  0000905c  afa70004	sw	4(r29),r7
10249  00009060  0fffadb4	jal	_dindex
10250  00009064  54000000	nop; not filled.
10251  00009068  23bd0008	addi	r29,r29,#8
10252  0000906c  64210000	snei	r1,r1,#0
10253  00009070  102006c8	beqz	r1,L134_LF8
10254  00009074  54000000	nop; not filled.
10255  00009078          	L89_LF8:
10256  00009078  23bdfff8	addi	r29,r29,#-8
10257  0000907c  3c070001	lhi	r7,((LC1_LF8)>>16)&0xffff
10258  00009080  24e72f54	addui	r7,r7,(LC1_LF8)&0xffff
10259  00009084  080006a4	j	L154_LF8
10260  00009088  54000000	nop; not filled.
10261  0000908c          	L90_LF8:
10262  0000908c  23bdfff8	addi	r29,r29,#-8
10263  00009090  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10264  00009094  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10265  00009098  afa20000	sw	(r29),r2
10266  0000909c  20070074	addi	r7,r0,#116
10267  000090a0  afa70004	sw	4(r29),r7
10268  000090a4  0fffad70	jal	_dindex
10269  000090a8  54000000	nop; not filled.
10270  000090ac  23bd0008	addi	r29,r29,#8
10271  000090b0  64210000	snei	r1,r1,#0
10272  000090b4  1420002c	bnez	r1,L92_LF8
10273  000090b8  54000000	nop; not filled.
10274  000090bc  23bdfff8	addi	r29,r29,#-8
10275  000090c0  afa20000	sw	(r29),r2
10276  000090c4  2007002b	addi	r7,r0,#43
10277  000090c8  afa70004	sw	4(r29),r7
10278  000090cc  0fffad48	jal	_dindex
10279  000090d0  54000000	nop; not filled.
10280  000090d4  23bd0008	addi	r29,r29,#8
10281  000090d8  64210000	snei	r1,r1,#0
10282  000090dc  10200020	beqz	r1,L91_LF8
10283  000090e0  54000000	nop; not filled.
10284  000090e4          	L92_LF8:
10285  000090e4  23bdfff8	addi	r29,r29,#-8
10286  000090e8  3c070001	lhi	r7,((LC2_LF8)>>16)&0xffff
10287  000090ec  24e72f70	addui	r7,r7,(LC2_LF8)&0xffff
10288  000090f0  afa70000	sw	(r29),r7
10289  000090f4  0c0010b0	jal	_printf
10290  000090f8  54000000	nop; not filled.
10291  000090fc  23bd0008	addi	r29,r29,#8
10292  00009100          	L91_LF8:
10293  00009100  23bdfff8	addi	r29,r29,#-8
10294  00009104  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10295  00009108  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10296  0000910c  8c210000	lw	r1,(r1)
10297  00009110  afa10000	sw	(r29),r1
10298  00009114  0fffc1b4	jal	_ProcessDestroy
10299  00009118  54000000	nop; not filled.
10300  0000911c  0fffba10	jal	_ProcessSchedule
10301  00009120  54000000	nop; not filled.
10302  00009124  0800070c	j	L151_LF8
10303  00009128  54000000	nop; not filled.
10304  0000912c          	L93_LF8:
10305  0000912c  23bdfff8	addi	r29,r29,#-8
10306  00009130  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10307  00009134  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10308  00009138  afa20000	sw	(r29),r2
10309  0000913c  20070074	addi	r7,r0,#116
10310  00009140  afa70004	sw	4(r29),r7
10311  00009144  0fffacd0	jal	_dindex
10312  00009148  54000000	nop; not filled.
10313  0000914c  23bd0008	addi	r29,r29,#8
10314  00009150  64210000	snei	r1,r1,#0
10315  00009154  1420002c	bnez	r1,L95_LF8
10316  00009158  54000000	nop; not filled.
10317  0000915c  23bdfff8	addi	r29,r29,#-8
10318  00009160  afa20000	sw	(r29),r2
10319  00009164  2007002b	addi	r7,r0,#43
10320  00009168  afa70004	sw	4(r29),r7
10321  0000916c  0fffaca8	jal	_dindex
10322  00009170  54000000	nop; not filled.
10323  00009174  23bd0008	addi	r29,r29,#8
10324  00009178  64210000	snei	r1,r1,#0
10325  0000917c  102006b8	beqz	r1,L131_LF8
10326  00009180  54000000	nop; not filled.
10327  00009184          	L95_LF8:
10328  00009184  23bdfff8	addi	r29,r29,#-8
10329  00009188  3c070001	lhi	r7,((LC3_LF8)>>16)&0xffff
10330  0000918c  24e72f84	addui	r7,r7,(LC3_LF8)&0xffff
10331  00009190  afa70000	sw	(r29),r7
10332  00009194  0c001010	jal	_printf
10333  00009198  54000000	nop; not filled.
10334  0000919c  08000694	j	L151_LF8
10335  000091a0  54000000	nop; not filled.
10336  000091a4          	L96_LF8:
10337  000091a4  23bdfff8	addi	r29,r29,#-8
10338  000091a8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10339  000091ac  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10340  000091b0  afa20000	sw	(r29),r2
10341  000091b4  20070074	addi	r7,r0,#116
10342  000091b8  afa70004	sw	4(r29),r7
10343  000091bc  0fffac58	jal	_dindex
10344  000091c0  54000000	nop; not filled.
10345  000091c4  23bd0008	addi	r29,r29,#8
10346  000091c8  64210000	snei	r1,r1,#0
10347  000091cc  1420002c	bnez	r1,L98_LF8
10348  000091d0  54000000	nop; not filled.
10349  000091d4  23bdfff8	addi	r29,r29,#-8
10350  000091d8  afa20000	sw	(r29),r2
10351  000091dc  2007002b	addi	r7,r0,#43
10352  000091e0  afa70004	sw	4(r29),r7
10353  000091e4  0fffac30	jal	_dindex
10354  000091e8  54000000	nop; not filled.
10355  000091ec  23bd0008	addi	r29,r29,#8
10356  000091f0  64210000	snei	r1,r1,#0
10357  000091f4  10200020	beqz	r1,L97_LF8
10358  000091f8  54000000	nop; not filled.
10359  000091fc          	L98_LF8:
10360  000091fc  23bdfff8	addi	r29,r29,#-8
10361  00009200  3c070001	lhi	r7,((LC4_LF8)>>16)&0xffff
10362  00009204  24e72f98	addui	r7,r7,(LC4_LF8)&0xffff
10363  00009208  afa70000	sw	(r29),r7
10364  0000920c  0c000f98	jal	_printf
10365  00009210  54000000	nop; not filled.
10366  00009214  23bd0008	addi	r29,r29,#8
10367  00009218          	L97_LF8:
10368  00009218  23bdfff8	addi	r29,r29,#-8
10369  0000921c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10370  00009220  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10371  00009224  8c210000	lw	r1,(r1)
10372  00009228  afa10000	sw	(r29),r1
10373  0000922c  0fffbd74	jal	_ProcessSuspend
10374  00009230  54000000	nop; not filled.
10375  00009234  0fffb8f8	jal	_ProcessSchedule
10376  00009238  54000000	nop; not filled.
10377  0000923c  080005f4	j	L151_LF8
10378  00009240  54000000	nop; not filled.
10379  00009244          	L99_LF8:
10380  00009244  23bdfff8	addi	r29,r29,#-8
10381  00009248  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10382  0000924c  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10383  00009250  afa20000	sw	(r29),r2
10384  00009254  20070074	addi	r7,r0,#116
10385  00009258  afa70004	sw	4(r29),r7
10386  0000925c  0fffabb8	jal	_dindex
10387  00009260  54000000	nop; not filled.
10388  00009264  23bd0008	addi	r29,r29,#8
10389  00009268  64210000	snei	r1,r1,#0
10390  0000926c  1420002c	bnez	r1,L101_LF8
10391  00009270  54000000	nop; not filled.
10392  00009274  23bdfff8	addi	r29,r29,#-8
10393  00009278  afa20000	sw	(r29),r2
10394  0000927c  2007002b	addi	r7,r0,#43
10395  00009280  afa70004	sw	4(r29),r7
10396  00009284  0fffab90	jal	_dindex
10397  00009288  54000000	nop; not filled.
10398  0000928c  23bd0008	addi	r29,r29,#8
10399  00009290  64210000	snei	r1,r1,#0
10400  00009294  10200020	beqz	r1,L100_LF8
10401  00009298  54000000	nop; not filled.
10402  0000929c          	L101_LF8:
10403  0000929c  23bdfff8	addi	r29,r29,#-8
10404  000092a0  3c070001	lhi	r7,((LC5_LF8)>>16)&0xffff
10405  000092a4  24e72fb4	addui	r7,r7,(LC5_LF8)&0xffff
10406  000092a8  afa70000	sw	(r29),r7
10407  000092ac  0c000ef8	jal	_printf
10408  000092b0  54000000	nop; not filled.
10409  000092b4  23bd0008	addi	r29,r29,#8
10410  000092b8          	L100_LF8:
10411  000092b8  23bdfff8	addi	r29,r29,#-8
10412  000092bc  afa60000	sw	(r29),r6
10413  000092c0  30810040	andi	r1,r4,#64
10414  000092c4  afa10004	sw	4(r29),r1
10415  000092c8  0ffff8b8	jal	_TrapPrintfHandler_LF8
10416  000092cc  54000000	nop; not filled.
10417  000092d0  08000560	j	L151_LF8
10418  000092d4  54000000	nop; not filled.
10419  000092d8          	L102_LF8:
10420  000092d8  30810040	andi	r1,r4,#64
10421  000092dc  64210000	snei	r1,r1,#0
10422  000092e0  1020001c	beqz	r1,L103_LF8
10423  000092e4  54000000	nop; not filled.
10424  000092e8  8cc70000	lw	r7,(r6)
10425  000092ec  afc7ffe8	sw	-24(r30),r7
10426  000092f0  8cc60004	lw	r6,4(r6)
10427  000092f4  afc6ffec	sw	-20(r30),r6
10428  000092f8  0800006c	j	L104_LF8
10429  000092fc  54000000	nop; not filled.
10430  00009300          	L103_LF8:
10431  00009300  23bdfff0	addi	r29,r29,#-16
10432  00009304  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
10433  00009308  2442fe10	addui	r2,r2,(_currentPCB)&0xffff
10434  0000930c  8c470000	lw	r7,(r2)
10435  00009310  afa70000	sw	(r29),r7
10436  00009314  afa60004	sw	4(r29),r6
10437  00009318  23c1ffe8	addi	r1,r30,#-24
10438  0000931c  afa10008	sw	8(r29),r1
10439  00009320  20070008	addi	r7,r0,#8
10440  00009324  afa7000c	sw	12(r29),r7
10441  00009328  0fffa23c	jal	_MemoryCopyUserToSystem
10442  0000932c  54000000	nop; not filled.
10443  00009330  8c420000	lw	r2,(r2)
10444  00009334  afa20000	sw	(r29),r2
10445  00009338  8fc1ffe8	lw	r1,-24(r30)
10446  0000933c  afa10004	sw	4(r29),r1
10447  00009340  23c2ffc8	addi	r2,r30,#-56
10448  00009344  afa20008	sw	8(r29),r2
10449  00009348  2007001f	addi	r7,r0,#31
10450  0000934c  afa7000c	sw	12(r29),r7
10451  00009350  0fffa214	jal	_MemoryCopyUserToSystem
10452  00009354  54000000	nop; not filled.
10453  00009358  20070000	addi	r7,r0,(#0x0)&0xff
10454  0000935c  a3c7ffe7	sb	-25(r30),r7
10455  00009360  afc2ffe8	sw	-24(r30),r2
10456  00009364  23bd0010	addi	r29,r29,#16
10457  00009368          	L104_LF8:
10458  00009368  23bdfff8	addi	r29,r29,#-8
10459  0000936c  20070000	addi	r7,r0,#0
10460  00009370  afa70000	sw	(r29),r7
10461  00009374  0fff7f10	jal	_SetIntrs
10462  00009378  54000000	nop; not filled.
10463  0000937c  00011020	add	r2,r0,r1
10464  00009380  23bd0008	addi	r29,r29,#8
10465  00009384  23bdfff8	addi	r29,r29,#-8
10466  00009388  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10467  0000938c  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10468  00009390  8c210000	lw	r1,(r1)
10469  00009394  afa10000	sw	(r29),r1
10470  00009398  8fc1ffec	lw	r1,-20(r30)
10471  0000939c  3c070001	lhi	r7,#1
10472  000093a0  24e70000	addui	r7,r7,#0
10473  000093a4  00270820	add	r1,r1,r7
10474  000093a8  afa10004	sw	4(r29),r1
10475  000093ac  0fffb74c	jal	_ProcessSetResult
10476  000093b0  54000000	nop; not filled.
10477  000093b4  23bdfff8	addi	r29,r29,#-8
10478  000093b8  3c070001	lhi	r7,((LC6_LF8)>>16)&0xffff
10479  000093bc  24e72fc8	addui	r7,r7,(LC6_LF8)&0xffff
10480  000093c0  afa70000	sw	(r29),r7
10481  000093c4  8fc1ffe8	lw	r1,-24(r30)
10482  000093c8  afa10004	sw	4(r29),r1
10483  000093cc  8fc7ffec	lw	r7,-20(r30)
10484  000093d0  afa70008	sw	8(r29),r7
10485  000093d4  0c000dd0	jal	_printf
10486  000093d8  54000000	nop; not filled.
10487  000093dc  23bd0010	addi	r29,r29,#16
10488  000093e0  23bdfff8	addi	r29,r29,#-8
10489  000093e4  afa20000	sw	(r29),r2
10490  000093e8  0fff7e9c	jal	_SetIntrs
10491  000093ec  54000000	nop; not filled.
10492  000093f0  08000440	j	L151_LF8
10493  000093f4  54000000	nop; not filled.
10494  000093f8          	L107_LF8:
10495  000093f8  23bdfff8	addi	r29,r29,#-8
10496  000093fc  20070000	addi	r7,r0,#0
10497  00009400  afa70000	sw	(r29),r7
10498  00009404  0fff7e80	jal	_SetIntrs
10499  00009408  54000000	nop; not filled.
10500  0000940c  00011020	add	r2,r0,r1
10501  00009410  23bd0008	addi	r29,r29,#8
10502  00009414  23bdfff8	addi	r29,r29,#-8
10503  00009418  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10504  0000941c  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10505  00009420  8c210000	lw	r1,(r1)
10506  00009424  afa10000	sw	(r29),r1
10507  00009428  2007ffff	addi	r7,r0,#-1
10508  0000942c  afa70004	sw	4(r29),r7
10509  00009430  0fffb6c8	jal	_ProcessSetResult
10510  00009434  54000000	nop; not filled.
10511  00009438  23bd0008	addi	r29,r29,#8
10512  0000943c  23bdfff8	addi	r29,r29,#-8
10513  00009440  afa20000	sw	(r29),r2
10514  00009444  0fff7e40	jal	_SetIntrs
10515  00009448  54000000	nop; not filled.
10516  0000944c  080003e4	j	L151_LF8
10517  00009450  54000000	nop; not filled.
10518  00009454          	L110_LF8:
10519  00009454  23bdfff8	addi	r29,r29,#-8
10520  00009458  20070000	addi	r7,r0,#0
10521  0000945c  afa70000	sw	(r29),r7
10522  00009460  0fff7e24	jal	_SetIntrs
10523  00009464  54000000	nop; not filled.
10524  00009468  00011020	add	r2,r0,r1
10525  0000946c  23bd0008	addi	r29,r29,#8
10526  00009470  23bdfff8	addi	r29,r29,#-8
10527  00009474  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10528  00009478  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10529  0000947c  8c210000	lw	r1,(r1)
10530  00009480  afa10000	sw	(r29),r1
10531  00009484  2007ffff	addi	r7,r0,#-1
10532  00009488  afa70004	sw	4(r29),r7
10533  0000948c  0fffb66c	jal	_ProcessSetResult
10534  00009490  54000000	nop; not filled.
10535  00009494  23bd0008	addi	r29,r29,#8
10536  00009498  23bdfff8	addi	r29,r29,#-8
10537  0000949c  afa20000	sw	(r29),r2
10538  000094a0  0fff7de4	jal	_SetIntrs
10539  000094a4  54000000	nop; not filled.
10540  000094a8  08000388	j	L151_LF8
10541  000094ac  54000000	nop; not filled.
10542  000094b0          	L113_LF8:
10543  000094b0  23bdfff8	addi	r29,r29,#-8
10544  000094b4  20070000	addi	r7,r0,#0
10545  000094b8  afa70000	sw	(r29),r7
10546  000094bc  0fff7dc8	jal	_SetIntrs
10547  000094c0  54000000	nop; not filled.
10548  000094c4  00011020	add	r2,r0,r1
10549  000094c8  23bd0008	addi	r29,r29,#8
10550  000094cc  23bdfff8	addi	r29,r29,#-8
10551  000094d0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10552  000094d4  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10553  000094d8  8c210000	lw	r1,(r1)
10554  000094dc  afa10000	sw	(r29),r1
10555  000094e0  2007ffff	addi	r7,r0,#-1
10556  000094e4  afa70004	sw	4(r29),r7
10557  000094e8  0fffb610	jal	_ProcessSetResult
10558  000094ec  54000000	nop; not filled.
10559  000094f0  23bd0008	addi	r29,r29,#8
10560  000094f4  23bdfff8	addi	r29,r29,#-8
10561  000094f8  afa20000	sw	(r29),r2
10562  000094fc  0fff7d88	jal	_SetIntrs
10563  00009500  54000000	nop; not filled.
10564  00009504  0800032c	j	L151_LF8
10565  00009508  54000000	nop; not filled.
10566  0000950c          	L116_LF8:
10567  0000950c  23bdfff8	addi	r29,r29,#-8
10568  00009510  20070000	addi	r7,r0,#0
10569  00009514  afa70000	sw	(r29),r7
10570  00009518  0fff7d6c	jal	_SetIntrs
10571  0000951c  54000000	nop; not filled.
10572  00009520  00011020	add	r2,r0,r1
10573  00009524  23bd0008	addi	r29,r29,#8
10574  00009528  23bdfff8	addi	r29,r29,#-8
10575  0000952c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10576  00009530  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10577  00009534  8c210000	lw	r1,(r1)
10578  00009538  afa10000	sw	(r29),r1
10579  0000953c  2007ffff	addi	r7,r0,#-1
10580  00009540  afa70004	sw	4(r29),r7
10581  00009544  0fffb5b4	jal	_ProcessSetResult
10582  00009548  54000000	nop; not filled.
10583  0000954c  23bd0008	addi	r29,r29,#8
10584  00009550  23bdfff8	addi	r29,r29,#-8
10585  00009554  afa20000	sw	(r29),r2
10586  00009558  0fff7d2c	jal	_SetIntrs
10587  0000955c  54000000	nop; not filled.
10588  00009560  080002d0	j	L151_LF8
10589  00009564  54000000	nop; not filled.
10590  00009568          	L119_LF8:
10591  00009568  23bdfff8	addi	r29,r29,#-8
10592  0000956c  20070000	addi	r7,r0,#0
10593  00009570  afa70000	sw	(r29),r7
10594  00009574  0fff7d10	jal	_SetIntrs
10595  00009578  54000000	nop; not filled.
10596  0000957c  00011020	add	r2,r0,r1
10597  00009580  23bd0008	addi	r29,r29,#8
10598  00009584  23bdfff8	addi	r29,r29,#-8
10599  00009588  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10600  0000958c  2421fe10	addui	r1,r1,(_currentPCB)&0xffff
10601  00009590  8c210000	lw	r1,(r1)
10602  00009594  afa10000	sw	(r29),r1
10603  00009598  2007ffff	addi	r7,r0,#-1
10604  0000959c  afa70004	sw	4(r29),r7
10605  000095a0  0fffb558	jal	_ProcessSetResult
10606  000095a4  54000000	nop; not filled.
10607  000095a8  23bd0008	addi	r29,r29,#8
10608  000095ac  23bdfff8	addi	r29,r29,#-8
10609  000095b0  afa20000	sw	(r29),r2
10610  000095b4  0fff7cd0	jal	_SetIntrs
10611  000095b8  54000000	nop; not filled.
10612  000095bc  08000274	j	L151_LF8
10613  000095c0  54000000	nop; not filled.
10614  000095c4          	L122_LF8:
10615  000095c4  23bdfff8	addi	r29,r29,#-8
10616  000095c8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10617  000095cc  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10618  000095d0  afa20000	sw	(r29),r2
10619  000095d4  20070074	addi	r7,r0,#116
10620  000095d8  afa70004	sw	4(r29),r7
10621  000095dc  0fffa838	jal	_dindex
10622  000095e0  54000000	nop; not filled.
10623  000095e4  23bd0008	addi	r29,r29,#8
10624  000095e8  64210000	snei	r1,r1,#0
10625  000095ec  1420002c	bnez	r1,L124_LF8
10626  000095f0  54000000	nop; not filled.
10627  000095f4  23bdfff8	addi	r29,r29,#-8
10628  000095f8  afa20000	sw	(r29),r2
10629  000095fc  2007002b	addi	r7,r0,#43
10630  00009600  afa70004	sw	4(r29),r7
10631  00009604  0fffa810	jal	_dindex
10632  00009608  54000000	nop; not filled.
10633  0000960c  23bd0008	addi	r29,r29,#8
10634  00009610  64210000	snei	r1,r1,#0
10635  00009614  10200220	beqz	r1,L131_LF8
10636  00009618  54000000	nop; not filled.
10637  0000961c          	L124_LF8:
10638  0000961c  23bdfff8	addi	r29,r29,#-8
10639  00009620  3c070001	lhi	r7,((LC7_LF8)>>16)&0xffff
10640  00009624  24e72ff4	addui	r7,r7,(LC7_LF8)&0xffff
10641  00009628  afa70000	sw	(r29),r7
10642  0000962c  0c000b78	jal	_printf
10643  00009630  54000000	nop; not filled.
10644  00009634  080001fc	j	L151_LF8
10645  00009638  54000000	nop; not filled.
10646  0000963c          	L125_LF8:
10647  0000963c  23bdfff8	addi	r29,r29,#-8
10648  00009640  3c070001	lhi	r7,((LC8_LF8)>>16)&0xffff
10649  00009644  24e73010	addui	r7,r7,(LC8_LF8)&0xffff
10650  00009648  080001d0	j	L152_LF8
10651  0000964c  54000000	nop; not filled.
10652  00009650          	L85_LF8:
10653  00009650  60410003	seqi	r1,r2,#3
10654  00009654  14200148	bnez	r1,L141_LF8
10655  00009658  54000000	nop; not filled.
10656  0000965c  6c410003	sgtui	r1,r2,#3
10657  00009660  14200024	bnez	r1,L147_LF8
10658  00009664  54000000	nop; not filled.
10659  00009668  60410001	seqi	r1,r2,#1
10660  0000966c  14200158	bnez	r1,L143_LF8
10661  00009670  54000000	nop; not filled.
10662  00009674  60410002	seqi	r1,r2,#2
10663  00009678  10200194	beqz	r1,L145_LF8
10664  0000967c  54000000	nop; not filled.
10665  00009680  08000130	j	L142_LF8
10666  00009684  54000000	nop; not filled.
10667  00009688          	L147_LF8:
10668  00009688  60410040	seqi	r1,r2,#64
10669  0000968c  14200038	bnez	r1,L133_LF8
10670  00009690  54000000	nop; not filled.
10671  00009694  6c410040	sgtui	r1,r2,#64
10672  00009698  14200018	bnez	r1,L148_LF8
10673  0000969c  54000000	nop; not filled.
10674  000096a0  60410020	seqi	r1,r2,#32
10675  000096a4  10200168	beqz	r1,L145_LF8
10676  000096a8  54000000	nop; not filled.
10677  000096ac  0800012c	j	L144_LF8
10678  000096b0  54000000	nop; not filled.
10679  000096b4          	L148_LF8:
10680  000096b4  60410048	seqi	r1,r2,#72
10681  000096b8  10200154	beqz	r1,L145_LF8
10682  000096bc  54000000	nop; not filled.
10683  000096c0  08000088	j	L136_LF8
10684  000096c4  54000000	nop; not filled.
10685  000096c8          	L133_LF8:
10686  000096c8  23bdfff8	addi	r29,r29,#-8
10687  000096cc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10688  000096d0  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10689  000096d4  afa20000	sw	(r29),r2
10690  000096d8  20070074	addi	r7,r0,#116
10691  000096dc  afa70004	sw	4(r29),r7
10692  000096e0  0fffa734	jal	_dindex
10693  000096e4  54000000	nop; not filled.
10694  000096e8  23bd0008	addi	r29,r29,#8
10695  000096ec  64210000	snei	r1,r1,#0
10696  000096f0  1420002c	bnez	r1,L135_LF8
10697  000096f4  54000000	nop; not filled.
10698  000096f8  23bdfff8	addi	r29,r29,#-8
10699  000096fc  afa20000	sw	(r29),r2
10700  00009700  2007002b	addi	r7,r0,#43
10701  00009704  afa70004	sw	4(r29),r7
10702  00009708  0fffa70c	jal	_dindex
10703  0000970c  54000000	nop; not filled.
10704  00009710  23bd0008	addi	r29,r29,#8
10705  00009714  64210000	snei	r1,r1,#0
10706  00009718  10200020	beqz	r1,L134_LF8
10707  0000971c  54000000	nop; not filled.
10708  00009720          	L135_LF8:
10709  00009720  23bdfff8	addi	r29,r29,#-8
10710  00009724  3c070001	lhi	r7,((LC9_LF8)>>16)&0xffff
10711  00009728  24e7303c	addui	r7,r7,(LC9_LF8)&0xffff
10712  0000972c          	L154_LF8:
10713  0000972c  afa70000	sw	(r29),r7
10714  00009730  0c000a74	jal	_printf
10715  00009734  54000000	nop; not filled.
10716  00009738  23bd0008	addi	r29,r29,#8
10717  0000973c          	L134_LF8:
10718  0000973c  0fffb3f0	jal	_ProcessSchedule
10719  00009740  54000000	nop; not filled.
10720  00009744  080000f0	j	L131_LF8
10721  00009748  54000000	nop; not filled.
10722  0000974c          	L136_LF8:
10723  0000974c  3c04fff0	lhi	r4,#-16
10724  00009750  248401a0	addui	r4,r4,#416
10725  00009754  3c03fff0	lhi	r3,#-16
10726  00009758  24630180	addui	r3,r3,#384
10727  0000975c          	L137_LF8:
10728  0000975c  8c820000	lw	r2,(r4)
10729  00009760  8c610000	lw	r1,(r3)
10730  00009764  23bdfff0	addi	r29,r29,#-16
10731  00009768  3c070001	lhi	r7,((LC10_LF8)>>16)&0xffff
10732  0000976c  24e73054	addui	r7,r7,(LC10_LF8)&0xffff
10733  00009770  afa70000	sw	(r29),r7
10734  00009774  afa10004	sw	4(r29),r1
10735  00009778  afa10008	sw	8(r29),r1
10736  0000977c  afa2000c	sw	12(r29),r2
10737  00009780  0c000a24	jal	_printf
10738  00009784  54000000	nop; not filled.
10739  00009788  23bd0010	addi	r29,r29,#16
10740  0000978c  6c410001	sgti	r1,r2,#1
10741  00009790  102000a4	beqz	r1,L131_LF8
10742  00009794  54000000	nop; not filled.
10743  00009798  0bffffc0	j	L137_LF8
10744  0000979c  54000000	nop; not filled.
10745  000097a0          	L141_LF8:
10746  000097a0  23bdfff0	addi	r29,r29,#-16
10747  000097a4  3c070001	lhi	r7,((LC11_LF8)>>16)&0xffff
10748  000097a8  24e7308c	addui	r7,r7,(LC11_LF8)&0xffff
10749  000097ac  08000038	j	L153_LF8
10750  000097b0  54000000	nop; not filled.
10751  000097b4          	L142_LF8:
10752  000097b4  23bdfff0	addi	r29,r29,#-16
10753  000097b8  3c070001	lhi	r7,((LC12_LF8)>>16)&0xffff
10754  000097bc  24e730c0	addui	r7,r7,(LC12_LF8)&0xffff
10755  000097c0  08000024	j	L153_LF8
10756  000097c4  54000000	nop; not filled.
10757  000097c8          	L143_LF8:
10758  000097c8  23bdfff0	addi	r29,r29,#-16
10759  000097cc  3c070001	lhi	r7,((LC13_LF8)>>16)&0xffff
10760  000097d0  24e730f8	addui	r7,r7,(LC13_LF8)&0xffff
10761  000097d4  08000010	j	L153_LF8
10762  000097d8  54000000	nop; not filled.
10763  000097dc          	L144_LF8:
10764  000097dc  23bdfff0	addi	r29,r29,#-16
10765  000097e0  3c070001	lhi	r7,((LC14_LF8)>>16)&0xffff
10766  000097e4  24e73134	addui	r7,r7,(LC14_LF8)&0xffff
10767  000097e8          	L153_LF8:
10768  000097e8  afa70000	sw	(r29),r7
10769  000097ec  afa50004	sw	4(r29),r5
10770  000097f0  afa40008	sw	8(r29),r4
10771  000097f4  0c0009b0	jal	_printf
10772  000097f8  54000000	nop; not filled.
10773  000097fc  0c000990	jal	_exitsim
10774  00009800  54000000	nop; not filled.
10775  00009804  23bd0010	addi	r29,r29,#16
10776  00009808  0800002c	j	L131_LF8
10777  0000980c  54000000	nop; not filled.
10778  00009810          	L145_LF8:
10779  00009810  23bdfff8	addi	r29,r29,#-8
10780  00009814  3c070001	lhi	r7,((LC15_LF8)>>16)&0xffff
10781  00009818  24e73164	addui	r7,r7,(LC15_LF8)&0xffff
10782  0000981c          	L152_LF8:
10783  0000981c  afa70000	sw	(r29),r7
10784  00009820  afa20004	sw	4(r29),r2
10785  00009824  0c000980	jal	_printf
10786  00009828  54000000	nop; not filled.
10787  0000982c  0c000960	jal	_exitsim
10788  00009830  54000000	nop; not filled.
10789  00009834          	L151_LF8:
10790  00009834  23bd0008	addi	r29,r29,#8
10791  00009838          	L131_LF8:
10792  00009838  23bdfff8	addi	r29,r29,#-8
10793  0000983c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10794  00009840  2442fd46	addui	r2,r2,(_debugstr)&0xffff
10795  00009844  afa20000	sw	(r29),r2
10796  00009848  20070074	addi	r7,r0,#116
10797  0000984c  afa70004	sw	4(r29),r7
10798  00009850  0fffa5c4	jal	_dindex
10799  00009854  54000000	nop; not filled.
10800  00009858  23bd0008	addi	r29,r29,#8
10801  0000985c  64210000	snei	r1,r1,#0
10802  00009860  1420002c	bnez	r1,L150_LF8
10803  00009864  54000000	nop; not filled.
10804  00009868  23bdfff8	addi	r29,r29,#-8
10805  0000986c  afa20000	sw	(r29),r2
10806  00009870  2007002b	addi	r7,r0,#43
10807  00009874  afa70004	sw	4(r29),r7
10808  00009878  0fffa59c	jal	_dindex
10809  0000987c  54000000	nop; not filled.
10810  00009880  23bd0008	addi	r29,r29,#8
10811  00009884  64210000	snei	r1,r1,#0
10812  00009888  10200020	beqz	r1,L149_LF8
10813  0000988c  54000000	nop; not filled.
10814  00009890          	L150_LF8:
10815  00009890  23bdfff8	addi	r29,r29,#-8
10816  00009894  3c070001	lhi	r7,((LC16_LF8)>>16)&0xffff
10817  00009898  24e7319c	addui	r7,r7,(LC16_LF8)&0xffff
10818  0000989c  afa70000	sw	(r29),r7
10819  000098a0  0c000904	jal	_printf
10820  000098a4  54000000	nop; not filled.
10821  000098a8  23bd0008	addi	r29,r29,#8
10822  000098ac          	L149_LF8:
10823  000098ac  0fff78b8	jal	_intrreturn
10824  000098b0  54000000	nop; not filled.
10825  000098b4  8fa20000	lw	r2,0(r29)
10826  000098b8  8fa30004	lw	r3,4(r29)
10827  000098bc  8fa40008	lw	r4,8(r29)
10828  000098c0  8fa5000c	lw	r5,12(r29)
10829  000098c4  8fa60010	lw	r6,16(r29)
10830  000098c8  8fa70014	lw	r7,20(r29)
10831  000098cc  8fdffff8	lw	r31,-8(r30)
10832  000098d0  001ee820	add	r29,r0,r30
10833  000098d4  8fdefffc	lw	r30,-4(r30)
10834  000098d8  4be00000	jr	r31
10835  000098dc  54000000	nop
10836  000098e0          	.endproc _dointerrupt
10837                      ; Compiled by GCC
10839  000098e0          	.align 2
10840  000098e0          	.proc _isspace
10841  000098e0          	.global _isspace
10842  000098e0          	_isspace:
10843                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
10844  000098e0  afbefffc	sw	-4(r29),r30; push fp
10845  000098e4  001df020	add	r30,r0,r29; fp = sp
10846  000098e8  afbffff8	sw	-8(r29),r31; push ret addr
10847  000098ec  2fbd0010	subui	r29,r29,#16; alloc local storage
10848  000098f0  afa20000	sw	0(r29),r2
10849  000098f4  83c20003	lb	r2,3(r30)
10850  000098f8  201f0000	addi	r31,r0,#0
10851  000098fc  304100ff	andi	r1,r2,#0x00ff
10852  00009900  60210020	seqi	r1,r1,#32
10853  00009904  14200018	bnez	r1,L6_LF9
10854  00009908  54000000	nop; not filled.
10855  0000990c  2041fff7	addi	r1,r2,#-9
10856  00009910  302100ff	andi	r1,r1,#0x00ff
10857  00009914  70210001	sleui	r1,r1,#1
10858  00009918  10200008	beqz	r1,L5_LF9
10859  0000991c  54000000	nop; not filled.
10860  00009920          	L6_LF9:
10861  00009920  201f0001	addi	r31,r0,#1
10862  00009924          	L5_LF9:
10863  00009924  001f0820	add	r1,r0,r31
10864  00009928  8fa20000	lw	r2,0(r29)
10865  0000992c  8fdffff8	lw	r31,-8(r30)
10866  00009930  001ee820	add	r29,r0,r30
10867  00009934  8fdefffc	lw	r30,-4(r30)
10868  00009938  4be00000	jr	r31
10869  0000993c  54000000	nop
10870  00009940          	.endproc _isspace
10871  00009940          	.align 2
10872  00009940          	.proc _isxdigit
10873  00009940          	.global _isxdigit
10874  00009940          	_isxdigit:
10875                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
10876  00009940  afbefffc	sw	-4(r29),r30; push fp
10877  00009944  001df020	add	r30,r0,r29; fp = sp
10878  00009948  afbffff8	sw	-8(r29),r31; push ret addr
10879  0000994c  2fbd0010	subui	r29,r29,#16; alloc local storage
10880  00009950  afa20000	sw	0(r29),r2
10881  00009954  83df0003	lb	r31,3(r30)
10882  00009958  20020000	addi	r2,r0,#0
10883  0000995c  23e1ffd0	addi	r1,r31,#-48
10884  00009960  302100ff	andi	r1,r1,#0x00ff
10885  00009964  70210009	sleui	r1,r1,#9
10886  00009968  14200028	bnez	r1,L12_LF9
10887  0000996c  54000000	nop; not filled.
10888  00009970  23e1ff9f	addi	r1,r31,#-97
10889  00009974  302100ff	andi	r1,r1,#0x00ff
10890  00009978  70210005	sleui	r1,r1,#5
10891  0000997c  14200014	bnez	r1,L12_LF9
10892  00009980  54000000	nop; not filled.
10893  00009984  33e100ff	andi	r1,r31,#0x00ff
10894  00009988  64210041	snei	r1,r1,#65
10895  0000998c  14200008	bnez	r1,L11_LF9
10896  00009990  54000000	nop; not filled.
10897  00009994          	L12_LF9:
10898  00009994  20020001	addi	r2,r0,#1
10899  00009998          	L11_LF9:
10900  00009998  00020820	add	r1,r0,r2
10901  0000999c  8fa20000	lw	r2,0(r29)
10902  000099a0  8fdffff8	lw	r31,-8(r30)
10903  000099a4  001ee820	add	r29,r0,r30
10904  000099a8  8fdefffc	lw	r30,-4(r30)
10905  000099ac  4be00000	jr	r31
10906  000099b0  54000000	nop
10907  000099b4          	.endproc _isxdigit
10908  000099b4          	.align 2
10909  000099b4          	.proc _DisableIntrs
10910  000099b4          	.global _DisableIntrs
10911  000099b4          	_DisableIntrs:
10912                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
10913  000099b4  afbefffc	sw	-4(r29),r30; push fp
10914  000099b8  001df020	add	r30,r0,r29; fp = sp
10915  000099bc  afbffff8	sw	-8(r29),r31; push ret addr
10916  000099c0  2fbd0010	subui	r29,r29,#16; alloc local storage
10917  000099c4  afa20000	sw	0(r29),r2
10918  000099c8  23bdfff8	addi	r29,r29,#-8
10919  000099cc  2002000f	addi	r2,r0,#15
10920  000099d0  afa20000	sw	(r29),r2
10921  000099d4  0fff78b0	jal	_SetIntrs
10922  000099d8  54000000	nop; not filled.
10923  000099dc  23bd0008	addi	r29,r29,#8
10924  000099e0  8fa20000	lw	r2,0(r29)
10925  000099e4  8fdffff8	lw	r31,-8(r30)
10926  000099e8  001ee820	add	r29,r0,r30
10927  000099ec  8fdefffc	lw	r30,-4(r30)
10928  000099f0  4be00000	jr	r31
10929  000099f4  54000000	nop
10930  000099f8          	.endproc _DisableIntrs
10931  000099f8          	.align 2
10932  000099f8          	.proc _EnableIntrs
10933  000099f8          	.global _EnableIntrs
10934  000099f8          	_EnableIntrs:
10935                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
10936  000099f8  afbefffc	sw	-4(r29),r30; push fp
10937  000099fc  001df020	add	r30,r0,r29; fp = sp
10938  00009a00  afbffff8	sw	-8(r29),r31; push ret addr
10939  00009a04  2fbd0010	subui	r29,r29,#16; alloc local storage
10940  00009a08  afa20000	sw	0(r29),r2
10941  00009a0c  23bdfff8	addi	r29,r29,#-8
10942  00009a10  20020000	addi	r2,r0,#0
10943  00009a14  afa20000	sw	(r29),r2
10944  00009a18  0fff786c	jal	_SetIntrs
10945  00009a1c  54000000	nop; not filled.
10946  00009a20  23bd0008	addi	r29,r29,#8
10947  00009a24  8fa20000	lw	r2,0(r29)
10948  00009a28  8fdffff8	lw	r31,-8(r30)
10949  00009a2c  001ee820	add	r29,r0,r30
10950  00009a30  8fdefffc	lw	r30,-4(r30)
10951  00009a34  4be00000	jr	r31
10952  00009a38  54000000	nop
10953  00009a3c          	.endproc _EnableIntrs
10954  00009a3c          	.align 2
10955  00009a3c          	.proc _RestoreIntrs
10956  00009a3c          	.global _RestoreIntrs
10957  00009a3c          	_RestoreIntrs:
10958                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
10959  00009a3c  afbefffc	sw	-4(r29),r30; push fp
10960  00009a40  001df020	add	r30,r0,r29; fp = sp
10961  00009a44  afbffff8	sw	-8(r29),r31; push ret addr
10962  00009a48  2fbd0010	subui	r29,r29,#16; alloc local storage
10963  00009a4c  afa20000	sw	0(r29),r2
10964  00009a50  23bdfff8	addi	r29,r29,#-8
10965  00009a54  8fc20000	lw	r2,(r30)
10966  00009a58  afa20000	sw	(r29),r2
10967  00009a5c  0fff7828	jal	_SetIntrs
10968  00009a60  54000000	nop; not filled.
10969  00009a64  23bd0008	addi	r29,r29,#8
10970  00009a68  8fa20000	lw	r2,0(r29)
10971  00009a6c  8fdffff8	lw	r31,-8(r30)
10972  00009a70  001ee820	add	r29,r0,r30
10973  00009a74  8fdefffc	lw	r30,-4(r30)
10974  00009a78  4be00000	jr	r31
10975  00009a7c  54000000	nop
10976  00009a80          	.endproc _RestoreIntrs
10977  00009a80          	.align 2
10978  00009a80          	.proc _QueueLinkInit
10979  00009a80          	.global _QueueLinkInit
10980  00009a80          	_QueueLinkInit:
10981                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
10982  00009a80  afbefffc	sw	-4(r29),r30; push fp
10983  00009a84  001df020	add	r30,r0,r29; fp = sp
10984  00009a88  afbffff8	sw	-8(r29),r31; push ret addr
10985  00009a8c  2fbd0010	subui	r29,r29,#16; alloc local storage
10986  00009a90  afa20000	sw	0(r29),r2
10987  00009a94  8fc10000	lw	r1,(r30)
10988  00009a98  8fc20004	lw	r2,4(r30)
10989  00009a9c  201f0000	addi	r31,r0,#0
10990  00009aa0  ac3f0000	sw	(r1),r31
10991  00009aa4  ac22000c	sw	12(r1),r2
10992  00009aa8  8fa20000	lw	r2,0(r29)
10993  00009aac  8fdffff8	lw	r31,-8(r30)
10994  00009ab0  001ee820	add	r29,r0,r30
10995  00009ab4  8fdefffc	lw	r30,-4(r30)
10996  00009ab8  4be00000	jr	r31
10997  00009abc  54000000	nop
10998  00009ac0          	.endproc _QueueLinkInit
10999  00009ac0          	.align 2
11000  00009ac0          	.proc _QueueNext
11001  00009ac0          	.global _QueueNext
11002  00009ac0          	_QueueNext:
11003                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
11004  00009ac0  afbefffc	sw	-4(r29),r30; push fp
11005  00009ac4  001df020	add	r30,r0,r29; fp = sp
11006  00009ac8  afbffff8	sw	-8(r29),r31; push ret addr
11007  00009acc  2fbd0008	subui	r29,r29,#8; alloc local storage
11008  00009ad0  8fc10000	lw	r1,(r30)
11009  00009ad4  8c210000	lw	r1,(r1)
11010  00009ad8  8fdffff8	lw	r31,-8(r30)
11011  00009adc  001ee820	add	r29,r0,r30
11012  00009ae0  8fdefffc	lw	r30,-4(r30)
11013  00009ae4  4be00000	jr	r31
11014  00009ae8  54000000	nop
11015  00009aec          	.endproc _QueueNext
11016  00009aec          	.align 2
11017  00009aec          	.proc _QueuePrev
11018  00009aec          	.global _QueuePrev
11019  00009aec          	_QueuePrev:
11020                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
11021  00009aec  afbefffc	sw	-4(r29),r30; push fp
11022  00009af0  001df020	add	r30,r0,r29; fp = sp
11023  00009af4  afbffff8	sw	-8(r29),r31; push ret addr
11024  00009af8  2fbd0008	subui	r29,r29,#8; alloc local storage
11025  00009afc  8fc10000	lw	r1,(r30)
11026  00009b00  8c210004	lw	r1,4(r1)
11027  00009b04  8fdffff8	lw	r31,-8(r30)
11028  00009b08  001ee820	add	r29,r0,r30
11029  00009b0c  8fdefffc	lw	r30,-4(r30)
11030  00009b10  4be00000	jr	r31
11031  00009b14  54000000	nop
11032  00009b18          	.endproc _QueuePrev
11033  00009b18          	.align 2
11034  00009b18          	.proc _QueueFirst
11035  00009b18          	.global _QueueFirst
11036  00009b18          	_QueueFirst:
11037                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
11038  00009b18  afbefffc	sw	-4(r29),r30; push fp
11039  00009b1c  001df020	add	r30,r0,r29; fp = sp
11040  00009b20  afbffff8	sw	-8(r29),r31; push ret addr
11041  00009b24  2fbd0008	subui	r29,r29,#8; alloc local storage
11042  00009b28  8fc10000	lw	r1,(r30)
11043  00009b2c  8c210000	lw	r1,(r1)
11044  00009b30  8fdffff8	lw	r31,-8(r30)
11045  00009b34  001ee820	add	r29,r0,r30
11046  00009b38  8fdefffc	lw	r30,-4(r30)
11047  00009b3c  4be00000	jr	r31
11048  00009b40  54000000	nop
11049  00009b44          	.endproc _QueueFirst
11050  00009b44          	.align 2
11051  00009b44          	.proc _QueueLast
11052  00009b44          	.global _QueueLast
11053  00009b44          	_QueueLast:
11054                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
11055  00009b44  afbefffc	sw	-4(r29),r30; push fp
11056  00009b48  001df020	add	r30,r0,r29; fp = sp
11057  00009b4c  afbffff8	sw	-8(r29),r31; push ret addr
11058  00009b50  2fbd0008	subui	r29,r29,#8; alloc local storage
11059  00009b54  8fc10000	lw	r1,(r30)
11060  00009b58  8c210004	lw	r1,4(r1)
11061  00009b5c  8fdffff8	lw	r31,-8(r30)
11062  00009b60  001ee820	add	r29,r0,r30
11063  00009b64  8fdefffc	lw	r30,-4(r30)
11064  00009b68  4be00000	jr	r31
11065  00009b6c  54000000	nop
11066  00009b70          	.endproc _QueueLast
11067  00009b70          	.align 2
11068  00009b70          	.proc _QueueInsertAfter
11069  00009b70          	.global _QueueInsertAfter
11070  00009b70          	_QueueInsertAfter:
11071                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
11072  00009b70  afbefffc	sw	-4(r29),r30; push fp
11073  00009b74  001df020	add	r30,r0,r29; fp = sp
11074  00009b78  afbffff8	sw	-8(r29),r31; push ret addr
11075  00009b7c  2fbd0010	subui	r29,r29,#16; alloc local storage
11076  00009b80  afa20000	sw	0(r29),r2
11077  00009b84  afa30004	sw	4(r29),r3
11078  00009b88  8fc30000	lw	r3,(r30)
11079  00009b8c  8fc20004	lw	r2,4(r30)
11080  00009b90  8fc10008	lw	r1,8(r30)
11081  00009b94  ac230008	sw	8(r1),r3
11082  00009b98  ac220004	sw	4(r1),r2
11083  00009b9c  8c5f0000	lw	r31,(r2)
11084  00009ba0  ac3f0000	sw	(r1),r31
11085  00009ba4  ac410000	sw	(r2),r1
11086  00009ba8  8c220000	lw	r2,(r1)
11087  00009bac  ac410004	sw	4(r2),r1
11088  00009bb0  8c610008	lw	r1,8(r3)
11089  00009bb4  20210001	addi	r1,r1,#1
11090  00009bb8  ac610008	sw	8(r3),r1
11091  00009bbc  8fa20000	lw	r2,0(r29)
11092  00009bc0  8fa30004	lw	r3,4(r29)
11093  00009bc4  8fdffff8	lw	r31,-8(r30)
11094  00009bc8  001ee820	add	r29,r0,r30
11095  00009bcc  8fdefffc	lw	r30,-4(r30)
11096  00009bd0  4be00000	jr	r31
11097  00009bd4  54000000	nop
11098  00009bd8          	.endproc _QueueInsertAfter
11099  00009bd8          	.align 2
11100  00009bd8          	.proc _QueueInsertFirst
11101  00009bd8          	.global _QueueInsertFirst
11102  00009bd8          	_QueueInsertFirst:
11103                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
11104  00009bd8  afbefffc	sw	-4(r29),r30; push fp
11105  00009bdc  001df020	add	r30,r0,r29; fp = sp
11106  00009be0  afbffff8	sw	-8(r29),r31; push ret addr
11107  00009be4  2fbd0010	subui	r29,r29,#16; alloc local storage
11108  00009be8  afa20000	sw	0(r29),r2
11109  00009bec  afa30004	sw	4(r29),r3
11110  00009bf0  8fc30000	lw	r3,(r30)
11111  00009bf4  8fc10004	lw	r1,4(r30)
11112  00009bf8  ac230008	sw	8(r1),r3
11113  00009bfc  ac230004	sw	4(r1),r3
11114  00009c00  8c7f0000	lw	r31,(r3)
11115  00009c04  ac3f0000	sw	(r1),r31
11116  00009c08  ac610000	sw	(r3),r1
11117  00009c0c  8c220000	lw	r2,(r1)
11118  00009c10  ac410004	sw	4(r2),r1
11119  00009c14  8c610008	lw	r1,8(r3)
11120  00009c18  20210001	addi	r1,r1,#1
11121  00009c1c  ac610008	sw	8(r3),r1
11122  00009c20  8fa20000	lw	r2,0(r29)
11123  00009c24  8fa30004	lw	r3,4(r29)
11124  00009c28  8fdffff8	lw	r31,-8(r30)
11125  00009c2c  001ee820	add	r29,r0,r30
11126  00009c30  8fdefffc	lw	r30,-4(r30)
11127  00009c34  4be00000	jr	r31
11128  00009c38  54000000	nop
11129  00009c3c          	.endproc _QueueInsertFirst
11130  00009c3c          	.align 2
11131  00009c3c          	.proc _QueueInsertLast
11132  00009c3c          	.global _QueueInsertLast
11133  00009c3c          	_QueueInsertLast:
11134                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
11135  00009c3c  afbefffc	sw	-4(r29),r30; push fp
11136  00009c40  001df020	add	r30,r0,r29; fp = sp
11137  00009c44  afbffff8	sw	-8(r29),r31; push ret addr
11138  00009c48  2fbd0010	subui	r29,r29,#16; alloc local storage
11139  00009c4c  afa20000	sw	0(r29),r2
11140  00009c50  afa30004	sw	4(r29),r3
11141  00009c54  8fc30000	lw	r3,(r30)
11142  00009c58  8fc10004	lw	r1,4(r30)
11143  00009c5c  8c620004	lw	r2,4(r3)
11144  00009c60  ac230008	sw	8(r1),r3
11145  00009c64  ac220004	sw	4(r1),r2
11146  00009c68  8c5f0000	lw	r31,(r2)
11147  00009c6c  ac3f0000	sw	(r1),r31
11148  00009c70  ac410000	sw	(r2),r1
11149  00009c74  8c220000	lw	r2,(r1)
11150  00009c78  ac410004	sw	4(r2),r1
11151  00009c7c  8c610008	lw	r1,8(r3)
11152  00009c80  20210001	addi	r1,r1,#1
11153  00009c84  ac610008	sw	8(r3),r1
11154  00009c88  8fa20000	lw	r2,0(r29)
11155  00009c8c  8fa30004	lw	r3,4(r29)
11156  00009c90  8fdffff8	lw	r31,-8(r30)
11157  00009c94  001ee820	add	r29,r0,r30
11158  00009c98  8fdefffc	lw	r30,-4(r30)
11159  00009c9c  4be00000	jr	r31
11160  00009ca0  54000000	nop
11161  00009ca4          	.endproc _QueueInsertLast
11162  00009ca4          	.align 2
11163  00009ca4          	.proc _QueueRemove
11164  00009ca4          	.global _QueueRemove
11165  00009ca4          	_QueueRemove:
11166                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
11167  00009ca4  afbefffc	sw	-4(r29),r30; push fp
11168  00009ca8  001df020	add	r30,r0,r29; fp = sp
11169  00009cac  afbffff8	sw	-8(r29),r31; push ret addr
11170  00009cb0  2fbd0010	subui	r29,r29,#16; alloc local storage
11171  00009cb4  afa20000	sw	0(r29),r2
11172  00009cb8  afa30004	sw	4(r29),r3
11173  00009cbc  8fdf0000	lw	r31,(r30)
11174  00009cc0  8fe10008	lw	r1,8(r31)
11175  00009cc4  8c210008	lw	r1,8(r1)
11176  00009cc8  6c210000	sgti	r1,r1,#0
11177  00009ccc  1020002c	beqz	r1,L44_LF9
11178  00009cd0  54000000	nop; not filled.
11179  00009cd4  8fe10004	lw	r1,4(r31)
11180  00009cd8  8fe30000	lw	r3,(r31)
11181  00009cdc  ac230000	sw	(r1),r3
11182  00009ce0  8fe10000	lw	r1,(r31)
11183  00009ce4  8fe30004	lw	r3,4(r31)
11184  00009ce8  ac230004	sw	4(r1),r3
11185  00009cec  8fe20008	lw	r2,8(r31)
11186  00009cf0  8c410008	lw	r1,8(r2)
11187  00009cf4  2021ffff	addi	r1,r1,#-1
11188  00009cf8  ac410008	sw	8(r2),r1
11189  00009cfc          	L44_LF9:
11190  00009cfc  20030000	addi	r3,r0,#0
11191  00009d00  afe30000	sw	(r31),r3
11192  00009d04  8fa20000	lw	r2,0(r29)
11193  00009d08  8fa30004	lw	r3,4(r29)
11194  00009d0c  8fdffff8	lw	r31,-8(r30)
11195  00009d10  001ee820	add	r29,r0,r30
11196  00009d14  8fdefffc	lw	r30,-4(r30)
11197  00009d18  4be00000	jr	r31
11198  00009d1c  54000000	nop
11199  00009d20          	.endproc _QueueRemove
11200  00009d20          	.align 2
11201  00009d20          	.proc _QueueLength
11202  00009d20          	.global _QueueLength
11203  00009d20          	_QueueLength:
11204                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
11205  00009d20  afbefffc	sw	-4(r29),r30; push fp
11206  00009d24  001df020	add	r30,r0,r29; fp = sp
11207  00009d28  afbffff8	sw	-8(r29),r31; push ret addr
11208  00009d2c  2fbd0008	subui	r29,r29,#8; alloc local storage
11209  00009d30  8fc10000	lw	r1,(r30)
11210  00009d34  8c210008	lw	r1,8(r1)
11211  00009d38  8fdffff8	lw	r31,-8(r30)
11212  00009d3c  001ee820	add	r29,r0,r30
11213  00009d40  8fdefffc	lw	r30,-4(r30)
11214  00009d44  4be00000	jr	r31
11215  00009d48  54000000	nop
11216  00009d4c          	.endproc _QueueLength
11217  00009d4c          	.align 2
11218  00009d4c          	.proc _QueueEmpty
11219  00009d4c          	.global _QueueEmpty
11220  00009d4c          	_QueueEmpty:
11221                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
11222  00009d4c  afbefffc	sw	-4(r29),r30; push fp
11223  00009d50  001df020	add	r30,r0,r29; fp = sp
11224  00009d54  afbffff8	sw	-8(r29),r31; push ret addr
11225  00009d58  2fbd0008	subui	r29,r29,#8; alloc local storage
11226  00009d5c  8fc10000	lw	r1,(r30)
11227  00009d60  8c210008	lw	r1,8(r1)
11228  00009d64  60210000	seqi	r1,r1,#0
11229  00009d68  8fdffff8	lw	r31,-8(r30)
11230  00009d6c  001ee820	add	r29,r0,r30
11231  00009d70  8fdefffc	lw	r30,-4(r30)
11232  00009d74  4be00000	jr	r31
11233  00009d78  54000000	nop
11234  00009d7c          	.endproc _QueueEmpty
11235  00009d7c          	.data
11236  000131bf          	.align 2
11237  000131c0          	LC0_LF9:
11238  000131c0  50726f63	.ascii "Process #\000"
11238  000131c4  65737320	
11238  000131c8  2300    	
11239  000131ca          	.align 2
11240  000131cc          	LC1_LF9:
11241  000131cc  52756e6e	.ascii "Running process %d (iteration %d)!\n\000"
11241  000131d0  696e6720	
11241  000131d4  70726f63	
11241  000131d8  65737320	
11241  000131dc  25642028	
11241  000131e0  69746572	
11241  000131e4  6174696f	
11241  000131e8  6e202564	
11241  000131ec  29210a00	
11242  000131f0          	.text
11243  00009d7c          	.align 2
11244  00009d7c          	.proc _doSomething_LF9
11245  00009d7c          	_doSomething_LF9:
11246                      ;  Function 'doSomething'; 80 bytes of locals, 7 regs to save.
11247  00009d7c  afbefffc	sw	-4(r29),r30; push fp
11248  00009d80  001df020	add	r30,r0,r29; fp = sp
11249  00009d84  afbffff8	sw	-8(r29),r31; push ret addr
11250  00009d88  2fbd0078	subui	r29,r29,#120; alloc local storage
11251  00009d8c  afa20000	sw	0(r29),r2
11252  00009d90  afa30004	sw	4(r29),r3
11253  00009d94  afa40008	sw	8(r29),r4
11254  00009d98  afa5000c	sw	12(r29),r5
11255  00009d9c  afa60010	sw	16(r29),r6
11256  00009da0  afa70014	sw	20(r29),r7
11257  00009da4  afa80018	sw	24(r29),r8
11258  00009da8  8fc60000	lw	r6,(r30)
11259  00009dac  2001000a	addi	r1,r0,#10
11260  00009db0  00c00035	movi2fp	f0,r6
11261  00009db4  00200835	movi2fp	f1,r1
11262  00009db8  0401000f	div	f0,f0,f1
11263  00009dbc  00001034	movfp2i	r2,f0
11264  00009dc0  50410002	slli	r1,r2,#0x2
11265  00009dc4  00220820	add	r1,r1,r2
11266  00009dc8  50210001	slli	r1,r1,#0x1
11267  00009dcc  00c13822	sub	r7,r6,r1
11268  00009dd0  70c10063	slei	r1,r6,#99
11269  00009dd4  102000d4	beqz	r1,L52_LF9
11270  00009dd8  54000000	nop; not filled.
11271  00009ddc  23bdfff8	addi	r29,r29,#-8
11272  00009de0  50e10004	slli	r1,r7,#0x4
11273  00009de4  3c080001	lhi	r8,((_mysems_LF9)>>16)&0xffff
11274  00009de8  25083264	addui	r8,r8,(_mysems_LF9)&0xffff
11275  00009dec  00280820	add	r1,r1,r8
11276  00009df0  afa10000	sw	(r29),r1
11277  00009df4  20080001	addi	r8,r0,#1
11278  00009df8  afa80004	sw	4(r29),r8
11279  00009dfc  0fffe2bc	jal	_SemInit
11280  00009e00  54000000	nop; not filled.
11281  00009e04  20030001	addi	r3,r0,#1
11282  00009e08  23bd0008	addi	r29,r29,#8
11283  00009e0c  23c4ffd0	addi	r4,r30,#-48
11284  00009e10  23c5ffa8	addi	r5,r30,#-88
11285  00009e14  00061020	add	r2,r0,r6
11286  00009e18          	L56_LF9:
11287  00009e18  23bdfff8	addi	r29,r29,#-8
11288  00009e1c  afa40000	sw	(r29),r4
11289  00009e20  3c080001	lhi	r8,((LC0_LF9)>>16)&0xffff
11290  00009e24  250831c0	addui	r8,r8,(LC0_LF9)&0xffff
11291  00009e28  afa80004	sw	4(r29),r8
11292  00009e2c  0fff9b28	jal	_dstrcpy
11293  00009e30  54000000	nop; not filled.
11294  00009e34  afa30000	sw	(r29),r3
11295  00009e38  afa50004	sw	4(r29),r5
11296  00009e3c  0fffa054	jal	_ditoa
11297  00009e40  54000000	nop; not filled.
11298  00009e44  afa40000	sw	(r29),r4
11299  00009e48  afa50004	sw	4(r29),r5
11300  00009e4c  0fff9bf8	jal	_dstrcat
11301  00009e50  54000000	nop; not filled.
11302  00009e54  23bdfff8	addi	r29,r29,#-8
11303  00009e58  3c080000	lhi	r8,((_doSomething_LF9)>>16)&0xffff
11304  00009e5c  25089d7c	addui	r8,r8,(_doSomething_LF9)&0xffff
11305  00009e60  afa80000	sw	(r29),r8
11306  00009e64  50410005	slli	r1,r2,#0x5
11307  00009e68  00220822	sub	r1,r1,r2
11308  00009e6c  50210002	slli	r1,r1,#0x2
11309  00009e70  00220820	add	r1,r1,r2
11310  00009e74  50210003	slli	r1,r1,#0x3
11311  00009e78  00260820	add	r1,r1,r6
11312  00009e7c  afa10004	sw	4(r29),r1
11313  00009e80  afa40008	sw	8(r29),r4
11314  00009e84  20080000	addi	r8,r0,#0
11315  00009e88  afa8000c	sw	12(r29),r8
11316  00009e8c  0fffb5f8	jal	_ProcessFork
11317  00009e90  54000000	nop; not filled.
11318  00009e94  23bd0010	addi	r29,r29,#16
11319  00009e98  00461020	add	r2,r2,r6
11320  00009e9c  20630001	addi	r3,r3,#1
11321  00009ea0  70610006	slei	r1,r3,#6
11322  00009ea4  1420ff70	bnez	r1,L56_LF9
11323  00009ea8  54000000	nop; not filled.
11324  00009eac          	L52_LF9:
11325  00009eac  23bdfff8	addi	r29,r29,#-8
11326  00009eb0  50e10004	slli	r1,r7,#0x4
11327  00009eb4  3c080001	lhi	r8,((_mysems_LF9)>>16)&0xffff
11328  00009eb8  25083264	addui	r8,r8,(_mysems_LF9)&0xffff
11329  00009ebc  00280820	add	r1,r1,r8
11330  00009ec0  afa10000	sw	(r29),r1
11331  00009ec4  0fffe248	jal	_SemWait
11332  00009ec8  54000000	nop; not filled.
11333  00009ecc  20030000	addi	r3,r0,#0
11334  00009ed0  23bd0008	addi	r29,r29,#8
11335  00009ed4  50c20001	slli	r2,r6,#0x1
11336  00009ed8  0062082a	slt	r1,r3,r2
11337  00009edc  10200070	beqz	r1,L59_LF9
11338  00009ee0  54000000	nop; not filled.
11339  00009ee4  200503e8	addi	r5,r0,#1000
11340  00009ee8  00022020	add	r4,r0,r2
11341  00009eec          	L61_LF9:
11342  00009eec  00600035	movi2fp	f0,r3
11343  00009ef0  00a00835	movi2fp	f1,r5
11344  00009ef4  0401000f	div	f0,f0,f1
11345  00009ef8  00001034	movfp2i	r2,f0
11346  00009efc  50410005	slli	r1,r2,#0x5
11347  00009f00  00220822	sub	r1,r1,r2
11348  00009f04  50210002	slli	r1,r1,#0x2
11349  00009f08  00220820	add	r1,r1,r2
11350  00009f0c  50210003	slli	r1,r1,#0x3
11351  00009f10  00610829	sne	r1,r3,r1
11352  00009f14  14200028	bnez	r1,L62_LF9
11353  00009f18  54000000	nop; not filled.
11354  00009f1c  23bdfff0	addi	r29,r29,#-16
11355  00009f20  3c080001	lhi	r8,((LC1_LF9)>>16)&0xffff
11356  00009f24  250831cc	addui	r8,r8,(LC1_LF9)&0xffff
11357  00009f28  afa80000	sw	(r29),r8
11358  00009f2c  afa60004	sw	4(r29),r6
11359  00009f30  afa30008	sw	8(r29),r3
11360  00009f34  0c000270	jal	_printf
11361  00009f38  54000000	nop; not filled.
11362  00009f3c  23bd0010	addi	r29,r29,#16
11363  00009f40          	L62_LF9:
11364  00009f40  20630001	addi	r3,r3,#1
11365  00009f44  0064082a	slt	r1,r3,r4
11366  00009f48  1420ffa0	bnez	r1,L61_LF9
11367  00009f4c  54000000	nop; not filled.
11368  00009f50          	L59_LF9:
11369  00009f50  23bdfff8	addi	r29,r29,#-8
11370  00009f54  50e10004	slli	r1,r7,#0x4
11371  00009f58  3c080001	lhi	r8,((_mysems_LF9)>>16)&0xffff
11372  00009f5c  25083264	addui	r8,r8,(_mysems_LF9)&0xffff
11373  00009f60  00280820	add	r1,r1,r8
11374  00009f64  afa10000	sw	(r29),r1
11375  00009f68  0fffe420	jal	_SemSignal
11376  00009f6c  54000000	nop; not filled.
11377  00009f70  23bd0008	addi	r29,r29,#8
11378  00009f74  8fa20000	lw	r2,0(r29)
11379  00009f78  8fa30004	lw	r3,4(r29)
11380  00009f7c  8fa40008	lw	r4,8(r29)
11381  00009f80  8fa5000c	lw	r5,12(r29)
11382  00009f84  8fa60010	lw	r6,16(r29)
11383  00009f88  8fa70014	lw	r7,20(r29)
11384  00009f8c  8fa80018	lw	r8,24(r29)
11385  00009f90  8fdffff8	lw	r31,-8(r30)
11386  00009f94  001ee820	add	r29,r0,r30
11387  00009f98  8fdefffc	lw	r30,-4(r30)
11388  00009f9c  4be00000	jr	r31
11389  00009fa0  54000000	nop
11390  00009fa4          	.endproc _doSomething_LF9
11391  00009fa4          	.data
11392  000131f0          	.align 2
11393  000131f0          	LC2_LF9:
11394  000131f0  63686173	.ascii "chasetail\000"
11394  000131f4  65746169	
11394  000131f8  6c00    	
11395  000131fa          	.align 2
11396  000131fc          	LC3_LF9:
11397  000131fc  43686173	.ascii "Chasing tail %d.\n\000"
11397  00013200  696e6720	
11397  00013204  7461696c	
11397  00013208  2025642e	
11397  0001320c  0a00    	
11398  0001320e          	.align 2
11399  00013210          	LC4_LF9:
11400  00013210  4f70656e	.ascii "Open of (%s,0x%x) returns 0x%x.\n\000"
11400  00013214  206f6620	
11400  00013218  2825732c	
11400  0001321c  30782578	
11400  00013220  29207265	
11400  00013224  7475726e	
11400  00013228  73203078	
11400  0001322c  25782e0a	
11400  00013230  00      	
11401  00013231          	.align 2
11402  00013234          	LC5_LF9:
11403  00013234  43686173	.ascii "ChaseTail\000"
11403  00013238  65546169	
11403  0001323c  6c00    	
11404  0001323e          	.text
11405  00009fa4          	.align 2
11406  00009fa4          	.proc _chaseTail_LF9
11407  00009fa4          	_chaseTail_LF9:
11408                      ;  Function 'chaseTail'; 0 bytes of locals, 4 regs to save.
11409  00009fa4  afbefffc	sw	-4(r29),r30; push fp
11410  00009fa8  001df020	add	r30,r0,r29; fp = sp
11411  00009fac  afbffff8	sw	-8(r29),r31; push ret addr
11412  00009fb0  2fbd0018	subui	r29,r29,#24; alloc local storage
11413  00009fb4  afa20000	sw	0(r29),r2
11414  00009fb8  afa30004	sw	4(r29),r3
11415  00009fbc  afa40008	sw	8(r29),r4
11416  00009fc0  afa5000c	sw	12(r29),r5
11417  00009fc4  8fc40000	lw	r4,(r30)
11418  00009fc8  3c030001	lhi	r3,((LC2_LF9)>>16)&0xffff
11419  00009fcc  246331f0	addui	r3,r3,(LC2_LF9)&0xffff
11420  00009fd0  23bdfff8	addi	r29,r29,#-8
11421  00009fd4  3c050001	lhi	r5,((LC3_LF9)>>16)&0xffff
11422  00009fd8  24a531fc	addui	r5,r5,(LC3_LF9)&0xffff
11423  00009fdc  afa50000	sw	(r29),r5
11424  00009fe0  afa40004	sw	4(r29),r4
11425  00009fe4  0c0001c0	jal	_printf
11426  00009fe8  54000000	nop; not filled.
11427  00009fec  afa30000	sw	(r29),r3
11428  00009ff0  20822000	addi	r2,r4,#8192
11429  00009ff4  afa20004	sw	4(r29),r2
11430  00009ff8  0c000158	jal	_Open
11431  00009ffc  54000000	nop; not filled.
11432  0000a000  23bdfff8	addi	r29,r29,#-8
11433  0000a004  3c050001	lhi	r5,((LC4_LF9)>>16)&0xffff
11434  0000a008  24a53210	addui	r5,r5,(LC4_LF9)&0xffff
11435  0000a00c  afa50000	sw	(r29),r5
11436  0000a010  afa30004	sw	4(r29),r3
11437  0000a014  afa20008	sw	8(r29),r2
11438  0000a018  afa1000c	sw	12(r29),r1
11439  0000a01c  0c000188	jal	_printf
11440  0000a020  54000000	nop; not filled.
11441  0000a024  23bd0010	addi	r29,r29,#16
11442  0000a028  70810027	slei	r1,r4,#39
11443  0000a02c  1020003c	beqz	r1,L67_LF9
11444  0000a030  54000000	nop; not filled.
11445  0000a034  23bdfff0	addi	r29,r29,#-16
11446  0000a038  3c050000	lhi	r5,((_chaseTail_LF9)>>16)&0xffff
11447  0000a03c  24a59fa4	addui	r5,r5,(_chaseTail_LF9)&0xffff
11448  0000a040  afa50000	sw	(r29),r5
11449  0000a044  20810001	addi	r1,r4,#1
11450  0000a048  afa10004	sw	4(r29),r1
11451  0000a04c  3c050001	lhi	r5,((LC5_LF9)>>16)&0xffff
11452  0000a050  24a53234	addui	r5,r5,(LC5_LF9)&0xffff
11453  0000a054  afa50008	sw	8(r29),r5
11454  0000a058  20050000	addi	r5,r0,#0
11455  0000a05c  afa5000c	sw	12(r29),r5
11456  0000a060  0fffb424	jal	_ProcessFork
11457  0000a064  54000000	nop; not filled.
11458  0000a068  23bd0010	addi	r29,r29,#16
11459  0000a06c          	L67_LF9:
11460  0000a06c  8fa20000	lw	r2,0(r29)
11461  0000a070  8fa30004	lw	r3,4(r29)
11462  0000a074  8fa40008	lw	r4,8(r29)
11463  0000a078  8fa5000c	lw	r5,12(r29)
11464  0000a07c  8fdffff8	lw	r31,-8(r30)
11465  0000a080  001ee820	add	r29,r0,r30
11466  0000a084  8fdefffc	lw	r30,-4(r30)
11467  0000a088  4be00000	jr	r31
11468  0000a08c  54000000	nop
11469  0000a090          	.endproc _chaseTail_LF9
11470  0000a090          	.data
11471  0001323e          	.align 2
11472  00013240          	LC6_LF9:
11473  00013240  25642000	.ascii "%d \000"
11474  00013244          	.align 2
11475  00013244          	LC7_LF9:
11476  00013244  52616e64	.ascii "Random number %02i is 0x%08x.\n\000"
11476  00013248  6f6d206e	
11476  0001324c  756d6265	
11476  00013250  72202530	
11476  00013254  32692069	
11476  00013258  73203078	
11476  0001325c  25303878	
11476  00013260  2e0a00  	
11477  00013263          	.text
11478  0000a090          	.align 2
11479  0000a090          	.proc _SysprocCreateProcesses
11480  0000a090          	.global _SysprocCreateProcesses
11481  0000a090          	_SysprocCreateProcesses:
11482                      ;  Function 'SysprocCreateProcesses'; 0 bytes of locals, 3 regs to save.
11483  0000a090  afbefffc	sw	-4(r29),r30; push fp
11484  0000a094  001df020	add	r30,r0,r29; fp = sp
11485  0000a098  afbffff8	sw	-8(r29),r31; push ret addr
11486  0000a09c  2fbd0018	subui	r29,r29,#24; alloc local storage
11487  0000a0a0  afa20000	sw	0(r29),r2
11488  0000a0a4  afa30004	sw	4(r29),r3
11489  0000a0a8  afa40008	sw	8(r29),r4
11490  0000a0ac  3c020001	lhi	r2,((_mysems_LF9)>>16)&0xffff
11491  0000a0b0  24423264	addui	r2,r2,(_mysems_LF9)&0xffff
11492  0000a0b4  20430090	addi	r3,r2,#144
11493  0000a0b8          	L90_LF9:
11494  0000a0b8  23bdfff8	addi	r29,r29,#-8
11495  0000a0bc  afa20000	sw	(r29),r2
11496  0000a0c0  20040001	addi	r4,r0,#1
11497  0000a0c4  afa40004	sw	4(r29),r4
11498  0000a0c8  0fffdff0	jal	_SemInit
11499  0000a0cc  54000000	nop; not filled.
11500  0000a0d0  23bd0008	addi	r29,r29,#8
11501  0000a0d4  20420010	addi	r2,r2,#16
11502  0000a0d8  0043082c	sle	r1,r2,r3
11503  0000a0dc  1420ffd8	bnez	r1,L90_LF9
11504  0000a0e0  54000000	nop; not filled.
11505  0000a0e4  8fa20000	lw	r2,0(r29)
11506  0000a0e8  8fa30004	lw	r3,4(r29)
11507  0000a0ec  8fa40008	lw	r4,8(r29)
11508  0000a0f0  8fdffff8	lw	r31,-8(r30)
11509  0000a0f4  001ee820	add	r29,r0,r30
11510  0000a0f8  8fdefffc	lw	r30,-4(r30)
11511  0000a0fc  4be00000	jr	r31
11512  0000a100  54000000	nop
11513  0000a104          	.endproc _SysprocCreateProcesses
11514  0000a104          	.data
11515  00013263          	.align 2
11516  00013264          	_mysems_LF9:
11517  00013264          	.space 160
11518                      ;;; This file just includes a single variable that contains the last address
11519                      ;;; in the operating system.  The rest of memory is available for use by
11520                      ;;; processes.
11522  00013304          	.align 2
11523  00013304          	.global _lastosaddress
11524  00013304          	_lastosaddress:
11525  00013304  0001330c	.word _lastosaddress+8
11526                      ;;; Ethan L. Miller, 1999.  Released to the public domain
11527                      ;;;
11528                      ;;; Most of the traps are called in files from libtraps.
11530  00013308          	.text
11531  0000a104          	.align 2
11532  0000a104          	.proc _exit
11533  0000a104          	.global _exit
11534  0000a104          	_exit:
11535  0000a104  44000300	trap	#0x300
11536  0000a108  4be00000	jr	r31
11537  0000a10c  54000000	nop
11538  0000a110          	.endproc _exit
11540                      ; for the benefit of gcc.
11541  0000a110          	.proc ___main
11542  0000a110          	.global ___main
11543  0000a110          	___main:
11544  0000a110  4be00000	jr	r31
11545  0000a114  54000000	nop
11546  0000a118          	.endproc ___main
11547                      ;;;
11548                      ;;; Stub functions for DLX traps.
11549                      ;;;
11550                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11551                      ;;;
11552                      ;;; There are two sets of traps here.  The traps such as Open and Close
11553                      ;;; (note the capital letters) are for use by user programs.  The traps
11554                      ;;; with names such as open and close (lower case) are for use by the OS.
11555                      ;;;
11558  0000a118          	.align 2
11559  0000a118          	.proc _open
11560  0000a118          	.global _open
11561  0000a118          	_open:
11562  0000a118  44002013	trap	#0x2013
11563  0000a11c  4be00000	jr	r31
11564  0000a120  54000000	nop
11565  0000a124          	.endproc _open
11567  0000a124          	.proc _close
11568  0000a124          	.global _close
11569  0000a124          	_close:
11570  0000a124  44002014	trap	#0x2014
11571  0000a128  4be00000	jr	r31
11572  0000a12c  54000000	nop
11573  0000a130          	.endproc _close
11575  0000a130          	.proc _read
11576  0000a130          	.global _read
11577  0000a130          	_read:
11578  0000a130  44002010	trap	#0x2010
11579  0000a134  4be00000	jr	r31
11580  0000a138  54000000	nop
11581  0000a13c          	.endproc _read
11583  0000a13c          	.proc _write
11584  0000a13c          	.global _write
11585  0000a13c          	_write:
11586  0000a13c  44002011	trap	#0x2011
11587  0000a140  4be00000	jr	r31
11588  0000a144  54000000	nop
11589  0000a148          	.endproc _write
11591  0000a148          	.proc _lseek
11592  0000a148          	.global _lseek
11593  0000a148          	_lseek:
11594  0000a148  44002012	trap	#0x2012
11595  0000a14c  4be00000	jr	r31
11596  0000a150  54000000	nop
11597  0000a154          	.endproc _lseek
11599                      ;;; The following are the traps to be used by user-level programs
11600                      ;;;
11602  0000a154          	.align 2
11603  0000a154          	.proc _Open
11604  0000a154          	.global _Open
11605  0000a154          	_Open:
11606  0000a154  44000213	trap	#0x213
11607  0000a158  4be00000	jr	r31
11608  0000a15c  54000000	nop
11609  0000a160          	.endproc _Open
11611  0000a160          	.proc _Close
11612  0000a160          	.global _Close
11613  0000a160          	_Close:
11614  0000a160  44000214	trap	#0x214
11615  0000a164  4be00000	jr	r31
11616  0000a168  54000000	nop
11617  0000a16c          	.endproc _Close
11619  0000a16c          	.proc _Read
11620  0000a16c          	.global _Read
11621  0000a16c          	_Read:
11622  0000a16c  44000210	trap	#0x210
11623  0000a170  4be00000	jr	r31
11624  0000a174  54000000	nop
11625  0000a178          	.endproc _Read
11627  0000a178          	.proc _Write
11628  0000a178          	.global _Write
11629  0000a178          	_Write:
11630  0000a178  44000211	trap	#0x211
11631  0000a17c  4be00000	jr	r31
11632  0000a180  54000000	nop
11633  0000a184          	.endproc _Write
11635  0000a184          	.proc _Lseek
11636  0000a184          	.global _Lseek
11637  0000a184          	_Lseek:
11638  0000a184  44000212	trap	#0x212
11639  0000a188  4be00000	jr	r31
11640  0000a18c  54000000	nop
11641  0000a190          	.endproc _Lseek
11643                      ;;;
11644                      ;;; Stub functions for DLX traps.
11645                      ;;;
11646                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11647                      ;;;
11648                      ;;; There are two exit traps.  The first, _exitsim, actually exits the
11649                      ;;; simulator.  The second, _exit, simply calls a regular trap in the
11650                      ;;; DLX simulator, and would be suitable for a user program that wants
11651                      ;;; to signal the OS that it's exiting.
11652                      ;;;
11653                      ;;; IMPORTANT: all code that's run "native" on the simulator - OS code and
11654                      ;;; programs run without an OS - should call exitsim() rather than just
11655                      ;;; falling through to exit.
11656                      ;;;
11659  0000a190          	.align 2
11660  0000a190          	.proc _exitsim
11661  0000a190          	.global _exitsim
11662  0000a190          	_exitsim:
11663  0000a190  44002f00	trap	#0x2f00
11664  0000a194  4be00000	jr	r31
11665  0000a198  54000000	nop
11666  0000a19c          	.endproc _exitsim
11668  0000a19c          	.proc _exit
11669  0000a19c          	.global _exit
11670  0000a19c          	_exit:
11671  0000a19c  44000300	trap	#0x300
11672  0000a1a0  4be00000	jr	r31
11673  0000a1a4  54000000	nop
11674  0000a1a8          	.endproc _exit
11676                      ;
11677                      ; Stub functions for DLX traps.
11678                      ;
11679                      ; Aaron Sawdey 1996; released to the Public Domain.
11680                      ;
11682  0000a1a8          	.proc _printf
11683  0000a1a8          	.global _printf
11684  0000a1a8          	_printf:
11685  0000a1a8  44002001	trap	#0x2001
11686  0000a1ac  4be00000	jr	r31
11687  0000a1b0  54000000	nop
11688  0000a1b4          	.endproc _printf
11690  0000a1b4          	.text
11691  0000a1b4          	.global _etext
11692  0000a1b4          	_etext:
11693  0000a1b4          	.align 3
11694  0000a1b8          	.data
11695  00013308          	.global _edata
11696  00013308          	_edata:
